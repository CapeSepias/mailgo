{"version":3,"sources":["webpack://mailgo/../src/mailgo.scss","webpack://mailgo/../node_modules/css-loader/dist/runtime/api.js","webpack://mailgo/../src/mailgo.scss?81f2","webpack://mailgo/../src/constants.ts","webpack://mailgo/../src/utils.ts","webpack://mailgo/../src/mailgo.ts","webpack://mailgo/../src/mobile-detect.ts","webpack://mailgo/./mailgo.dist.dark.ts","webpack://mailgo/webpack/bootstrap","webpack://mailgo/webpack/runtime/make namespace object","webpack://mailgo/webpack/startup"],"names":["___CSS_LOADER_EXPORT___","___CSS_LOADER_API_IMPORT___","i","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","concat","join","modules","mediaQuery","dedupe","alreadyImportedModules","length","_i","result","MAILTO","MAILGO","TEL","CALLTO","SMS","MAILGO_MAIL","MAILGO_TEL","MAILGO_SMS","CLASSIC","LESS_SPAM","spanHTMLTag","aHTMLTag","pHTMLTag","notNumber","RegExp","leadingZeros","validateEmail","email","test","validateEmails","arr","every","copyToClipboard","str","el","document","createElement","value","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","setFocusLoop","ref","modal","querySelector","addEventListener","leaveLastLink","leaveFirstLink","e","code","shiftKey","preventDefault","target","closest","focus","strings","config","activeMailgoType","modalMailto","modalTel","url","href","lessSpamHref","mail","cc","bcc","subject","bodyMail","customActionText","customActionTitle","customActionUrl","tel","msg","telegramUsername","skypeUsername","title","titleTel","detailCc","detailBcc","detailSubject","detailBody","detailMsg","ccValue","bccValue","subjectValue","bodyValue","msgValue","activatedLink","gmail","outlook","yahoo","open","telegram","wa","skype","call","copyMail","copyTel","customAction","mailgoCSS","require","lang","defaultStrings","translations","isMobile","mailtoEnabled","telEnabled","smsEnabled","desktopEnabled","mobileEnabled","validateEmailConfig","validateTelConfig","showFooterConfig","loadCSSConfig","mailgoInit","navigator","userAgent","desktop","mobile","mailgoSetLanguage","mailgoExists","getElementById","display","classList","add","dark","enableDarkMode","disableDarkMode","modalBackground","className","modalContent","details","ccSpan","createTextNode","cc_","bccSpan","bcc_","subjectSpan","subject_","bodySpan","body_","open_in_","gmailSpan","mailgoConfigAttributeEnabled","outlookSpan","yahooSpan","openSpan","_default","copy","showFooter","byElement","hideMailgo","mailgoTelExists","detailsTel","msgSpan","telegramSpan","waSpan","whatsapp","skypeSpan","callSpan","_as_default","mailgoClickListener","event","contains","mailgoIsShowing","path","composedPath","forEach","element","HTMLDocument","Window","localMailgoType","getMailgoTypeByElement","activeMailgoModalType","type","mailgoPreRender","mailgoElementOrUrl","mailgoElement","text","maxLength","installation","getAttribute","validateUrl","decodeURIComponent","split","trim","urlParams","URL","searchParams","get","error","console","log","encodeURIComponent","parameters","buildLessSpamHref","substr","validateTel","hasAttribute","mailgoRender","textContent","openGmail","openOutlook","openYahooMail","openDefault","openCustomAction","openWhatsApp","openTelegram","openSkype","showMailgo","mailgoKeydown","urlString","gmailUrl","window","startingOutlookUrl","office365","outlookUrl","yahooUrl","tgUrl","skypeUrl","whatappTel","replace","waUrl","location","activeCopy","copied","setTimeout","customActionUrlEncoded","encodeURI","regexValidate","linkElement","elementHref","keyboardEvent","keyCode","setModalDisplay","removeEventListener","getModalDisplay","by","rel","getModalHTMLElement","activeElement","remove","tagName","parentElement","joinedParams","attribute","actions","languageType","languages","htmlLang","documentElement","language","mailgo","mailgoConfig","loadCSS","mailto","sms","mailgoCSSElement","head","mailgoStyle","initEvent","listenerOptions","mailgoCheckRender","mailgoDirectRender","directUrl","mailgoValidateEmail","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","r","Symbol","toStringTag","Object","defineProperty","__webpack_exports__"],"mappings":"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","file":"mailgo.dark.min.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".m-modal{position:fixed;top:0;right:0;bottom:0;left:0;justify-content:center;align-items:center;flex-direction:column;overflow:hidden;font-size:16.5px;z-index:10000}.m-modal p,.m-modal span,.m-modal strong,.m-modal a{margin:0;padding:0;font-size:100%;line-height:1;font-family:-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,Helvetica,Arial,sans-serif,\\\"Apple Color Emoji\\\",\\\"Segoe UI Emoji\\\",\\\"Segoe UI Symbol\\\";text-rendering:optimizeLegibility}.m-modal strong{font-weight:700}.m-modal .m-modal-back{position:absolute;z-index:10001;top:0;right:0;bottom:0;left:0;background-color:#20232a;opacity:.8}.m-modal .m-modal-content{position:relative;z-index:10002;box-sizing:content-box;text-align:center;overflow:hidden;min-width:200px;max-width:240px;background-color:#fff;opacity:.95;border-radius:20px;box-shadow:0 3px 20px rgba(32,35,42,.5);border:3px solid #333;color:#4a4a4a;display:flex;flex-direction:column;overflow:auto;padding:24px;transition:.5s box-shadow}.m-modal .m-modal-content:hover,.m-modal .m-modal-content:focus,.m-modal .m-modal-content:active{opacity:1}.m-modal .m-modal-content .m-title{margin-bottom:8px;overflow:hidden;white-space:pre-line;text-overflow:ellipsis;line-height:1.2em}.m-modal .m-modal-content .m-details{margin-bottom:10px}.m-modal .m-modal-content .m-details p{white-space:pre-line;font-size:12px;margin-top:3px;margin-bottom:3px}.m-modal .m-modal-content a{cursor:pointer;padding:10px;color:#4a4a4a;border-radius:20px;text-decoration:none}.m-modal .m-modal-content a.m-gmail{color:#c0372a}.m-modal .m-modal-content a.m-gmail:hover,.m-modal .m-modal-content a.m-gmail:focus,.m-modal .m-modal-content a.m-gmail:active{background-color:rgba(192,55,42,.08);color:#c0372a}.m-modal .m-modal-content a.m-outlook{color:#0967aa}.m-modal .m-modal-content a.m-outlook:hover,.m-modal .m-modal-content a.m-outlook:focus,.m-modal .m-modal-content a.m-outlook:active{background-color:rgba(9,103,170,.08);color:#0967aa}.m-modal .m-modal-content a.m-yahoo{color:#4a00a0}.m-modal .m-modal-content a.m-yahoo:hover,.m-modal .m-modal-content a.m-yahoo:focus,.m-modal .m-modal-content a.m-yahoo:active{background-color:rgba(74,0,160,.08);color:#4a00a0}.m-modal .m-modal-content a.m-tg{color:#086da0}.m-modal .m-modal-content a.m-tg:hover,.m-modal .m-modal-content a.m-tg:focus,.m-modal .m-modal-content a.m-tg:active{background-color:rgba(8,109,160,.08);color:#086da0}.m-modal .m-modal-content a.m-wa{color:#067466}.m-modal .m-modal-content a.m-wa:hover,.m-modal .m-modal-content a.m-wa:focus,.m-modal .m-modal-content a.m-wa:active{background-color:rgba(6,116,102,.08);color:#067466}.m-modal .m-modal-content a.m-skype{color:#076d92}.m-modal .m-modal-content a.m-skype:hover,.m-modal .m-modal-content a.m-skype:focus,.m-modal .m-modal-content a.m-skype:active{background-color:rgba(7,109,146,.08);color:#076d92}.m-modal .m-modal-content a.m-copy{padding:16px 10px;font-size:16px}.m-modal .m-modal-content a.m-default:hover,.m-modal .m-modal-content a.m-default:focus,.m-modal .m-modal-content a.m-default:active,.m-modal .m-modal-content a.m-copy:hover,.m-modal .m-modal-content a.m-copy:focus,.m-modal .m-modal-content a.m-copy:active{background-color:rgba(0,0,0,.08);color:#4a4a4a}.m-modal .m-modal-content a.m-custom-action{color:#0b790b}.m-modal .m-modal-content a.m-custom-action:hover,.m-modal .m-modal-content a.m-custom-action:focus,.m-modal .m-modal-content a.m-custom-action:active{background-color:rgba(11,121,11,.08);color:#0b790b}.m-modal .m-modal-content a.m-by{font-size:12px;margin-top:.8rem;padding:5px;color:#4a4a4a}.m-modal .m-modal-content a.m-by:hover,.m-modal .m-modal-content a.m-by:focus,.m-modal .m-modal-content a.m-by:active{color:#3d3d3d}.m-modal .m-modal-content .w-500{font-weight:500}.m-modal.m-dark .m-modal-content{background-color:#20232a}.m-modal.m-dark .m-modal-content,.m-modal.m-dark .m-modal-content p,.m-modal.m-dark .m-modal-content p span,.m-modal.m-dark .m-modal-content strong{color:#fff}.m-modal.m-dark .m-modal-content a{color:#eaeaea}.m-modal.m-dark .m-modal-content a:not(.m-by):hover,.m-modal.m-dark .m-modal-content a:not(.m-by):focus,.m-modal.m-dark .m-modal-content a:not(.m-by):active{background-color:rgba(134,134,134,.08);color:#eaeaea}.m-modal.m-dark .m-modal-content a.m-gmail{color:#e07d73}.m-modal.m-dark .m-modal-content a.m-gmail:hover,.m-modal.m-dark .m-modal-content a.m-gmail:focus,.m-modal.m-dark .m-modal-content a.m-gmail:active{background-color:rgba(224,125,115,.08);color:#e07d73}.m-modal.m-dark .m-modal-content a.m-outlook{color:#4c9cd7}.m-modal.m-dark .m-modal-content a.m-outlook:hover,.m-modal.m-dark .m-modal-content a.m-outlook:focus,.m-modal.m-dark .m-modal-content a.m-outlook:active{background-color:rgba(76,156,215,.08);color:#4c9cd7}.m-modal.m-dark .m-modal-content a.m-yahoo{color:#ac88d3}.m-modal.m-dark .m-modal-content a.m-yahoo:hover,.m-modal.m-dark .m-modal-content a.m-yahoo:focus,.m-modal.m-dark .m-modal-content a.m-yahoo:active{background-color:rgba(172,136,211,.08);color:#ac88d3}.m-modal.m-dark .m-modal-content a.m-tg{color:#4cabdb}.m-modal.m-dark .m-modal-content a.m-tg:hover,.m-modal.m-dark .m-modal-content a.m-tg:focus,.m-modal.m-dark .m-modal-content a.m-tg:active{background-color:rgba(76,171,219,.08);color:#4cabdb}.m-modal.m-dark .m-modal-content a.m-wa{color:#4cd2c0}.m-modal.m-dark .m-modal-content a.m-wa:hover,.m-modal.m-dark .m-modal-content a.m-wa:focus,.m-modal.m-dark .m-modal-content a.m-wa:active{background-color:rgba(76,210,192,.08);color:#4cd2c0}.m-modal.m-dark .m-modal-content a.m-skype{color:#4cc7f4}.m-modal.m-dark .m-modal-content a.m-skype:hover,.m-modal.m-dark .m-modal-content a.m-skype:focus,.m-modal.m-dark .m-modal-content a.m-skype:active{background-color:rgba(76,199,244,.08);color:#4cc7f4}.m-modal.m-dark .m-modal-content a.m-custom-action{color:#b0ecb0}.m-modal.m-dark .m-modal-content a.m-custom-action:hover,.m-modal.m-dark .m-modal-content a.m-custom-action:focus,.m-modal.m-dark .m-modal-content a.m-custom-action:active{background-color:rgba(176,236,176,.08);color:#b0ecb0}.m-modal.m-dark .m-modal-content a.m-by:hover,.m-modal.m-dark .m-modal-content a.m-by:focus,.m-modal.m-dark .m-modal-content a.m-by:active{color:#fff}\", \"\"]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\n        var result = require(\"!!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../node_modules/sass-loader/dist/cjs.js!./mailgo.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","import { MailgoModalType, MailgoInstallationType } from \"mailgo\";\r\n\r\n// links\r\nexport const MAILTO: string = \"mailto:\";\r\nexport const MAILGO: string = \"mailgo:\";\r\nexport const TEL: string = \"tel:\";\r\nexport const CALLTO: string = \"callto:\";\r\nexport const SMS: string = \"sms:\";\r\n\r\n// deep linking\r\nexport const outlookDeepLink: string = \"ms-outlook://\";\r\n\r\n// no mailgo class\r\nexport const NO_MAILGO: string = \"no-mailgo\";\r\n\r\n// responsive settings\r\nexport const DESKTOP: string = \"desktop\";\r\nexport const MOBILE: string = \"mobile\";\r\n\r\n// mailgo modal types\r\nexport const MAILGO_MAIL: MailgoModalType = \"mailgo\";\r\nexport const MAILGO_TEL: MailgoModalType = \"mailgo-tel\";\r\nexport const MAILGO_SMS: MailgoModalType = \"mailgo-sms\";\r\n\r\n// mailgo installation types\r\nexport const CLASSIC: MailgoInstallationType = \"classic\";\r\nexport const LESS_SPAM: MailgoInstallationType = \"less-spam\";\r\n\r\n// useful html tags\r\nexport const spanHTMLTag: string = \"span\";\r\nexport const aHTMLTag: string = \"a\";\r\nexport const pHTMLTag: string = \"p\";\r\n\r\n// default lang\r\nexport const defaultLang: string = \"en\";\r\n\r\n// useful regexp\r\nexport const notNumber: RegExp = new RegExp(\"[^0-9/]\", \"gi\");\r\nexport const leadingZeros: RegExp = new RegExp(\"^0+\", \"gi\");\r\n\r\n// custom action\r\nexport const customActionTextMaxLength: number = 20;\r\n","// validate a single email with regex\r\nexport const validateEmail = (email: string): boolean =>\r\n  /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n    email\r\n  );\r\n\r\n// validate an array of emails\r\nexport const validateEmails = (arr: string[]): boolean =>\r\n  arr.every(validateEmail);\r\n\r\n// validate a single tel with regex\r\nexport const validateTel = (tel: string): boolean =>\r\n  /^[+]{0,1}[\\s0-9]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*[p]{0,1}[\\s0-9]*$/.test(\r\n    tel\r\n  );\r\n\r\n// copy of a string\r\nexport const copyToClipboard = (str: string): boolean => {\r\n  let el: HTMLTextAreaElement = document.createElement(\r\n    \"textarea\"\r\n  ) as HTMLTextAreaElement;\r\n  el.value = str;\r\n  el.setAttribute(\"readonly\", \"\");\r\n  el.style.position = \"absolute\";\r\n  el.style.left = \"-9999px\";\r\n  document.body.appendChild(el);\r\n  let selected: Range | boolean =\r\n    document.getSelection().rangeCount > 0\r\n      ? document.getSelection().getRangeAt(0)\r\n      : false;\r\n  el.select();\r\n  document.execCommand(\"copy\");\r\n  document.body.removeChild(el);\r\n  if (selected) {\r\n    document.getSelection().removeAllRanges();\r\n    document.getSelection().addRange(selected);\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\n// set focus loop within modal\r\nexport const setFocusLoop = (ref: HTMLElement): void => {\r\n  let modal = ref;\r\n  modal\r\n    .querySelector(\".m-modal-content a:last-of-type\")\r\n    .addEventListener(\"keydown\", leaveLastLink);\r\n  modal\r\n    .querySelector(\".m-modal-content a:first-of-type\")\r\n    .addEventListener(\"keydown\", leaveFirstLink);\r\n};\r\n\r\nexport const leaveLastLink = (e: KeyboardEvent): void => {\r\n  // going back to the first link to force looping\r\n  if (e.code === \"Tab\" && e.shiftKey === false) {\r\n    e.preventDefault();\r\n\r\n    ((e.target as HTMLElement)\r\n      .closest(\"div\")\r\n      .querySelector(\"a:first-of-type\") as HTMLElement).focus();\r\n  }\r\n};\r\n\r\nexport const leaveFirstLink = (e: KeyboardEvent): void => {\r\n  // going back to the first link to force looping\r\n  if (e.code === \"Tab\" && e.shiftKey === true) {\r\n    e.preventDefault();\r\n    ((e.target as HTMLElement)\r\n      .closest(\"div\")\r\n      .querySelector(\"a:last-of-type\") as HTMLElement).focus();\r\n  }\r\n};\r\n\r\nexport const truncate = (text: string, maxLength: number): string => {\r\n  return text && text.length > maxLength\r\n    ? text.substr(0, maxLength - 1) + \"...\"\r\n    : text;\r\n};\r\n","import {\r\n  MailgoConfig,\r\n  MailgoTranslations,\r\n  MailgoTranslation,\r\n  MailgoAction,\r\n  MailgoLanguages,\r\n  MailgoType,\r\n  MailgoDetail,\r\n  MailgoInstallationType,\r\n  MailgoModalType,\r\n} from \"mailgo\";\r\n\r\n// polyfill\r\n// import { mailgoPolyfill } from \"./polyfill\";\r\n\r\n// constants\r\nimport {\r\n  MAILTO,\r\n  MAILGO,\r\n  TEL,\r\n  CALLTO,\r\n  SMS,\r\n  MAILGO_MAIL,\r\n  MAILGO_TEL,\r\n  MAILGO_SMS,\r\n  CLASSIC,\r\n  LESS_SPAM,\r\n  NO_MAILGO,\r\n  MOBILE,\r\n  spanHTMLTag,\r\n  aHTMLTag,\r\n  pHTMLTag,\r\n  defaultLang,\r\n  notNumber,\r\n  leadingZeros,\r\n  customActionTextMaxLength,\r\n} from \"./constants\";\r\n\r\n// utils\r\nimport {\r\n  validateEmail,\r\n  validateEmails,\r\n  validateTel,\r\n  copyToClipboard,\r\n  setFocusLoop,\r\n  truncate,\r\n} from \"./utils\";\r\n\r\n// i18n for mailgo\r\nimport languages from \"../i18n/languages.json\";\r\nimport translations from \"../i18n/translations.json\";\r\n\r\n// mobile detect\r\nimport { userAgent } from \"./mobile-detect\";\r\n\r\n// mailgo scss, with toString (https://github.com/webpack-contrib/css-loader#tostring)\r\nconst mailgoCSS: string = require(\"./mailgo.scss\").toString();\r\n\r\n// default language\r\nlet lang: string = defaultLang;\r\n\r\n// default strings\r\nconst defaultStrings: MailgoTranslation = (translations as MailgoTranslations)[\r\n  defaultLang\r\n];\r\n\r\n// translation strings\r\nlet strings: MailgoTranslation;\r\n\r\n// global mailgo config object\r\nlet config: MailgoConfig;\r\n\r\n// config to check if the client is mobile or desktop\r\nlet isMobile: boolean = false;\r\n\r\n// default config attributes\r\nlet mailtoEnabled: boolean = true;\r\nlet telEnabled: boolean = true;\r\nlet smsEnabled: boolean = false;\r\nlet desktopEnabled: boolean = true;\r\nlet mobileEnabled: boolean = true;\r\nlet validateEmailConfig: boolean = true;\r\nlet validateTelConfig: boolean = true;\r\nlet showFooterConfig: boolean = true;\r\nlet loadCSSConfig: boolean = true;\r\n\r\n// activeMailgoType\r\nlet activeMailgoType: MailgoType;\r\n\r\n// modals global object\r\nlet modalMailto: HTMLElement, modalTel: HTMLElement;\r\n\r\n// mailgo general variables\r\nlet url: URL, href: string, lessSpamHref: string;\r\n\r\n// mailgo mail variables\r\nlet mail: string, cc: string, bcc: string, subject: string, bodyMail: string;\r\n\r\n// mailgo mail custom action variables\r\nlet customActionText: string,\r\n  customActionTitle: string,\r\n  customActionUrl: string;\r\n\r\n// mailgo tel variables\r\nlet tel: string, msg: string, telegramUsername: string, skypeUsername: string;\r\n\r\n// the DOM elements\r\nlet title: HTMLElement,\r\n  titleTel: HTMLElement,\r\n  detailCc: HTMLElement,\r\n  detailBcc: HTMLElement,\r\n  detailSubject: HTMLElement,\r\n  detailBody: HTMLElement,\r\n  detailMsg: HTMLElement,\r\n  ccValue: HTMLElement,\r\n  bccValue: HTMLElement,\r\n  subjectValue: HTMLElement,\r\n  bodyValue: HTMLElement,\r\n  msgValue: HTMLElement,\r\n  activatedLink: HTMLElement;\r\n\r\n// mailgo buttons (actions)\r\nlet gmail: HTMLLinkElement,\r\n  outlook: HTMLLinkElement,\r\n  yahoo: HTMLLinkElement,\r\n  open: HTMLLinkElement,\r\n  telegram: HTMLLinkElement,\r\n  wa: HTMLLinkElement,\r\n  skype: HTMLLinkElement,\r\n  call: HTMLLinkElement,\r\n  copyMail: HTMLLinkElement,\r\n  copyTel: HTMLLinkElement,\r\n  customAction: HTMLLinkElement;\r\n\r\n/**\r\n * mailgoInit\r\n * the function that creates the mailgo elements in DOM\r\n */\r\nconst mailgoInit = (): void => {\r\n  // set the boolean for mobile/desktop\r\n  isMobile = userAgent() === MOBILE;\r\n\r\n  // responsive settings\r\n  {\r\n    if (typeof config?.desktop !== \"undefined\") {\r\n      desktopEnabled = config.desktop;\r\n      // if it is a desktop and desktop is not enabled no init mailgo\r\n      if (!isMobile && !desktopEnabled) {\r\n        return;\r\n      }\r\n    }\r\n    if (typeof config?.mobile !== \"undefined\") {\r\n      mobileEnabled = config.mobile;\r\n      // if it is a mobile and mobile is not enabled no init mailgo\r\n      if (isMobile && !mobileEnabled) {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  // set the mailgo language\r\n  mailgoSetLanguage();\r\n\r\n  // mailgo, if mailgo not already exists\r\n  let mailgoExists = !!document.getElementById(MAILGO_MAIL);\r\n\r\n  // if mailgo is enabled for mailto and it not exists in DOM\r\n  if (mailtoEnabled && !mailgoExists) {\r\n    // modal\r\n    modalMailto = createElement() as HTMLElement;\r\n    modalMailto.style.display = \"none\";\r\n    modalMailto.id = MAILGO_MAIL;\r\n    modalMailto.classList.add(\"m-modal\");\r\n    modalMailto.setAttribute(\"role\", \"dialog\");\r\n    modalMailto.setAttribute(\"tabindex\", \"-1\");\r\n    modalMailto.setAttribute(\"aria-labelledby\", \"m-title\");\r\n\r\n    // if dark is in config\r\n    if (config?.dark) {\r\n      enableDarkMode();\r\n    } else {\r\n      disableDarkMode();\r\n    }\r\n\r\n    // background\r\n    let modalBackground: HTMLElement = createElement();\r\n    modalBackground.className = \"m-modal-back\";\r\n    modalMailto.appendChild(modalBackground);\r\n\r\n    // modal content\r\n    let modalContent: HTMLElement = createElement();\r\n    modalContent.className = \"m-modal-content\";\r\n    modalMailto.appendChild(modalContent);\r\n\r\n    // title (email address)\r\n    title = createElement(\"strong\");\r\n    title.id = \"m-title\";\r\n    title.className = \"m-title\";\r\n    modalContent.appendChild(title);\r\n\r\n    // details\r\n    let details: HTMLElement = createElement();\r\n    details.id = \"m-details\";\r\n    details.className = \"m-details\";\r\n\r\n    detailCc = createElement(pHTMLTag);\r\n    detailCc.id = \"m-cc\";\r\n    let ccSpan: HTMLElement = createElement(spanHTMLTag);\r\n    ccSpan.className = \"w-500\";\r\n    ccSpan.appendChild(createTextNode(strings.cc_ || defaultStrings.cc_));\r\n    ccValue = createElement(spanHTMLTag);\r\n    ccValue.id = \"m-cc-value\";\r\n    detailCc.appendChild(ccSpan);\r\n    detailCc.appendChild(ccValue);\r\n    details.appendChild(detailCc);\r\n\r\n    detailBcc = createElement(pHTMLTag);\r\n    detailBcc.id = \"m-bcc\";\r\n    let bccSpan: HTMLElement = createElement(spanHTMLTag);\r\n    bccSpan.className = \"w-500\";\r\n    bccSpan.appendChild(createTextNode(strings.bcc_ || defaultStrings.bcc_));\r\n    bccValue = createElement(spanHTMLTag);\r\n    bccValue.id = \"m-bcc-value\";\r\n    detailBcc.appendChild(bccSpan);\r\n    detailBcc.appendChild(bccValue);\r\n    details.appendChild(detailBcc);\r\n\r\n    detailSubject = createElement(pHTMLTag);\r\n    detailSubject.id = \"m-subject\";\r\n    let subjectSpan: HTMLElement = createElement(spanHTMLTag);\r\n    subjectSpan.className = \"w-500\";\r\n    subjectSpan.appendChild(\r\n      createTextNode(strings.subject_ || defaultStrings.subject_)\r\n    );\r\n    subjectValue = createElement(spanHTMLTag);\r\n    subjectValue.id = \"m-subject-value\";\r\n    detailSubject.appendChild(subjectSpan);\r\n    detailSubject.appendChild(subjectValue);\r\n    details.appendChild(detailSubject);\r\n\r\n    detailBody = createElement(pHTMLTag);\r\n    detailBody.id = \"m-body\";\r\n    let bodySpan: HTMLElement = createElement(spanHTMLTag);\r\n    bodySpan.className = \"w-500\";\r\n    bodySpan.appendChild(createTextNode(strings.body_ || defaultStrings.body_));\r\n    bodyValue = createElement(spanHTMLTag);\r\n    bodyValue.id = \"m-body-value\";\r\n    detailBody.appendChild(bodySpan);\r\n    detailBody.appendChild(bodyValue);\r\n    details.appendChild(detailBody);\r\n\r\n    modalContent.appendChild(details);\r\n\r\n    // Gmail\r\n    gmail = createElement(aHTMLTag) as HTMLLinkElement;\r\n    gmail.id = \"m-gmail\";\r\n    gmail.href = \"#mailgo-gmail\";\r\n    gmail.classList.add(\"m-open\");\r\n    gmail.classList.add(\"m-gmail\");\r\n    gmail.appendChild(\r\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\r\n    );\r\n    let gmailSpan: HTMLElement = createElement(spanHTMLTag);\r\n    gmailSpan.className = \"w-500\";\r\n    gmailSpan.appendChild(\r\n      createTextNode(strings.gmail || defaultStrings.gmail)\r\n    );\r\n    gmail.appendChild(gmailSpan);\r\n\r\n    if (mailgoConfigAttributeEnabled(\"action\", \"gmail\")) {\r\n      modalContent.appendChild(gmail);\r\n    }\r\n\r\n    // Outlook\r\n    outlook = createElement(aHTMLTag) as HTMLLinkElement;\r\n    outlook.id = \"m-outlook\";\r\n    outlook.href = \"#mailgo-outlook\";\r\n    outlook.classList.add(\"m-open\");\r\n    outlook.classList.add(\"m-outlook\");\r\n    outlook.appendChild(\r\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\r\n    );\r\n    let outlookSpan: HTMLElement = createElement(spanHTMLTag);\r\n    outlookSpan.className = \"w-500\";\r\n    outlookSpan.appendChild(\r\n      createTextNode(strings.outlook || defaultStrings.outlook)\r\n    );\r\n    outlook.appendChild(outlookSpan);\r\n\r\n    if (mailgoConfigAttributeEnabled(\"action\", \"outlook\")) {\r\n      modalContent.appendChild(outlook);\r\n    }\r\n\r\n    // Outlook\r\n    yahoo = createElement(aHTMLTag) as HTMLLinkElement;\r\n    yahoo.id = \"m-yahoo\";\r\n    yahoo.href = \"#mailgo-yahoo\";\r\n    yahoo.classList.add(\"m-open\");\r\n    yahoo.classList.add(\"m-yahoo\");\r\n    yahoo.appendChild(\r\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\r\n    );\r\n    let yahooSpan: HTMLElement = createElement(spanHTMLTag);\r\n    yahooSpan.className = \"w-500\";\r\n    yahooSpan.appendChild(\r\n      createTextNode(strings.yahoo || defaultStrings.yahoo)\r\n    );\r\n    yahoo.appendChild(yahooSpan);\r\n\r\n    if (mailgoConfigAttributeEnabled(\"action\", \"yahoo\")) {\r\n      modalContent.appendChild(yahoo);\r\n    }\r\n\r\n    // open default\r\n    open = createElement(aHTMLTag) as HTMLLinkElement;\r\n    open.id = \"m-open\";\r\n    open.href = \"#mailgo-open\";\r\n    open.classList.add(\"m-open\");\r\n    open.classList.add(\"m-default\");\r\n    let openSpan: HTMLElement = createElement(spanHTMLTag);\r\n    openSpan.className = \"w-500\";\r\n    openSpan.appendChild(createTextNode(strings.open || defaultStrings.open));\r\n    open.appendChild(openSpan);\r\n    open.appendChild(\r\n      createTextNode(strings._default || defaultStrings._default)\r\n    );\r\n\r\n    modalContent.appendChild(open);\r\n\r\n    // copy\r\n    copyMail = createElement(aHTMLTag) as HTMLLinkElement;\r\n    copyMail.id = \"m-copy\";\r\n    copyMail.href = \"#mailgo-copy\";\r\n    copyMail.classList.add(\"m-copy\");\r\n    copyMail.classList.add(\"w-500\");\r\n    copyMail.appendChild(createTextNode(strings.copy || defaultStrings.copy));\r\n\r\n    modalContent.appendChild(copyMail);\r\n\r\n    // custom action\r\n    customAction = createElement(aHTMLTag) as HTMLLinkElement;\r\n    customAction.id = \"m-custom-action\";\r\n    customAction.href = \"#mailgo-custom-action\";\r\n    customAction.classList.add(\"m-open\");\r\n    customAction.classList.add(\"m-custom-action\");\r\n    if (mailgoConfigAttributeEnabled(\"action\", \"custom\")) {\r\n      modalContent.appendChild(customAction);\r\n    }\r\n\r\n    // hide mailgo.dev in footer only if showFooter is defined and equal to false\r\n    if (typeof config?.showFooter !== \"undefined\") {\r\n      showFooterConfig = config.showFooter;\r\n    }\r\n\r\n    if (showFooterConfig) {\r\n      modalContent.appendChild(byElement());\r\n    }\r\n\r\n    // add the modal at the end of the body\r\n    document.body.appendChild(modalMailto);\r\n\r\n    // every click outside the modal will hide the modal\r\n    modalBackground.addEventListener(\"click\", hideMailgo);\r\n  }\r\n\r\n  // mailgo tel, if mailgo-tel not already exists\r\n  let mailgoTelExists = !!document.getElementById(MAILGO_TEL);\r\n\r\n  // if mailgo is enabled for tel/callto and it not exists in DOM\r\n  if (telEnabled && !mailgoTelExists) {\r\n    // modal\r\n    modalTel = createElement() as HTMLElement;\r\n    modalTel.style.display = \"none\";\r\n    modalTel.id = MAILGO_TEL;\r\n    modalTel.classList.add(\"m-modal\");\r\n    modalTel.setAttribute(\"role\", \"dialog\");\r\n    modalTel.setAttribute(\"tabindex\", \"-1\");\r\n    modalTel.setAttribute(\"aria-labelledby\", \"m-tel-title\");\r\n\r\n    // if dark is in config\r\n    if (config?.dark) {\r\n      enableDarkMode();\r\n    } else {\r\n      disableDarkMode();\r\n    }\r\n\r\n    // background\r\n    let modalBackground: HTMLElement = createElement();\r\n    modalBackground.className = \"m-modal-back\";\r\n    modalTel.appendChild(modalBackground);\r\n\r\n    // modal content\r\n    let modalContent: HTMLElement = createElement();\r\n    modalContent.className = \"m-modal-content\";\r\n    modalTel.appendChild(modalContent);\r\n\r\n    // title (telephone number)\r\n    titleTel = createElement(\"strong\");\r\n    titleTel.id = \"m-tel-title\";\r\n    titleTel.className = \"m-title\";\r\n    modalContent.appendChild(titleTel);\r\n\r\n    // details\r\n    let detailsTel: HTMLElement = createElement();\r\n    detailsTel.id = \"m-tel-details\";\r\n    detailsTel.className = \"m-details\";\r\n\r\n    detailMsg = createElement(pHTMLTag);\r\n    detailMsg.id = \"m-msg\";\r\n    let msgSpan: HTMLElement = createElement(spanHTMLTag);\r\n    msgSpan.className = \"w-500\";\r\n    msgSpan.appendChild(createTextNode(strings.body_ || defaultStrings.body_));\r\n    msgValue = createElement(spanHTMLTag);\r\n    msgValue.id = \"m-msg-value\";\r\n    detailMsg.appendChild(msgSpan);\r\n    detailMsg.appendChild(msgValue);\r\n    detailsTel.appendChild(detailMsg);\r\n\r\n    modalContent.appendChild(detailsTel);\r\n\r\n    // Telegram\r\n    telegram = createElement(aHTMLTag) as HTMLLinkElement;\r\n    telegram.id = \"m-tg\";\r\n    telegram.href = \"#mailgo-telegram\";\r\n    telegram.classList.add(\"m-open\");\r\n    telegram.classList.add(\"m-tg\");\r\n\r\n    // by default not display\r\n    telegram.style.display = \"none\";\r\n\r\n    telegram.appendChild(\r\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\r\n    );\r\n    let telegramSpan: HTMLElement = createElement(spanHTMLTag);\r\n    telegramSpan.className = \"w-500\";\r\n    telegramSpan.appendChild(\r\n      createTextNode(strings.telegram || defaultStrings.telegram)\r\n    );\r\n    telegram.appendChild(telegramSpan);\r\n\r\n    if (mailgoConfigAttributeEnabled(\"action\", \"telegram\")) {\r\n      modalContent.appendChild(telegram);\r\n    }\r\n\r\n    // WhatsApp\r\n    wa = createElement(aHTMLTag) as HTMLLinkElement;\r\n    wa.id = \"m-wa\";\r\n    wa.href = \"#mailgo-whatsapp\";\r\n    wa.classList.add(\"m-open\");\r\n    wa.classList.add(\"m-wa\");\r\n    wa.appendChild(createTextNode(strings.open_in_ || defaultStrings.open_in_));\r\n    let waSpan: HTMLElement = createElement(spanHTMLTag);\r\n    waSpan.className = \"w-500\";\r\n    waSpan.appendChild(\r\n      createTextNode(strings.whatsapp || defaultStrings.whatsapp)\r\n    );\r\n    wa.appendChild(waSpan);\r\n\r\n    if (mailgoConfigAttributeEnabled(\"action\", \"whatsapp\")) {\r\n      modalContent.appendChild(wa);\r\n    }\r\n\r\n    // Skype\r\n    skype = createElement(aHTMLTag) as HTMLLinkElement;\r\n    skype.id = \"m-skype\";\r\n    skype.href = \"#mailgo-skype\";\r\n    skype.classList.add(\"m-open\");\r\n    skype.classList.add(\"m-skype\");\r\n    skype.appendChild(\r\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\r\n    );\r\n    let skypeSpan: HTMLElement = createElement(spanHTMLTag);\r\n    skypeSpan.className = \"w-500\";\r\n    skypeSpan.appendChild(\r\n      createTextNode(strings.skype || defaultStrings.skype)\r\n    );\r\n    skype.appendChild(skypeSpan);\r\n\r\n    if (mailgoConfigAttributeEnabled(\"action\", \"skype\")) {\r\n      modalContent.appendChild(skype);\r\n    }\r\n\r\n    // call default\r\n    call = createElement(aHTMLTag) as HTMLLinkElement;\r\n    call.id = \"m-call\";\r\n    call.href = \"#mailgo-open\";\r\n    call.classList.add(\"m-open\");\r\n    call.classList.add(\"m-default\");\r\n    let callSpan: HTMLElement = createElement(spanHTMLTag);\r\n    callSpan.className = \"w-500\";\r\n    callSpan.appendChild(createTextNode(strings.call || defaultStrings.call));\r\n    call.appendChild(callSpan);\r\n    call.appendChild(\r\n      createTextNode(strings._as_default || defaultStrings._as_default)\r\n    );\r\n\r\n    modalContent.appendChild(call);\r\n\r\n    // copy\r\n    copyTel = createElement(aHTMLTag) as HTMLLinkElement;\r\n    copyTel.id = \"m-tel-copy\";\r\n    copyTel.href = \"#mailgo-copy\";\r\n    copyTel.classList.add(\"m-copy\");\r\n    copyTel.classList.add(\"w-500\");\r\n    copyTel.appendChild(createTextNode(strings.copy || defaultStrings.copy));\r\n\r\n    modalContent.appendChild(copyTel);\r\n\r\n    // hide mailgo.dev in footer only if showFooter is defined and equal to false\r\n    if (typeof config?.showFooter !== \"undefined\") {\r\n      showFooterConfig = config.showFooter;\r\n    }\r\n\r\n    if (showFooterConfig) {\r\n      modalContent.appendChild(byElement());\r\n    }\r\n\r\n    // add the modal at the end of the body\r\n    document.body.appendChild(modalTel);\r\n\r\n    // every click outside the modal will hide the modal\r\n    modalBackground.addEventListener(\"click\", hideMailgo);\r\n  }\r\n\r\n  // event listener on body, if the element is mailgo-compatible the mailgo modal will be rendered\r\n  document.addEventListener(\"click\", mailgoClickListener);\r\n};\r\n\r\n/**\r\n * mailgoClickListener\r\n * function to check if an element is mailgo-enabled or not referencing to\r\n * mail:\r\n * document.querySelectorAll(\r\n *   'a[href^=\"mailto:\" i]:not(.no-mailgo), a[href=\"#mailgo\"], a.mailgo'\r\n * );\r\n * tel:\r\n * document.querySelectorAll(\r\n *   'a[href^=\"tel:\" i]:not(.no-mailgo), a[href=\"#mailgo\"], a.mailgo'\r\n * );\r\n * or\r\n * document.querySelectorAll(\r\n *   'a[href^=\"callto:\" i]:not(.no-mailgo), a[href=\"#mailgo\"], a.mailgo'\r\n * );\r\n * or\r\n * document.querySelectorAll(\r\n *   'a[href^=\"sms:\" i]:not(.no-mailgo), a[href=\"#mailgo\"], a.mailgo'\r\n * );\r\n */\r\nfunction mailgoClickListener(event: Event): boolean {\r\n  // check if the mailgo HTML exists in the body\r\n  if (\r\n    !document.body.contains(modalMailto) &&\r\n    !document.body.contains(modalTel)\r\n  ) {\r\n    return false;\r\n  }\r\n\r\n  // if a mailgo is already showing do nothing\r\n  if (mailgoIsShowing()) {\r\n    return false;\r\n  }\r\n\r\n  // the path of the event\r\n  let path =\r\n    (event.composedPath && event.composedPath()) ||\r\n    composedPath(event.target as HTMLElement);\r\n\r\n  if (path) {\r\n    path.forEach((element: HTMLElement) => {\r\n      if (element instanceof HTMLDocument || element instanceof Window) {\r\n        return false;\r\n      }\r\n\r\n      // go here only if one of the mailgo modals are enabled\r\n      if (mailtoEnabled || telEnabled || smsEnabled) {\r\n        let localMailgoType = getMailgoTypeByElement(element);\r\n\r\n        // go on if the localMailgoType is not null\r\n        if (localMailgoType) {\r\n          // set the active mailgo type\r\n          activeMailgoType = localMailgoType;\r\n\r\n          let activeMailgoModalType = activeMailgoType?.type;\r\n\r\n          if (activeMailgoModalType) {\r\n            // check if the setting is enabled and if so go with pre-render\r\n            if (\r\n              (mailtoEnabled && activeMailgoModalType === MAILGO_MAIL) ||\r\n              (telEnabled && activeMailgoModalType === MAILGO_TEL) ||\r\n              (smsEnabled && activeMailgoModalType === MAILGO_SMS)\r\n            ) {\r\n              // stop the normal execution of the element click\r\n              event.preventDefault();\r\n\r\n              // render mailgo\r\n              mailgoPreRender(element as HTMLLinkElement);\r\n\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * mailgoPreRender\r\n * function to pre-render a mailgo, it helps populating elements needed by modal\r\n */\r\nfunction mailgoPreRender(\r\n  mailgoElementOrUrl: HTMLLinkElement | string\r\n): boolean {\r\n  let mailgoElement: HTMLLinkElement;\r\n\r\n  // get the type and installation from current mailgo type\r\n  let type: MailgoModalType = activeMailgoType?.type;\r\n  let installation: MailgoInstallationType = activeMailgoType?.installation;\r\n\r\n  // if type is not defined return\r\n  if (!type) return false;\r\n\r\n  if (typeof mailgoElementOrUrl === \"string\") {\r\n    // if the parameter is a string it is the url\r\n    href = mailgoElementOrUrl as string;\r\n  } else {\r\n    // if the paramenter is an HTMLLinkElement get the href attribute and the element\r\n    href = mailgoElementOrUrl.getAttribute(\"href\") as string;\r\n    mailgoElement = mailgoElementOrUrl as HTMLLinkElement;\r\n  }\r\n\r\n  // mailgo mail\r\n  if (type === MAILGO_MAIL) {\r\n    // if the installation is classic\r\n    if (installation === CLASSIC) {\r\n      if (validateUrl(href, MAILTO)) {\r\n        mail = decodeURIComponent(href.split(\"?\")[0].split(MAILTO)[1].trim());\r\n      } else if (validateUrl(href, MAILGO)) {\r\n        mail = decodeURIComponent(href.split(\"?\")[0].split(MAILGO)[1].trim());\r\n      }\r\n\r\n      try {\r\n        url = new URL(href);\r\n\r\n        let urlParams: URLSearchParams = url.searchParams;\r\n        // optional parameters for the email\r\n        cc = urlParams.get(\"cc\");\r\n        bcc = urlParams.get(\"bcc\");\r\n        subject = urlParams.get(\"subject\");\r\n        bodyMail = urlParams.get(\"body\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else if (installation === LESS_SPAM) {\r\n      // if the installation is less-spam\r\n      // mail = data-address + @ + data-domain\r\n      mail =\r\n        mailgoElement.getAttribute(\"data-address\") &&\r\n        mailgoElement.getAttribute(\"data-domain\")\r\n          ? mailgoElement.getAttribute(\"data-address\") +\r\n            \"@\" +\r\n            mailgoElement.getAttribute(\"data-domain\")\r\n          : null;\r\n\r\n      try {\r\n        url = new URL(MAILTO + encodeURIComponent(mail));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n\r\n      let parameters: string[] = [];\r\n\r\n      // cc = data-cc-address + @ + data-cc-domain\r\n      cc = mailgoElement.getAttribute(\"data-cc-address\")\r\n        ? mailgoElement.getAttribute(\"data-cc-address\") +\r\n          \"@\" +\r\n          mailgoElement.getAttribute(\"data-cc-domain\")\r\n        : null;\r\n\r\n      // if cc is defined add it to parameters\r\n      if (cc) parameters.push(\"cc=\" + cc);\r\n\r\n      // bcc = data-bcc-address + @ + data-bcc-domain\r\n      bcc = mailgoElement.getAttribute(\"data-bcc-address\")\r\n        ? mailgoElement.getAttribute(\"data-bcc-address\") +\r\n          \"@\" +\r\n          mailgoElement.getAttribute(\"data-bcc-domain\")\r\n        : null;\r\n\r\n      // if bcc is defined add it to parameters\r\n      if (bcc) parameters.push(\"bcc=\" + bcc);\r\n\r\n      // subject = data-subject\r\n      subject = mailgoElement.getAttribute(\"data-subject\");\r\n\r\n      // if subject is defined add it to parameters\r\n      if (subject) parameters.push(\"subject=\" + subject);\r\n\r\n      // body = data-body\r\n      bodyMail = mailgoElement.getAttribute(\"data-body\");\r\n\r\n      // if body is defined add it to parameters\r\n      if (bodyMail) parameters.push(\"body=\" + bodyMail);\r\n\r\n      // set the lessSpamHref\r\n      lessSpamHref = buildLessSpamHref(\r\n        MAILTO + encodeURIComponent(mail),\r\n        parameters\r\n      );\r\n    }\r\n\r\n    // set custom action text, title and url\r\n    customActionText = \"\";\r\n    customActionTitle = \"\";\r\n    customActionUrl = \"\";\r\n    if (mailgoConfigAttributeEnabled(\"action\", \"custom\") && mailgoElement) {\r\n      customActionText =\r\n        mailgoElement.getAttribute(\"data-custom-action-text\") ??\r\n        customActionText;\r\n      if (customActionText) {\r\n        customActionTitle = customActionText;\r\n        customActionText = truncate(\r\n          customActionText,\r\n          customActionTextMaxLength\r\n        );\r\n      }\r\n\r\n      customActionUrl =\r\n        mailgoElement.getAttribute(\"data-custom-action-url\") ?? customActionUrl;\r\n    }\r\n\r\n    // if is in config use it\r\n    if (typeof config?.validateEmail !== \"undefined\") {\r\n      validateEmailConfig = config.validateEmail;\r\n    }\r\n\r\n    if (validateEmailConfig) {\r\n      // validate the email address\r\n      if (!validateEmails(mail.split(\",\"))) {\r\n        return false;\r\n      }\r\n\r\n      // if cc, bcc are not valid cc, bcc = \"\"\r\n      if (cc && !validateEmails(cc.split(\",\"))) cc = \"\";\r\n      if (bcc && !validateEmails(bcc.split(\",\"))) bcc = \"\";\r\n    }\r\n  }\r\n  // mailgo tel\r\n  else if (type === MAILGO_TEL) {\r\n    if (installation === CLASSIC) {\r\n      if (validateUrl(href, TEL)) {\r\n        tel = decodeURIComponent(href.split(\"?\")[0].split(TEL)[1].trim());\r\n      } else if (validateUrl(href, CALLTO)) {\r\n        tel = decodeURIComponent(href.split(\"?\")[0].split(CALLTO)[1].trim());\r\n      } else if (validateUrl(href, SMS)) {\r\n        tel = decodeURIComponent(href.split(\"?\")[0].split(SMS)[1].trim());\r\n      }\r\n\r\n      try {\r\n        url = new URL(href);\r\n        let urlParams: URLSearchParams = url.searchParams;\r\n\r\n        // optional parameters for the phone number\r\n        msg = urlParams.get(\"body\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else if (installation == LESS_SPAM) {\r\n      tel = mailgoElement.getAttribute(\"data-tel\");\r\n      msg = mailgoElement.getAttribute(\"data-msg\");\r\n\r\n      try {\r\n        url = new URL(TEL + encodeURIComponent(tel));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n\r\n      let parameters: string[] = [];\r\n\r\n      // if msg is defined add it to parameters\r\n      if (msg) parameters.push(\"body=\" + msg);\r\n\r\n      // set the lessSpamHref\r\n      lessSpamHref = buildLessSpamHref(\r\n        TEL + encodeURIComponent(tel),\r\n        parameters\r\n      );\r\n    }\r\n\r\n    // if is in config use it\r\n    if (typeof config?.validateTel !== \"undefined\") {\r\n      validateTelConfig = config.validateTel;\r\n    }\r\n\r\n    // validate the phone number\r\n    if (validateTelConfig) {\r\n      if (!validateTel(tel)) return false;\r\n    }\r\n\r\n    // Telegram username\r\n    if (mailgoElement && mailgoElement.hasAttribute(\"data-telegram\")) {\r\n      telegramUsername = mailgoElement.getAttribute(\"data-telegram\");\r\n    } else {\r\n      telegramUsername = null;\r\n    }\r\n\r\n    // Telegram username\r\n    if (mailgoElement && mailgoElement.hasAttribute(\"data-skype\")) {\r\n      skypeUsername = mailgoElement.getAttribute(\"data-skype\");\r\n    } else {\r\n      skypeUsername = null;\r\n    }\r\n  }\r\n\r\n  // if dark is in config or contained in the element\r\n  if (config?.dark || mailgoElement.classList.contains(\"dark\")) {\r\n    enableDarkMode();\r\n  } else {\r\n    disableDarkMode();\r\n  }\r\n\r\n  // render mailgo\r\n  mailgoRender();\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * mailgoDirectRender\r\n * function to render a mailgo directly from a URL\r\n */\r\nfunction mailgoDirectRender(directUrl: string): boolean {\r\n  // start mailgo\r\n  mailgo();\r\n\r\n  if (validateUrl(directUrl, MAILTO) || validateUrl(directUrl, MAILGO)) {\r\n    activeMailgoType = {\r\n      type: MAILGO_MAIL,\r\n      installation: CLASSIC,\r\n    };\r\n    return mailgoPreRender(directUrl);\r\n  } else if (\r\n    validateUrl(directUrl, TEL) ||\r\n    validateUrl(directUrl, CALLTO) ||\r\n    validateUrl(directUrl, SMS)\r\n  ) {\r\n    activeMailgoType = {\r\n      type: MAILGO_TEL,\r\n      installation: CLASSIC,\r\n    };\r\n    return mailgoPreRender(directUrl);\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * mailgoRender\r\n * function to render a mailgo (mail or tel)\r\n */\r\nfunction mailgoRender(): boolean {\r\n  // get the type from current mailgo type\r\n  let type: MailgoModalType = activeMailgoType?.type;\r\n\r\n  // if type is not defined return\r\n  if (!type) return false;\r\n\r\n  // mailgo mail\r\n  if (type === MAILGO_MAIL) {\r\n    // the title of the modal (email address)\r\n    title.textContent = mail.split(\",\").join(\"\\n\");\r\n\r\n    // add the details if provided\r\n    if (mailgoConfigAttributeEnabled(\"detail\", \"cc\") && cc) {\r\n      detailCc.style.display = \"block\";\r\n      ccValue.textContent = cc.split(\",\").join(\"\\n\");\r\n    } else {\r\n      detailCc.style.display = \"none\";\r\n    }\r\n\r\n    if (mailgoConfigAttributeEnabled(\"detail\", \"bcc\") && bcc) {\r\n      detailBcc.style.display = \"block\";\r\n      bccValue.textContent = bcc.split(\",\").join(\"\\n\");\r\n    } else {\r\n      detailBcc.style.display = \"none\";\r\n    }\r\n\r\n    if (mailgoConfigAttributeEnabled(\"detail\", \"subject\") && subject) {\r\n      detailSubject.style.display = \"block\";\r\n      subjectValue.textContent = subject;\r\n    } else {\r\n      detailSubject.style.display = \"none\";\r\n    }\r\n\r\n    if (mailgoConfigAttributeEnabled(\"detail\", \"body\") && bodyMail) {\r\n      detailBody.style.display = \"block\";\r\n      bodyValue.textContent = bodyMail;\r\n    } else {\r\n      detailBody.style.display = \"none\";\r\n    }\r\n\r\n    // custom action text, title and visibility\r\n    customAction.textContent = customActionText;\r\n    customAction.title = customActionTitle;\r\n    customAction.style.display = customActionText ? \"block\" : \"none\";\r\n\r\n    // add the actions\r\n    gmail.addEventListener(\"click\", openGmail);\r\n\r\n    outlook.addEventListener(\"click\", openOutlook);\r\n\r\n    yahoo.addEventListener(\"click\", openYahooMail);\r\n\r\n    open.addEventListener(\"click\", openDefault);\r\n\r\n    copyMail.addEventListener(\"click\", copy);\r\n\r\n    customAction.addEventListener(\"click\", openCustomAction);\r\n  }\r\n  // mailgo tel\r\n  else if (type === MAILGO_TEL) {\r\n    // the title of the modal (tel)\r\n    titleTel.textContent = tel;\r\n\r\n    if (mailgoConfigAttributeEnabled(\"detail\", \"msg\") && msg) {\r\n      detailMsg.style.display = \"block\";\r\n      msgValue.textContent = msg;\r\n    } else {\r\n      detailMsg.style.display = \"none\";\r\n    }\r\n\r\n    // add the actions to buttons\r\n    wa.addEventListener(\"click\", openWhatsApp);\r\n\r\n    // telegram must be shown only if data-telegram is provided\r\n    if (telegramUsername) {\r\n      document.getElementById(\"m-tg\").style.display = \"block\";\r\n      telegram.addEventListener(\"click\", openTelegram);\r\n    } else {\r\n      document.getElementById(\"m-tg\").style.display = \"none\";\r\n    }\r\n\r\n    skype.addEventListener(\"click\", openSkype);\r\n\r\n    call.addEventListener(\"click\", openDefault);\r\n\r\n    copyTel.addEventListener(\"click\", copy);\r\n  }\r\n\r\n  // show the mailgo\r\n  showMailgo(type);\r\n\r\n  // add listener keyDown\r\n  document.addEventListener(\"keydown\", mailgoKeydown);\r\n\r\n  return true;\r\n}\r\n\r\n// actions\r\nconst openGmail = (event?: Event): void => {\r\n  event.preventDefault();\r\n\r\n  let urlString: string;\r\n  let installation: MailgoInstallationType = activeMailgoType?.installation;\r\n\r\n  if (installation === CLASSIC) {\r\n    try {\r\n      urlString = url.toString();\r\n    } catch (e) {\r\n      urlString = href;\r\n    }\r\n  } else if (installation === LESS_SPAM) {\r\n    urlString = lessSpamHref;\r\n  }\r\n\r\n  // Gmail url\r\n  let gmailUrl: string =\r\n    \"https://mail.google.com/mail/?extsrc=mailto&url=\" +\r\n    encodeURIComponent(urlString);\r\n\r\n  // open the link\r\n  window.open(gmailUrl, \"_blank\", \"noopener, noreferrer\");\r\n\r\n  // hide the modal\r\n  hideMailgo();\r\n};\r\n\r\nconst openOutlook = (event?: Event): void => {\r\n  event.preventDefault();\r\n\r\n  // Outlook starting url\r\n  let startingOutlookUrl: string =\r\n    \"https://outlook.live.com/owa/?path=/mail/action/compose&to=\";\r\n\r\n  // let the user to decide to open Office365 Outlook instead of the classic outlook.live.com\r\n  if (config?.office365) {\r\n    startingOutlookUrl =\r\n      \"https://outlook.office365.com/owa/?path=/mail/action/compose&to=\";\r\n  }\r\n\r\n  // Outlook url\r\n  let outlookUrl: string = startingOutlookUrl + encodeURIComponent(mail);\r\n\r\n  // the details if provided\r\n  if (subject) {\r\n    outlookUrl = outlookUrl.concat(\"&subject=\" + encodeURIComponent(subject));\r\n  }\r\n\r\n  if (bodyMail) {\r\n    outlookUrl = outlookUrl.concat(\"&body=\" + encodeURIComponent(bodyMail));\r\n  }\r\n\r\n  // open the link\r\n  window.open(outlookUrl, \"_blank\", \"noopener, noreferrer\");\r\n\r\n  // hide the modal\r\n  hideMailgo();\r\n};\r\n\r\nconst openYahooMail = (event?: Event): void => {\r\n  event.preventDefault();\r\n\r\n  // Yahoo url\r\n  let yahooUrl: string = \"https://compose.mail.yahoo.com/?to=\" + mail;\r\n\r\n  // the details if provided\r\n  if (subject) {\r\n    yahooUrl = yahooUrl.concat(\"&subject=\" + encodeURIComponent(subject));\r\n  }\r\n  if (bodyMail) {\r\n    yahooUrl = yahooUrl.concat(\"&body=\" + encodeURIComponent(bodyMail));\r\n  }\r\n\r\n  // open the link\r\n  window.open(yahooUrl, \"_blank\", \"noopener, noreferrer\");\r\n\r\n  // hide the modal\r\n  hideMailgo();\r\n};\r\n\r\nconst openTelegram = (event?: Event): void => {\r\n  event.preventDefault();\r\n\r\n  // check if telegramUsername exists\r\n  if (telegramUsername) {\r\n    // Telegram url\r\n    let tgUrl: string = \"https://t.me/\" + encodeURIComponent(telegramUsername);\r\n\r\n    // open the url\r\n    window.open(tgUrl, \"_blank\", \"noopener, noreferrer\");\r\n\r\n    // hide the modal\r\n    hideMailgo();\r\n  }\r\n};\r\n\r\nconst openSkype = (event?: Event): void => {\r\n  event.preventDefault();\r\n\r\n  let skype: string = skypeUsername || tel;\r\n\r\n  // Telegram url\r\n  let skypeUrl: string = \"skype:\" + encodeURIComponent(skype);\r\n\r\n  // open the url\r\n  window.open(skypeUrl, \"_blank\", \"noopener, noreferrer\");\r\n\r\n  // hide the modal\r\n  hideMailgo();\r\n};\r\n\r\nconst openWhatsApp = (event?: Event): void => {\r\n  event.preventDefault();\r\n\r\n  // WhatsApp API doesn't work with non number digits and leading 0s: https://faq.whatsapp.com/general/chats/how-to-use-click-to-chat/\r\n  let whatappTel = tel.replace(notNumber, \"\").replace(leadingZeros, \"\");\r\n\r\n  // WhatsApp url\r\n  let waUrl: string = \"https://wa.me/\" + encodeURIComponent(whatappTel);\r\n\r\n  // the details if provided\r\n  if (msg) {\r\n    waUrl = waUrl.concat(\"?text=\" + encodeURIComponent(msg));\r\n  }\r\n\r\n  // open the url\r\n  window.open(waUrl, \"_blank\", \"noopener, noreferrer\");\r\n\r\n  // hide the modal\r\n  hideMailgo();\r\n};\r\n\r\nconst openDefault = (event?: Event): void => {\r\n  event.preventDefault();\r\n\r\n  let installation: MailgoInstallationType = activeMailgoType?.installation;\r\n\r\n  // if the installation is classic the browser can follow the default behaviour\r\n  if (installation === CLASSIC) {\r\n    window.location.href = href;\r\n  } else if (installation === LESS_SPAM) {\r\n    // if the installation is less-spam use the built less-spam href\r\n    window.location.href = lessSpamHref;\r\n  }\r\n\r\n  hideMailgo();\r\n};\r\n\r\nconst copy = (event?: Event): void => {\r\n  event.preventDefault();\r\n\r\n  // the correct copyButton (mail or tel)\r\n  if (mailgoIsShowing()) {\r\n    let activeCopy: HTMLElement;\r\n\r\n    let type: MailgoModalType = activeMailgoType?.type;\r\n\r\n    if (type === MAILGO_MAIL) {\r\n      // in case it is showing mail modal copy email address\r\n      copyToClipboard(mail);\r\n      activeCopy = copyMail;\r\n    } else {\r\n      // in case it is showing tel modal copy phone number\r\n      copyToClipboard(tel);\r\n      activeCopy = copyTel;\r\n    }\r\n\r\n    activeCopy.textContent = strings.copied || defaultStrings.copied;\r\n    setTimeout(() => {\r\n      activeCopy.textContent = strings.copy || defaultStrings.copy;\r\n      // hide after the timeout\r\n      hideMailgo();\r\n    }, 999);\r\n  }\r\n};\r\n\r\nconst openCustomAction = (event?: Event): void => {\r\n  event?.preventDefault();\r\n\r\n  if (customActionUrl) {\r\n    const customActionUrlEncoded = encodeURI(customActionUrl);\r\n\r\n    window.open(customActionUrlEncoded, \"_blank\", \"noopener, noreferrer\");\r\n  }\r\n\r\n  hideMailgo();\r\n};\r\n\r\n// function to find if a link is a mailto, tel, callto or sms\r\nconst validateUrl = (url: string, type: string = MAILTO) => {\r\n  let regexValidate = new RegExp(\"^\" + type + \"((.)+)\", \"gi\");\r\n  return regexValidate.test(url);\r\n};\r\n\r\n// function that returns if an element is a mailgo\r\nfunction getMailgoTypeByElement(element: HTMLElement): MailgoType | null {\r\n  const linkElement = element as HTMLLinkElement;\r\n  if (!linkElement.getAttribute) {\r\n    return null;\r\n  }\r\n\r\n  let elementHref: string = linkElement.getAttribute(\"href\");\r\n\r\n  // return null if there is no-mailgo in class\r\n  if (element.classList?.contains(NO_MAILGO)) {\r\n    return null;\r\n  }\r\n\r\n  // the case of classic type of mailgo, like a href=mailto:... or a href=tel:... and the class=mailgo with a useful href\r\n  if (elementHref || element.classList?.contains(\"mailgo\")) {\r\n    if (validateUrl(elementHref, MAILTO) || validateUrl(elementHref, MAILGO)) {\r\n      // a mailto: or mailgo:\r\n      return {\r\n        type: MAILGO_MAIL,\r\n        installation: CLASSIC,\r\n      };\r\n    } else if (\r\n      validateUrl(elementHref, TEL) ||\r\n      validateUrl(elementHref, CALLTO)\r\n    ) {\r\n      // a tel: or callto:\r\n      return {\r\n        type: MAILGO_TEL,\r\n        installation: CLASSIC,\r\n      };\r\n    } else if (validateUrl(elementHref, SMS)) {\r\n      // a sms:\r\n      return {\r\n        type: MAILGO_SMS,\r\n        installation: CLASSIC,\r\n      };\r\n    }\r\n  }\r\n\r\n  if (elementHref === \"#mailgo\" || element.classList?.contains(\"mailgo\")) {\r\n    // less-spam installation of mailgo, check to the attributes\r\n    if (\r\n      element.hasAttribute(\"data-address\") &&\r\n      element.hasAttribute(\"data-domain\")\r\n    ) {\r\n      // less-spam mailto with data-address and data-domain\r\n      return {\r\n        type: MAILGO_MAIL,\r\n        installation: LESS_SPAM,\r\n      };\r\n    } else if (element.hasAttribute(\"data-tel\")) {\r\n      // less-spam tel with data-tel\r\n      return {\r\n        type: MAILGO_TEL,\r\n        installation: LESS_SPAM,\r\n      };\r\n    } else if (element.hasAttribute(\"data-msg\")) {\r\n      // less-spam sms with data-msd\r\n      return {\r\n        type: MAILGO_SMS,\r\n        installation: LESS_SPAM,\r\n      };\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * mailgoKeydown\r\n * function to manage the keydown event when the modal is showing, return a boolean that represents if a useful key has been pressed\r\n */\r\nconst mailgoKeydown = (keyboardEvent: KeyboardEvent): boolean => {\r\n  // if mailgo is showing\r\n  if (mailgoIsShowing()) {\r\n    let type: MailgoModalType = activeMailgoType?.type;\r\n\r\n    if (type === MAILGO_MAIL) {\r\n      switch (keyboardEvent.keyCode) {\r\n        case 27:\r\n          // Escape\r\n          hideMailgo();\r\n          return true;\r\n        case 71:\r\n          // g -> open GMail\r\n          openGmail();\r\n          return true;\r\n        case 79:\r\n          // o -> open Outlook\r\n          openOutlook();\r\n          return true;\r\n        case 89:\r\n          // y -> open Yahoo Mail\r\n          openYahooMail();\r\n          return true;\r\n        case 32:\r\n        case 13:\r\n          // spacebar or enter -> open default\r\n          openDefault();\r\n          return true;\r\n        case 67:\r\n          // c -> copy\r\n          copy();\r\n          return true;\r\n        case 65:\r\n          // a -> custom Action\r\n          openCustomAction();\r\n          return true;\r\n        default:\r\n          return false;\r\n      }\r\n    } else if (type === MAILGO_TEL) {\r\n      switch (keyboardEvent.keyCode) {\r\n        case 27:\r\n          // Escape\r\n          hideMailgo();\r\n          return true;\r\n        case 84:\r\n          // t -> open Telegram\r\n          openTelegram();\r\n          return true;\r\n        case 87:\r\n          // w -> open WhatsApp\r\n          openWhatsApp();\r\n          return true;\r\n        case 83:\r\n          // s -> open Skype\r\n          openSkype();\r\n          return true;\r\n        case 32:\r\n        case 13:\r\n          // spacebar or enter -> open default\r\n          openDefault();\r\n          return true;\r\n        case 67:\r\n          // c -> copy\r\n          copy();\r\n          return true;\r\n        default:\r\n          return false;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\n// show the modal\r\nconst showMailgo = (type: MailgoModalType): void => {\r\n  // show the correct modal\r\n  setModalDisplay(type, \"flex\");\r\n};\r\n\r\n// hide the modal\r\nconst hideMailgo = (): void => {\r\n  // hide all the modals\r\n  setModalDisplay(MAILGO_MAIL, \"none\");\r\n  setModalDisplay(MAILGO_TEL, \"none\");\r\n\r\n  // remove listener keyDown\r\n  document.removeEventListener(\"keydown\", mailgoKeydown);\r\n};\r\n\r\n// is the mailgo modal hidden?\r\nconst mailgoIsShowing = (): boolean => {\r\n  return (\r\n    (mailtoEnabled && getModalDisplay(MAILGO_MAIL) === \"flex\") ||\r\n    ((telEnabled || smsEnabled) && getModalDisplay(MAILGO_TEL) === \"flex\")\r\n  );\r\n};\r\n\r\nconst byElement = (): HTMLLinkElement => {\r\n  // by element in the footer\r\n  let by: HTMLLinkElement = createElement(aHTMLTag) as HTMLLinkElement;\r\n  by.href = \"https://mailgo.dev?ref=mailgo-modal\";\r\n  by.className = \"m-by\";\r\n  by.target = \"_blank\";\r\n  by.rel = \"noopener noreferrer\";\r\n  by.appendChild(createTextNode(\"mailgo.dev\"));\r\n\r\n  return by;\r\n};\r\n\r\n// create element\r\nconst createElement = (element: string = \"div\"): HTMLElement =>\r\n  document.createElement(element);\r\n\r\n// create text node\r\nconst createTextNode = (element: string): Text =>\r\n  document.createTextNode(element);\r\n\r\n// get the correct HTMLElement from a type\r\nconst getModalHTMLElement = (type: MailgoModalType = MAILGO_MAIL) => {\r\n  if (type === MAILGO_TEL) {\r\n    return modalTel;\r\n  } else {\r\n    return modalMailto;\r\n  }\r\n};\r\n\r\n// get display value\r\nconst getModalDisplay = (ref: MailgoModalType = MAILGO_MAIL): string =>\r\n  getModalHTMLElement(ref).style.display;\r\n\r\n// set display value\r\nconst setModalDisplay = (\r\n  ref: MailgoModalType = MAILGO_MAIL,\r\n  value: string\r\n): void => {\r\n  let modal = getModalHTMLElement(ref);\r\n\r\n  if (modal) {\r\n    modal.style.display = value;\r\n\r\n    if (value === \"flex\") {\r\n      // \"save\" the activated link.\r\n      activatedLink = document.activeElement as HTMLElement;\r\n      modal.setAttribute(\"aria-hidden\", \"false\");\r\n\r\n      // Focus on the modal container.\r\n      modal.setAttribute(\"tabindex\", \"0\");\r\n      modal.focus();\r\n      setFocusLoop(modal);\r\n    } else {\r\n      modal.setAttribute(\"aria-hidden\", \"true\");\r\n\r\n      // focus back the activated link for getting back to the context.\r\n      modal.setAttribute(\"tabindex\", \"-1\");\r\n      activatedLink.focus();\r\n    }\r\n  }\r\n};\r\n\r\n// enable dark mode\r\nconst enableDarkMode = () => {\r\n  // get the type from current mailgo type\r\n  let type: MailgoModalType = activeMailgoType?.type;\r\n  if (type) {\r\n    getModalHTMLElement(type).classList.add(\"m-dark\");\r\n  }\r\n};\r\n\r\n// disable dark mode\r\nconst disableDarkMode = () => {\r\n  // get the type from current mailgo type\r\n  let type: MailgoModalType = activeMailgoType?.type;\r\n  if (type) {\r\n    getModalHTMLElement(type).classList.remove(\"m-dark\");\r\n  }\r\n};\r\n\r\n// custom composedPath if path or event.composedPath() are not defined\r\nconst composedPath = (\r\n  el: HTMLElement\r\n): (HTMLElement | Document | (Window & typeof globalThis))[] => {\r\n  let path = [];\r\n\r\n  while (el) {\r\n    path.push(el);\r\n\r\n    if (el.tagName === \"HTML\") {\r\n      path.push(document);\r\n      path.push(window);\r\n      return path;\r\n    }\r\n\r\n    el = el.parentElement;\r\n  }\r\n};\r\n\r\n// function to recreate a mailto: or tel: href from less-spam\r\nconst buildLessSpamHref = (type: string, parameters: string[]): string => {\r\n  lessSpamHref = type;\r\n  if (parameters && parameters.length > 0) {\r\n    let joinedParams = parameters.join(\"&\");\r\n    lessSpamHref = lessSpamHref.concat(\"?\" + joinedParams);\r\n  }\r\n  return lessSpamHref;\r\n};\r\n\r\n// function to check an attribute is enabled or not, by default considering it enabled\r\nconst mailgoConfigAttributeEnabled = (\r\n  type: \"action\" | \"detail\",\r\n  attribute: MailgoAction | MailgoDetail\r\n): boolean => {\r\n  // by default all the actions and attribute are enabled\r\n  if (!config) {\r\n    return true;\r\n  }\r\n\r\n  // if the attribute type is action consider the actions config attribute\r\n  if (type === \"action\") {\r\n    if (config && !config?.actions) {\r\n      return true;\r\n    }\r\n\r\n    if (\r\n      config &&\r\n      config.actions &&\r\n      config?.actions[attribute as MailgoAction] === false\r\n    ) {\r\n      return false;\r\n    }\r\n  } else if (type === \"detail\") {\r\n    // else consider the details attribute\r\n\r\n    if (config && !config?.details) {\r\n      return true;\r\n    }\r\n\r\n    if (\r\n      config &&\r\n      config.details &&\r\n      config?.details[attribute as MailgoDetail] === false\r\n    ) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n// manage the language of mailgo\r\nconst mailgoSetLanguage = (): string => {\r\n  let languageType = \"default lang\";\r\n\r\n  // if a language is defined in configuration use it\r\n  if (\r\n    config?.lang &&\r\n    (languages as MailgoLanguages).indexOf(config.lang) !== -1\r\n  ) {\r\n    lang = config.lang;\r\n    languageType = \"config lang\";\r\n  } else {\r\n    // else if is defined <html lang=\"\"> use it!\r\n    // keep the lang from html\r\n    let htmlLang: string = document.documentElement.lang;\r\n\r\n    // find the correct language using the lang attribute, not just a === because there a are cases like fr-FR or fr_FR in html lang attribute\r\n    (languages as MailgoLanguages).forEach((language: any) => {\r\n      if (new RegExp(\"^\" + language, \"gi\").test(htmlLang)) {\r\n        lang = language;\r\n        languageType = \"html lang\";\r\n      }\r\n    });\r\n  }\r\n\r\n  // strings\r\n  strings = (translations as MailgoTranslations)[lang];\r\n\r\n  return languageType;\r\n};\r\n\r\nconst mailgoStyle = (): void => {\r\n  if (!document.getElementById(\"mailgo-style\")) {\r\n    // mailgo style\r\n    let mailgoCSSElement: HTMLStyleElement = createElement(\r\n      \"style\"\r\n    ) as HTMLStyleElement;\r\n    mailgoCSSElement.id = \"mailgo-style\";\r\n    mailgoCSSElement.type = \"text/css\";\r\n    mailgoCSSElement.appendChild(createTextNode(mailgoCSS));\r\n    document.head.appendChild(mailgoCSSElement);\r\n  }\r\n};\r\n\r\nfunction mailgoValidateEmail(email: string): boolean {\r\n  return validateEmail(email);\r\n}\r\n\r\n// mailgo\r\nfunction mailgo(mailgoConfig?: MailgoConfig): boolean {\r\n  try {\r\n    // polyfill mailgo\r\n    // mailgoPolyfill();\r\n\r\n    // set the global config merging window mailgConfig and mailgoConfig passed as a parameter\r\n    config = { ...mailgoConfig, ...((window as any)?.mailgoConfig || null) };\r\n\r\n    // if the window is defined...\r\n    if (typeof window !== \"undefined\") {\r\n      // if is set in config use it (load the mailgo CSS)\r\n      if (typeof config?.loadCSS !== \"undefined\") {\r\n        loadCSSConfig = config.loadCSS;\r\n      }\r\n\r\n      // if is set in config use it (enable mailto)\r\n      if (typeof config?.mailto !== \"undefined\") {\r\n        mailtoEnabled = config.mailto;\r\n      }\r\n\r\n      // if is set in config use it (enable tel)\r\n      if (typeof config?.tel !== \"undefined\") {\r\n        telEnabled = config.tel;\r\n      }\r\n\r\n      // if is set in config use it (enable sms)\r\n      if (typeof config?.sms !== \"undefined\") {\r\n        smsEnabled = config.sms;\r\n      }\r\n\r\n      // if load css enabled load it!\r\n      if (loadCSSConfig) {\r\n        // add the style for mailgo\r\n        mailgoStyle();\r\n      }\r\n\r\n      // if is set an initEvent add the listener\r\n      if (config?.initEvent) {\r\n        if (config?.listenerOptions) {\r\n          // listener options specified\r\n          document.addEventListener(\r\n            config.initEvent,\r\n            mailgoInit,\r\n            config.listenerOptions\r\n          );\r\n        } else {\r\n          // no listener options\r\n          document.addEventListener(config.initEvent, mailgoInit);\r\n        }\r\n      } else {\r\n        mailgoInit();\r\n      }\r\n\r\n      return true;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  return false;\r\n}\r\n\r\n// define the methods also for window element\r\nif (typeof window !== \"undefined\") {\r\n  (window as any).getMailgoTypeByElement = getMailgoTypeByElement;\r\n  (window as any).mailgoClickListener = mailgoClickListener;\r\n  (window as any).mailgoCheckRender = mailgoClickListener; // for compatibility with old version of mailgo\r\n  (window as any).mailgoPreRender = mailgoPreRender;\r\n  (window as any).mailgoDirectRender = mailgoDirectRender;\r\n  (window as any).mailgoRender = mailgoRender;\r\n  (window as any).mailgoValidateEmail = mailgoValidateEmail;\r\n  (window as any).mailgo = mailgo;\r\n}\r\n\r\nexport {\r\n  getMailgoTypeByElement,\r\n  mailgoClickListener,\r\n  mailgoPreRender,\r\n  mailgoDirectRender,\r\n  mailgoRender,\r\n  mailgoValidateEmail,\r\n};\r\n\r\nexport default mailgo;\r\n","export const userAgent = () => {\r\n  if (\r\n    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n      navigator.userAgent\r\n    )\r\n  ) {\r\n    return \"mobile\";\r\n  }\r\n  return \"desktop\";\r\n};\r\n","// webpack > dist/mailgo.min.js\r\n\r\nimport mailgo from \"../src/mailgo\";\r\n\r\n// call init mailgo attached to the event DOMContentLoaded\r\nconst mailgoConfig = {\r\n  initEvent: \"DOMContentLoaded\",\r\n  dark: true,\r\n};\r\n\r\nmailgo(mailgoConfig);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(907);\n"],"sourceRoot":""}