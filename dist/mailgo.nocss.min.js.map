{"version":3,"file":"mailgo.nocss.min.js","mappings":"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","sources":["webpack://mailgo/../src/mailgo.scss","webpack://mailgo/../node_modules/css-loader/dist/runtime/api.js","webpack://mailgo/../node_modules/css-loader/dist/runtime/noSourceMaps.js","webpack://mailgo/../src/mailgo.scss?81f2","webpack://mailgo/webpack/bootstrap","webpack://mailgo/webpack/runtime/compat get default export","webpack://mailgo/webpack/runtime/define property getters","webpack://mailgo/webpack/runtime/hasOwnProperty shorthand","webpack://mailgo/webpack/runtime/make namespace object","webpack://mailgo/../src/constants.ts","webpack://mailgo/../src/utils.ts","webpack://mailgo/../src/mailgo.ts","webpack://mailgo/../src/mobile-detect.ts","webpack://mailgo/./mailgo.dist.nocss.ts"],"sourcesContent":["// Imports\nvar ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/noSourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".m-modal{position:fixed;top:0;right:0;bottom:0;left:0;justify-content:center;align-items:center;flex-direction:column;overflow:hidden;font-size:16.5px;z-index:10000}.m-modal p,.m-modal span,.m-modal strong,.m-modal a{margin:0;padding:0;font-size:100%;line-height:1;font-family:-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,Helvetica,Arial,sans-serif,\\\"Apple Color Emoji\\\",\\\"Segoe UI Emoji\\\",\\\"Segoe UI Symbol\\\";text-rendering:optimizeLegibility}.m-modal strong{font-weight:700}.m-modal .m-modal-back{position:absolute;z-index:10001;top:0;right:0;bottom:0;left:0;background-color:#20232a;opacity:.8}.m-modal .m-modal-content{position:relative;z-index:10002;box-sizing:content-box;text-align:center;overflow:hidden;min-width:200px;max-width:240px;background-color:#fff;opacity:.95;border-radius:20px;box-shadow:0 3px 20px rgba(32,35,42,.5);border:3px solid #333;color:#4a4a4a;display:flex;flex-direction:column;overflow:auto;padding:24px;transition:.5s box-shadow}.m-modal .m-modal-content:hover,.m-modal .m-modal-content:focus,.m-modal .m-modal-content:active{opacity:1}.m-modal .m-modal-content .m-title{margin-bottom:8px;overflow:hidden;white-space:pre-line;text-overflow:ellipsis;line-height:1.2em}.m-modal .m-modal-content .m-details{margin-bottom:10px}.m-modal .m-modal-content .m-details p{white-space:pre-line;font-size:12px;margin-top:3px;margin-bottom:3px}.m-modal .m-modal-content a{cursor:pointer;padding:10px;color:#4a4a4a;border-radius:20px;text-decoration:none}.m-modal .m-modal-content a.m-gmail{color:#c0372a}.m-modal .m-modal-content a.m-gmail:hover,.m-modal .m-modal-content a.m-gmail:focus,.m-modal .m-modal-content a.m-gmail:active{background-color:rgba(192,55,42,.08);color:#c0372a}.m-modal .m-modal-content a.m-outlook{color:#0967aa}.m-modal .m-modal-content a.m-outlook:hover,.m-modal .m-modal-content a.m-outlook:focus,.m-modal .m-modal-content a.m-outlook:active{background-color:rgba(9,103,170,.08);color:#0967aa}.m-modal .m-modal-content a.m-yahoo{color:#4a00a0}.m-modal .m-modal-content a.m-yahoo:hover,.m-modal .m-modal-content a.m-yahoo:focus,.m-modal .m-modal-content a.m-yahoo:active{background-color:rgba(74,0,160,.08);color:#4a00a0}.m-modal .m-modal-content a.m-tg{color:#086da0}.m-modal .m-modal-content a.m-tg:hover,.m-modal .m-modal-content a.m-tg:focus,.m-modal .m-modal-content a.m-tg:active{background-color:rgba(8,109,160,.08);color:#086da0}.m-modal .m-modal-content a.m-wa{color:#067466}.m-modal .m-modal-content a.m-wa:hover,.m-modal .m-modal-content a.m-wa:focus,.m-modal .m-modal-content a.m-wa:active{background-color:rgba(6,116,102,.08);color:#067466}.m-modal .m-modal-content a.m-skype{color:#076d92}.m-modal .m-modal-content a.m-skype:hover,.m-modal .m-modal-content a.m-skype:focus,.m-modal .m-modal-content a.m-skype:active{background-color:rgba(7,109,146,.08);color:#076d92}.m-modal .m-modal-content a.m-copy{padding:16px 10px;font-size:16px}.m-modal .m-modal-content a.m-default:hover,.m-modal .m-modal-content a.m-default:focus,.m-modal .m-modal-content a.m-default:active,.m-modal .m-modal-content a.m-copy:hover,.m-modal .m-modal-content a.m-copy:focus,.m-modal .m-modal-content a.m-copy:active{background-color:rgba(0,0,0,.08);color:#4a4a4a}.m-modal .m-modal-content a.m-custom-action{color:#0b790b}.m-modal .m-modal-content a.m-custom-action:hover,.m-modal .m-modal-content a.m-custom-action:focus,.m-modal .m-modal-content a.m-custom-action:active{background-color:rgba(11,121,11,.08);color:#0b790b}.m-modal .m-modal-content a.m-by{font-size:12px;margin-top:.8rem;padding:5px;color:#4a4a4a}.m-modal .m-modal-content a.m-by:hover,.m-modal .m-modal-content a.m-by:focus,.m-modal .m-modal-content a.m-by:active{color:#3d3d3d}.m-modal .m-modal-content .w-500{font-weight:500}.m-modal.m-dark .m-modal-content{background-color:#20232a}.m-modal.m-dark .m-modal-content,.m-modal.m-dark .m-modal-content p,.m-modal.m-dark .m-modal-content p span,.m-modal.m-dark .m-modal-content strong{color:#fff}.m-modal.m-dark .m-modal-content a{color:#eaeaea}.m-modal.m-dark .m-modal-content a:not(.m-by):hover,.m-modal.m-dark .m-modal-content a:not(.m-by):focus,.m-modal.m-dark .m-modal-content a:not(.m-by):active{background-color:rgba(134,134,134,.08);color:#eaeaea}.m-modal.m-dark .m-modal-content a.m-gmail{color:#e07d73}.m-modal.m-dark .m-modal-content a.m-gmail:hover,.m-modal.m-dark .m-modal-content a.m-gmail:focus,.m-modal.m-dark .m-modal-content a.m-gmail:active{background-color:rgba(224,125,115,.08);color:#e07d73}.m-modal.m-dark .m-modal-content a.m-outlook{color:#4c9cd7}.m-modal.m-dark .m-modal-content a.m-outlook:hover,.m-modal.m-dark .m-modal-content a.m-outlook:focus,.m-modal.m-dark .m-modal-content a.m-outlook:active{background-color:rgba(76,156,215,.08);color:#4c9cd7}.m-modal.m-dark .m-modal-content a.m-yahoo{color:#ac88d3}.m-modal.m-dark .m-modal-content a.m-yahoo:hover,.m-modal.m-dark .m-modal-content a.m-yahoo:focus,.m-modal.m-dark .m-modal-content a.m-yahoo:active{background-color:rgba(172,136,211,.08);color:#ac88d3}.m-modal.m-dark .m-modal-content a.m-tg{color:#4cabdb}.m-modal.m-dark .m-modal-content a.m-tg:hover,.m-modal.m-dark .m-modal-content a.m-tg:focus,.m-modal.m-dark .m-modal-content a.m-tg:active{background-color:rgba(76,171,219,.08);color:#4cabdb}.m-modal.m-dark .m-modal-content a.m-wa{color:#4cd2c0}.m-modal.m-dark .m-modal-content a.m-wa:hover,.m-modal.m-dark .m-modal-content a.m-wa:focus,.m-modal.m-dark .m-modal-content a.m-wa:active{background-color:rgba(76,210,192,.08);color:#4cd2c0}.m-modal.m-dark .m-modal-content a.m-skype{color:#4cc7f4}.m-modal.m-dark .m-modal-content a.m-skype:hover,.m-modal.m-dark .m-modal-content a.m-skype:focus,.m-modal.m-dark .m-modal-content a.m-skype:active{background-color:rgba(76,199,244,.08);color:#4cc7f4}.m-modal.m-dark .m-modal-content a.m-custom-action{color:#b0ecb0}.m-modal.m-dark .m-modal-content a.m-custom-action:hover,.m-modal.m-dark .m-modal-content a.m-custom-action:focus,.m-modal.m-dark .m-modal-content a.m-custom-action:active{background-color:rgba(176,236,176,.08);color:#b0ecb0}.m-modal.m-dark .m-modal-content a.m-by:hover,.m-modal.m-dark .m-modal-content a.m-by:focus,.m-modal.m-dark .m-modal-content a.m-by:active{color:#fff}\", \"\"]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (i) {\n  return i[1];\n};","\n        var result = require(\"!!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../node_modules/sass-loader/dist/cjs.js!./mailgo.scss\");\n\n        if (result && result.__esModule) {\n            result = result.default;\n        }\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { MailgoModalType, MailgoInstallationType } from \"mailgo\";\n\n// links\nexport const MAILTO: string = \"mailto:\";\nexport const MAILGO: string = \"mailgo:\";\nexport const TEL: string = \"tel:\";\nexport const CALLTO: string = \"callto:\";\nexport const SMS: string = \"sms:\";\n\n// deep linking\nexport const outlookDeepLink: string = \"ms-outlook://\";\n\n// no mailgo class\nexport const NO_MAILGO: string = \"no-mailgo\";\n\n// responsive settings\nexport const DESKTOP: string = \"desktop\";\nexport const MOBILE: string = \"mobile\";\n\n// mailgo modal types\nexport const MAILGO_MAIL: MailgoModalType = \"mailgo\";\nexport const MAILGO_TEL: MailgoModalType = \"mailgo-tel\";\nexport const MAILGO_SMS: MailgoModalType = \"mailgo-sms\";\n\n// mailgo installation types\nexport const CLASSIC: MailgoInstallationType = \"classic\";\nexport const LESS_SPAM: MailgoInstallationType = \"less-spam\";\n\n// useful html tags\nexport const spanHTMLTag: string = \"span\";\nexport const aHTMLTag: string = \"a\";\nexport const pHTMLTag: string = \"p\";\n\n// default lang\nexport const defaultLang: string = \"en\";\n\n// useful regexp\nexport const notNumber: RegExp = new RegExp(\"[^0-9/]\", \"gi\");\nexport const leadingZeros: RegExp = new RegExp(\"^0+\", \"gi\");\n\n// custom action\nexport const customActionTextMaxLength: number = 20;\n","// validate a single email with regex\nexport const validateEmail = (email: string): boolean =>\n  /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n    email\n  );\n\n// validate an array of emails\nexport const validateEmails = (arr: string[]): boolean =>\n  arr.every(validateEmail);\n\n// validate a single tel with regex\nexport const validateTel = (tel: string): boolean =>\n  /^[+]{0,1}[\\s0-9]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*[p]{0,1}[\\s0-9]*$/.test(\n    tel\n  );\n\n// copy of a string\nexport const copyToClipboard = (str: string): boolean => {\n  let el: HTMLTextAreaElement = document.createElement(\n    \"textarea\"\n  ) as HTMLTextAreaElement;\n  el.value = str;\n  el.setAttribute(\"readonly\", \"\");\n  el.style.position = \"absolute\";\n  el.style.left = \"-9999px\";\n  document.body.appendChild(el);\n  let selected: Range | boolean =\n    document.getSelection().rangeCount > 0\n      ? document.getSelection().getRangeAt(0)\n      : false;\n  el.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(el);\n  if (selected) {\n    document.getSelection().removeAllRanges();\n    document.getSelection().addRange(selected);\n    return true;\n  }\n  return false;\n};\n\n// set focus loop within modal\nexport const setFocusLoop = (ref: HTMLElement): void => {\n  let modal = ref;\n  modal\n    .querySelector(\".m-modal-content a:last-of-type\")\n    .addEventListener(\"keydown\", leaveLastLink);\n  modal\n    .querySelector(\".m-modal-content a:first-of-type\")\n    .addEventListener(\"keydown\", leaveFirstLink);\n};\n\nexport const leaveLastLink = (e: KeyboardEvent): void => {\n  // going back to the first link to force looping\n  if (e.code === \"Tab\" && e.shiftKey === false) {\n    e.preventDefault();\n\n    ((e.target as HTMLElement)\n      .closest(\"div\")\n      .querySelector(\"a:first-of-type\") as HTMLElement).focus();\n  }\n};\n\nexport const leaveFirstLink = (e: KeyboardEvent): void => {\n  // going back to the first link to force looping\n  if (e.code === \"Tab\" && e.shiftKey === true) {\n    e.preventDefault();\n    ((e.target as HTMLElement)\n      .closest(\"div\")\n      .querySelector(\"a:last-of-type\") as HTMLElement).focus();\n  }\n};\n\nexport const truncate = (text: string, maxLength: number): string => {\n  return text && text.length > maxLength\n    ? text.substr(0, maxLength - 1) + \"...\"\n    : text;\n};\n","import {\n  MailgoConfig,\n  MailgoTranslations,\n  MailgoTranslation,\n  MailgoAction,\n  MailgoLanguages,\n  MailgoType,\n  MailgoDetail,\n  MailgoInstallationType,\n  MailgoModalType,\n} from \"mailgo\";\n\n// polyfill\n// import { mailgoPolyfill } from \"./polyfill\";\n\n// constants\nimport {\n  MAILTO,\n  MAILGO,\n  TEL,\n  CALLTO,\n  SMS,\n  MAILGO_MAIL,\n  MAILGO_TEL,\n  MAILGO_SMS,\n  CLASSIC,\n  LESS_SPAM,\n  NO_MAILGO,\n  MOBILE,\n  spanHTMLTag,\n  aHTMLTag,\n  pHTMLTag,\n  defaultLang,\n  notNumber,\n  leadingZeros,\n  customActionTextMaxLength,\n} from \"./constants\";\n\n// utils\nimport {\n  validateEmail,\n  validateEmails,\n  validateTel,\n  copyToClipboard,\n  setFocusLoop,\n  truncate,\n} from \"./utils\";\n\n// i18n for mailgo\nimport languages from \"../i18n/languages.json\";\nimport translations from \"../i18n/translations.json\";\n\n// mobile detect\nimport { userAgent } from \"./mobile-detect\";\n\n// mailgo scss\n// @ts-ignore\nimport mailgoStyle from \"./mailgo.scss\";\n\n// default language\nlet lang: string = defaultLang;\n\n// default strings\nconst defaultStrings: MailgoTranslation = (translations as MailgoTranslations)[\n  defaultLang\n];\n\n// translation strings\nlet strings: MailgoTranslation;\n\n// global mailgo config object\nlet config: MailgoConfig;\n\n// config to check if the client is mobile or desktop\nlet isMobile: boolean = false;\n\n// default config attributes\nlet mailtoEnabled: boolean = true;\nlet telEnabled: boolean = true;\nlet smsEnabled: boolean = false;\nlet desktopEnabled: boolean = true;\nlet mobileEnabled: boolean = true;\nlet validateEmailConfig: boolean = true;\nlet validateTelConfig: boolean = true;\nlet showFooterConfig: boolean = true;\nlet loadCSSConfig: boolean = true;\n\n// activeMailgoType\nlet activeMailgoType: MailgoType;\n\n// modals global object\nlet modalMailto: HTMLElement, modalTel: HTMLElement;\n\n// mailgo general variables\nlet url: URL, href: string, lessSpamHref: string;\n\n// mailgo mail variables\nlet mail: string, cc: string, bcc: string, subject: string, bodyMail: string;\n\n// mailgo mail custom action variables\nlet customActionText: string,\n  customActionTitle: string,\n  customActionUrl: string;\n\n// mailgo tel variables\nlet tel: string, msg: string, telegramUsername: string, skypeUsername: string;\n\n// the DOM elements\nlet title: HTMLElement,\n  titleTel: HTMLElement,\n  detailCc: HTMLElement,\n  detailBcc: HTMLElement,\n  detailSubject: HTMLElement,\n  detailBody: HTMLElement,\n  detailMsg: HTMLElement,\n  ccValue: HTMLElement,\n  bccValue: HTMLElement,\n  subjectValue: HTMLElement,\n  bodyValue: HTMLElement,\n  msgValue: HTMLElement,\n  activatedLink: HTMLElement;\n\n// mailgo buttons (actions)\nlet gmail: HTMLLinkElement,\n  outlook: HTMLLinkElement,\n  yahoo: HTMLLinkElement,\n  open: HTMLLinkElement,\n  telegram: HTMLLinkElement,\n  wa: HTMLLinkElement,\n  skype: HTMLLinkElement,\n  call: HTMLLinkElement,\n  copyMail: HTMLLinkElement,\n  copyTel: HTMLLinkElement,\n  customAction: HTMLLinkElement;\n\n/**\n * mailgoInit\n * the function that creates the mailgo elements in DOM\n */\nconst mailgoInit = (): void => {\n  // set the boolean for mobile/desktop\n  isMobile = userAgent() === MOBILE;\n\n  // responsive settings\n  {\n    if (typeof config?.desktop !== \"undefined\") {\n      desktopEnabled = config.desktop;\n      // if it is a desktop and desktop is not enabled no init mailgo\n      if (!isMobile && !desktopEnabled) {\n        return;\n      }\n    }\n    if (typeof config?.mobile !== \"undefined\") {\n      mobileEnabled = config.mobile;\n      // if it is a mobile and mobile is not enabled no init mailgo\n      if (isMobile && !mobileEnabled) {\n        return;\n      }\n    }\n  }\n\n  // set the mailgo language\n  mailgoSetLanguage();\n\n  // mailgo, if mailgo not already exists\n  let mailgoExists = !!document.getElementById(MAILGO_MAIL);\n\n  // if mailgo is enabled for mailto and it not exists in DOM\n  if (mailtoEnabled && !mailgoExists) {\n    // modal\n    modalMailto = createElement() as HTMLElement;\n    modalMailto.style.display = \"none\";\n    modalMailto.id = MAILGO_MAIL;\n    modalMailto.classList.add(\"m-modal\");\n    modalMailto.setAttribute(\"role\", \"dialog\");\n    modalMailto.setAttribute(\"tabindex\", \"-1\");\n    modalMailto.setAttribute(\"aria-labelledby\", \"m-title\");\n\n    // if dark is in config\n    if (config?.dark) {\n      enableDarkMode();\n    } else {\n      disableDarkMode();\n    }\n\n    // background\n    let modalBackground: HTMLElement = createElement();\n    modalBackground.className = \"m-modal-back\";\n    modalMailto.appendChild(modalBackground);\n\n    // modal content\n    let modalContent: HTMLElement = createElement();\n    modalContent.className = \"m-modal-content\";\n    modalMailto.appendChild(modalContent);\n\n    // title (email address)\n    title = createElement(\"strong\");\n    title.id = \"m-title\";\n    title.className = \"m-title\";\n    modalContent.appendChild(title);\n\n    // details\n    let details: HTMLElement = createElement();\n    details.id = \"m-details\";\n    details.className = \"m-details\";\n\n    detailCc = createElement(pHTMLTag);\n    detailCc.id = \"m-cc\";\n    let ccSpan: HTMLElement = createElement(spanHTMLTag);\n    ccSpan.className = \"w-500\";\n    ccSpan.appendChild(createTextNode(strings.cc_ || defaultStrings.cc_));\n    ccValue = createElement(spanHTMLTag);\n    ccValue.id = \"m-cc-value\";\n    detailCc.appendChild(ccSpan);\n    detailCc.appendChild(ccValue);\n    details.appendChild(detailCc);\n\n    detailBcc = createElement(pHTMLTag);\n    detailBcc.id = \"m-bcc\";\n    let bccSpan: HTMLElement = createElement(spanHTMLTag);\n    bccSpan.className = \"w-500\";\n    bccSpan.appendChild(createTextNode(strings.bcc_ || defaultStrings.bcc_));\n    bccValue = createElement(spanHTMLTag);\n    bccValue.id = \"m-bcc-value\";\n    detailBcc.appendChild(bccSpan);\n    detailBcc.appendChild(bccValue);\n    details.appendChild(detailBcc);\n\n    detailSubject = createElement(pHTMLTag);\n    detailSubject.id = \"m-subject\";\n    let subjectSpan: HTMLElement = createElement(spanHTMLTag);\n    subjectSpan.className = \"w-500\";\n    subjectSpan.appendChild(\n      createTextNode(strings.subject_ || defaultStrings.subject_)\n    );\n    subjectValue = createElement(spanHTMLTag);\n    subjectValue.id = \"m-subject-value\";\n    detailSubject.appendChild(subjectSpan);\n    detailSubject.appendChild(subjectValue);\n    details.appendChild(detailSubject);\n\n    detailBody = createElement(pHTMLTag);\n    detailBody.id = \"m-body\";\n    let bodySpan: HTMLElement = createElement(spanHTMLTag);\n    bodySpan.className = \"w-500\";\n    bodySpan.appendChild(createTextNode(strings.body_ || defaultStrings.body_));\n    bodyValue = createElement(spanHTMLTag);\n    bodyValue.id = \"m-body-value\";\n    detailBody.appendChild(bodySpan);\n    detailBody.appendChild(bodyValue);\n    details.appendChild(detailBody);\n\n    modalContent.appendChild(details);\n\n    // Gmail\n    gmail = createElement(aHTMLTag) as HTMLLinkElement;\n    gmail.id = \"m-gmail\";\n    gmail.href = \"#mailgo-gmail\";\n    gmail.classList.add(\"m-open\");\n    gmail.classList.add(\"m-gmail\");\n    gmail.appendChild(\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\n    );\n    let gmailSpan: HTMLElement = createElement(spanHTMLTag);\n    gmailSpan.className = \"w-500\";\n    gmailSpan.appendChild(\n      createTextNode(strings.gmail || defaultStrings.gmail)\n    );\n    gmail.appendChild(gmailSpan);\n\n    if (mailgoConfigAttributeEnabled(\"action\", \"gmail\")) {\n      modalContent.appendChild(gmail);\n    }\n\n    // Outlook\n    outlook = createElement(aHTMLTag) as HTMLLinkElement;\n    outlook.id = \"m-outlook\";\n    outlook.href = \"#mailgo-outlook\";\n    outlook.classList.add(\"m-open\");\n    outlook.classList.add(\"m-outlook\");\n    outlook.appendChild(\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\n    );\n    let outlookSpan: HTMLElement = createElement(spanHTMLTag);\n    outlookSpan.className = \"w-500\";\n    outlookSpan.appendChild(\n      createTextNode(strings.outlook || defaultStrings.outlook)\n    );\n    outlook.appendChild(outlookSpan);\n\n    if (mailgoConfigAttributeEnabled(\"action\", \"outlook\")) {\n      modalContent.appendChild(outlook);\n    }\n\n    // Outlook\n    yahoo = createElement(aHTMLTag) as HTMLLinkElement;\n    yahoo.id = \"m-yahoo\";\n    yahoo.href = \"#mailgo-yahoo\";\n    yahoo.classList.add(\"m-open\");\n    yahoo.classList.add(\"m-yahoo\");\n    yahoo.appendChild(\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\n    );\n    let yahooSpan: HTMLElement = createElement(spanHTMLTag);\n    yahooSpan.className = \"w-500\";\n    yahooSpan.appendChild(\n      createTextNode(strings.yahoo || defaultStrings.yahoo)\n    );\n    yahoo.appendChild(yahooSpan);\n\n    if (mailgoConfigAttributeEnabled(\"action\", \"yahoo\")) {\n      modalContent.appendChild(yahoo);\n    }\n\n    // open default\n    open = createElement(aHTMLTag) as HTMLLinkElement;\n    open.id = \"m-open\";\n    open.href = \"#mailgo-open\";\n    open.classList.add(\"m-open\");\n    open.classList.add(\"m-default\");\n    let openSpan: HTMLElement = createElement(spanHTMLTag);\n    openSpan.className = \"w-500\";\n    openSpan.appendChild(createTextNode(strings.open || defaultStrings.open));\n    open.appendChild(openSpan);\n    open.appendChild(\n      createTextNode(strings._default || defaultStrings._default)\n    );\n\n    modalContent.appendChild(open);\n\n    // copy\n    copyMail = createElement(aHTMLTag) as HTMLLinkElement;\n    copyMail.id = \"m-copy\";\n    copyMail.href = \"#mailgo-copy\";\n    copyMail.classList.add(\"m-copy\");\n    copyMail.classList.add(\"w-500\");\n    copyMail.appendChild(createTextNode(strings.copy || defaultStrings.copy));\n\n    modalContent.appendChild(copyMail);\n\n    // custom action\n    customAction = createElement(aHTMLTag) as HTMLLinkElement;\n    customAction.id = \"m-custom-action\";\n    customAction.href = \"#mailgo-custom-action\";\n    customAction.classList.add(\"m-open\");\n    customAction.classList.add(\"m-custom-action\");\n    if (mailgoConfigAttributeEnabled(\"action\", \"custom\")) {\n      modalContent.appendChild(customAction);\n    }\n\n    // hide mailgo.dev in footer only if showFooter is defined and equal to false\n    if (typeof config?.showFooter !== \"undefined\") {\n      showFooterConfig = config.showFooter;\n    }\n\n    if (showFooterConfig) {\n      modalContent.appendChild(byElement());\n    }\n\n    // add the modal at the end of the body\n    document.body.appendChild(modalMailto);\n\n    // every click outside the modal will hide the modal\n    modalBackground.addEventListener(\"click\", hideMailgo);\n  }\n\n  // mailgo tel, if mailgo-tel not already exists\n  let mailgoTelExists = !!document.getElementById(MAILGO_TEL);\n\n  // if mailgo is enabled for tel/callto and it not exists in DOM\n  if (telEnabled && !mailgoTelExists) {\n    // modal\n    modalTel = createElement() as HTMLElement;\n    modalTel.style.display = \"none\";\n    modalTel.id = MAILGO_TEL;\n    modalTel.classList.add(\"m-modal\");\n    modalTel.setAttribute(\"role\", \"dialog\");\n    modalTel.setAttribute(\"tabindex\", \"-1\");\n    modalTel.setAttribute(\"aria-labelledby\", \"m-tel-title\");\n\n    // if dark is in config\n    if (config?.dark) {\n      enableDarkMode();\n    } else {\n      disableDarkMode();\n    }\n\n    // background\n    let modalBackground: HTMLElement = createElement();\n    modalBackground.className = \"m-modal-back\";\n    modalTel.appendChild(modalBackground);\n\n    // modal content\n    let modalContent: HTMLElement = createElement();\n    modalContent.className = \"m-modal-content\";\n    modalTel.appendChild(modalContent);\n\n    // title (telephone number)\n    titleTel = createElement(\"strong\");\n    titleTel.id = \"m-tel-title\";\n    titleTel.className = \"m-title\";\n    modalContent.appendChild(titleTel);\n\n    // details\n    let detailsTel: HTMLElement = createElement();\n    detailsTel.id = \"m-tel-details\";\n    detailsTel.className = \"m-details\";\n\n    detailMsg = createElement(pHTMLTag);\n    detailMsg.id = \"m-msg\";\n    let msgSpan: HTMLElement = createElement(spanHTMLTag);\n    msgSpan.className = \"w-500\";\n    msgSpan.appendChild(createTextNode(strings.body_ || defaultStrings.body_));\n    msgValue = createElement(spanHTMLTag);\n    msgValue.id = \"m-msg-value\";\n    detailMsg.appendChild(msgSpan);\n    detailMsg.appendChild(msgValue);\n    detailsTel.appendChild(detailMsg);\n\n    modalContent.appendChild(detailsTel);\n\n    // Telegram\n    telegram = createElement(aHTMLTag) as HTMLLinkElement;\n    telegram.id = \"m-tg\";\n    telegram.href = \"#mailgo-telegram\";\n    telegram.classList.add(\"m-open\");\n    telegram.classList.add(\"m-tg\");\n\n    // by default not display\n    telegram.style.display = \"none\";\n\n    telegram.appendChild(\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\n    );\n    let telegramSpan: HTMLElement = createElement(spanHTMLTag);\n    telegramSpan.className = \"w-500\";\n    telegramSpan.appendChild(\n      createTextNode(strings.telegram || defaultStrings.telegram)\n    );\n    telegram.appendChild(telegramSpan);\n\n    if (mailgoConfigAttributeEnabled(\"action\", \"telegram\")) {\n      modalContent.appendChild(telegram);\n    }\n\n    // WhatsApp\n    wa = createElement(aHTMLTag) as HTMLLinkElement;\n    wa.id = \"m-wa\";\n    wa.href = \"#mailgo-whatsapp\";\n    wa.classList.add(\"m-open\");\n    wa.classList.add(\"m-wa\");\n    wa.appendChild(createTextNode(strings.open_in_ || defaultStrings.open_in_));\n    let waSpan: HTMLElement = createElement(spanHTMLTag);\n    waSpan.className = \"w-500\";\n    waSpan.appendChild(\n      createTextNode(strings.whatsapp || defaultStrings.whatsapp)\n    );\n    wa.appendChild(waSpan);\n\n    if (mailgoConfigAttributeEnabled(\"action\", \"whatsapp\")) {\n      modalContent.appendChild(wa);\n    }\n\n    // Skype\n    skype = createElement(aHTMLTag) as HTMLLinkElement;\n    skype.id = \"m-skype\";\n    skype.href = \"#mailgo-skype\";\n    skype.classList.add(\"m-open\");\n    skype.classList.add(\"m-skype\");\n    skype.appendChild(\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\n    );\n    let skypeSpan: HTMLElement = createElement(spanHTMLTag);\n    skypeSpan.className = \"w-500\";\n    skypeSpan.appendChild(\n      createTextNode(strings.skype || defaultStrings.skype)\n    );\n    skype.appendChild(skypeSpan);\n\n    if (mailgoConfigAttributeEnabled(\"action\", \"skype\")) {\n      modalContent.appendChild(skype);\n    }\n\n    // call default\n    call = createElement(aHTMLTag) as HTMLLinkElement;\n    call.id = \"m-call\";\n    call.href = \"#mailgo-open\";\n    call.classList.add(\"m-open\");\n    call.classList.add(\"m-default\");\n    let callSpan: HTMLElement = createElement(spanHTMLTag);\n    callSpan.className = \"w-500\";\n    callSpan.appendChild(createTextNode(strings.call || defaultStrings.call));\n    call.appendChild(callSpan);\n    call.appendChild(\n      createTextNode(strings._as_default || defaultStrings._as_default)\n    );\n\n    modalContent.appendChild(call);\n\n    // copy\n    copyTel = createElement(aHTMLTag) as HTMLLinkElement;\n    copyTel.id = \"m-tel-copy\";\n    copyTel.href = \"#mailgo-copy\";\n    copyTel.classList.add(\"m-copy\");\n    copyTel.classList.add(\"w-500\");\n    copyTel.appendChild(createTextNode(strings.copy || defaultStrings.copy));\n\n    modalContent.appendChild(copyTel);\n\n    // hide mailgo.dev in footer only if showFooter is defined and equal to false\n    if (typeof config?.showFooter !== \"undefined\") {\n      showFooterConfig = config.showFooter;\n    }\n\n    if (showFooterConfig) {\n      modalContent.appendChild(byElement());\n    }\n\n    // add the modal at the end of the body\n    document.body.appendChild(modalTel);\n\n    // every click outside the modal will hide the modal\n    modalBackground.addEventListener(\"click\", hideMailgo);\n  }\n\n  // event listener on body, if the element is mailgo-compatible the mailgo modal will be rendered\n  document.addEventListener(\"click\", mailgoClickListener);\n};\n\n/**\n * mailgoClickListener\n * function to check if an element is mailgo-enabled or not referencing to\n * mail:\n * document.querySelectorAll(\n *   'a[href^=\"mailto:\" i]:not(.no-mailgo), a[href=\"#mailgo\"], a.mailgo'\n * );\n * tel:\n * document.querySelectorAll(\n *   'a[href^=\"tel:\" i]:not(.no-mailgo), a[href=\"#mailgo\"], a.mailgo'\n * );\n * or\n * document.querySelectorAll(\n *   'a[href^=\"callto:\" i]:not(.no-mailgo), a[href=\"#mailgo\"], a.mailgo'\n * );\n * or\n * document.querySelectorAll(\n *   'a[href^=\"sms:\" i]:not(.no-mailgo), a[href=\"#mailgo\"], a.mailgo'\n * );\n */\nfunction mailgoClickListener(event: Event): boolean {\n  // check if the mailgo HTML exists in the body\n  if (\n    !document.body.contains(modalMailto) &&\n    !document.body.contains(modalTel)\n  ) {\n    return false;\n  }\n\n  // if a mailgo is already showing do nothing\n  if (mailgoIsShowing()) {\n    return false;\n  }\n\n  // the path of the event\n  let path =\n    (event.composedPath && event.composedPath()) ||\n    composedPath(event.target as HTMLElement);\n\n  if (path) {\n    path.forEach((element: HTMLElement) => {\n      if (element instanceof HTMLDocument || element instanceof Window) {\n        return false;\n      }\n\n      // go here only if one of the mailgo modals are enabled\n      if (mailtoEnabled || telEnabled || smsEnabled) {\n        let localMailgoType = getMailgoTypeByElement(element);\n\n        // go on if the localMailgoType is not null\n        if (localMailgoType) {\n          // set the active mailgo type\n          activeMailgoType = localMailgoType;\n\n          let activeMailgoModalType = activeMailgoType?.type;\n\n          if (activeMailgoModalType) {\n            // check if the setting is enabled and if so go with pre-render\n            if (\n              (mailtoEnabled && activeMailgoModalType === MAILGO_MAIL) ||\n              (telEnabled && activeMailgoModalType === MAILGO_TEL) ||\n              (smsEnabled && activeMailgoModalType === MAILGO_SMS)\n            ) {\n              // stop the normal execution of the element click\n              event.preventDefault();\n\n              // render mailgo\n              mailgoPreRender(element as HTMLLinkElement);\n\n              return true;\n            }\n          }\n        }\n      }\n    });\n  }\n\n  return false;\n}\n\n/**\n * mailgoPreRender\n * function to pre-render a mailgo, it helps populating elements needed by modal\n */\nfunction mailgoPreRender(\n  mailgoElementOrUrl: HTMLLinkElement | string\n): boolean {\n  let mailgoElement: HTMLLinkElement;\n\n  // get the type and installation from current mailgo type\n  let type: MailgoModalType = activeMailgoType?.type;\n  let installation: MailgoInstallationType = activeMailgoType?.installation;\n\n  // if type is not defined return\n  if (!type) return false;\n\n  if (typeof mailgoElementOrUrl === \"string\") {\n    // if the parameter is a string it is the url\n    href = mailgoElementOrUrl as string;\n  } else {\n    // if the paramenter is an HTMLLinkElement get the href attribute and the element\n    href = mailgoElementOrUrl.getAttribute(\"href\") as string;\n    mailgoElement = mailgoElementOrUrl as HTMLLinkElement;\n  }\n\n  // mailgo mail\n  if (type === MAILGO_MAIL) {\n    // if the installation is classic\n    if (installation === CLASSIC) {\n      if (validateUrl(href, MAILTO)) {\n        mail = decodeURIComponent(href.split(\"?\")[0].split(MAILTO)[1].trim());\n      } else if (validateUrl(href, MAILGO)) {\n        mail = decodeURIComponent(href.split(\"?\")[0].split(MAILGO)[1].trim());\n      }\n\n      try {\n        url = new URL(href);\n\n        let urlParams: URLSearchParams = url.searchParams;\n        // optional parameters for the email\n        cc = urlParams.get(\"cc\");\n        bcc = urlParams.get(\"bcc\");\n        subject = urlParams.get(\"subject\");\n        bodyMail = urlParams.get(\"body\");\n      } catch (error) {\n        console.log(error);\n      }\n    } else if (installation === LESS_SPAM) {\n      // if the installation is less-spam\n      // mail = data-address + @ + data-domain\n      mail =\n        mailgoElement.getAttribute(\"data-address\") &&\n        mailgoElement.getAttribute(\"data-domain\")\n          ? mailgoElement.getAttribute(\"data-address\") +\n            \"@\" +\n            mailgoElement.getAttribute(\"data-domain\")\n          : null;\n\n      try {\n        url = new URL(MAILTO + encodeURIComponent(mail));\n      } catch (error) {\n        console.log(error);\n      }\n\n      let parameters: string[] = [];\n\n      // cc = data-cc-address + @ + data-cc-domain\n      cc = mailgoElement.getAttribute(\"data-cc-address\")\n        ? mailgoElement.getAttribute(\"data-cc-address\") +\n          \"@\" +\n          mailgoElement.getAttribute(\"data-cc-domain\")\n        : null;\n\n      // if cc is defined add it to parameters\n      if (cc) parameters.push(\"cc=\" + cc);\n\n      // bcc = data-bcc-address + @ + data-bcc-domain\n      bcc = mailgoElement.getAttribute(\"data-bcc-address\")\n        ? mailgoElement.getAttribute(\"data-bcc-address\") +\n          \"@\" +\n          mailgoElement.getAttribute(\"data-bcc-domain\")\n        : null;\n\n      // if bcc is defined add it to parameters\n      if (bcc) parameters.push(\"bcc=\" + bcc);\n\n      // subject = data-subject\n      subject = mailgoElement.getAttribute(\"data-subject\");\n\n      // if subject is defined add it to parameters\n      if (subject) parameters.push(\"subject=\" + subject);\n\n      // body = data-body\n      bodyMail = mailgoElement.getAttribute(\"data-body\");\n\n      // if body is defined add it to parameters\n      if (bodyMail) parameters.push(\"body=\" + bodyMail);\n\n      // set the lessSpamHref\n      lessSpamHref = buildLessSpamHref(\n        MAILTO + encodeURIComponent(mail),\n        parameters\n      );\n    }\n\n    // set custom action text, title and url\n    customActionText = \"\";\n    customActionTitle = \"\";\n    customActionUrl = \"\";\n    if (mailgoConfigAttributeEnabled(\"action\", \"custom\") && mailgoElement) {\n      customActionText =\n        mailgoElement.getAttribute(\"data-custom-action-text\") ??\n        customActionText;\n      if (customActionText) {\n        customActionTitle = customActionText;\n        customActionText = truncate(\n          customActionText,\n          customActionTextMaxLength\n        );\n      }\n\n      customActionUrl =\n        mailgoElement.getAttribute(\"data-custom-action-url\") ?? customActionUrl;\n    }\n\n    // if is in config use it\n    if (typeof config?.validateEmail !== \"undefined\") {\n      validateEmailConfig = config.validateEmail;\n    }\n\n    if (validateEmailConfig) {\n      // validate the email address\n      if (!validateEmails(mail.split(\",\"))) {\n        return false;\n      }\n\n      // if cc, bcc are not valid cc, bcc = \"\"\n      if (cc && !validateEmails(cc.split(\",\"))) cc = \"\";\n      if (bcc && !validateEmails(bcc.split(\",\"))) bcc = \"\";\n    }\n  }\n  // mailgo tel\n  else if (type === MAILGO_TEL) {\n    if (installation === CLASSIC) {\n      if (validateUrl(href, TEL)) {\n        tel = decodeURIComponent(href.split(\"?\")[0].split(TEL)[1].trim());\n      } else if (validateUrl(href, CALLTO)) {\n        tel = decodeURIComponent(href.split(\"?\")[0].split(CALLTO)[1].trim());\n      } else if (validateUrl(href, SMS)) {\n        tel = decodeURIComponent(href.split(\"?\")[0].split(SMS)[1].trim());\n      }\n\n      try {\n        url = new URL(href);\n        let urlParams: URLSearchParams = url.searchParams;\n\n        // optional parameters for the phone number\n        msg = urlParams.get(\"body\");\n      } catch (error) {\n        console.log(error);\n      }\n    } else if (installation == LESS_SPAM) {\n      tel = mailgoElement.getAttribute(\"data-tel\");\n      msg = mailgoElement.getAttribute(\"data-msg\");\n\n      try {\n        url = new URL(TEL + encodeURIComponent(tel));\n      } catch (error) {\n        console.log(error);\n      }\n\n      let parameters: string[] = [];\n\n      // if msg is defined add it to parameters\n      if (msg) parameters.push(\"body=\" + msg);\n\n      // set the lessSpamHref\n      lessSpamHref = buildLessSpamHref(\n        TEL + encodeURIComponent(tel),\n        parameters\n      );\n    }\n\n    // if is in config use it\n    if (typeof config?.validateTel !== \"undefined\") {\n      validateTelConfig = config.validateTel;\n    }\n\n    // validate the phone number\n    if (validateTelConfig) {\n      if (!validateTel(tel)) return false;\n    }\n\n    // Telegram username\n    if (mailgoElement && mailgoElement.hasAttribute(\"data-telegram\")) {\n      telegramUsername = mailgoElement.getAttribute(\"data-telegram\");\n    } else {\n      telegramUsername = null;\n    }\n\n    // Telegram username\n    if (mailgoElement && mailgoElement.hasAttribute(\"data-skype\")) {\n      skypeUsername = mailgoElement.getAttribute(\"data-skype\");\n    } else {\n      skypeUsername = null;\n    }\n  }\n\n  // if dark is in config or contained in the element\n  if (config?.dark || mailgoElement?.classList.contains(\"dark\")) {\n    enableDarkMode();\n  } else {\n    disableDarkMode();\n  }\n\n  // render mailgo\n  mailgoRender();\n\n  return true;\n}\n\n/**\n * mailgoDirectRender\n * function to render a mailgo directly from a URL\n */\nfunction mailgoDirectRender(directUrl: string): boolean {\n  // start mailgo\n  mailgo();\n\n  if (validateUrl(directUrl, MAILTO) || validateUrl(directUrl, MAILGO)) {\n    activeMailgoType = {\n      type: MAILGO_MAIL,\n      installation: CLASSIC,\n    };\n    return mailgoPreRender(directUrl as string);\n  } else if (\n    validateUrl(directUrl, TEL) ||\n    validateUrl(directUrl, CALLTO) ||\n    validateUrl(directUrl, SMS)\n  ) {\n    activeMailgoType = {\n      type: MAILGO_TEL,\n      installation: CLASSIC,\n    };\n    return mailgoPreRender(directUrl as string);\n  }\n\n  return false;\n}\n\n/**\n * mailgoRender\n * function to render a mailgo (mail or tel)\n */\nfunction mailgoRender(): boolean {\n  // get the type from current mailgo type\n  let type: MailgoModalType = activeMailgoType?.type;\n\n  // if type is not defined return\n  if (!type) return false;\n\n  // mailgo mail\n  if (type === MAILGO_MAIL) {\n    // the title of the modal (email address)\n    title.textContent = mail.split(\",\").join(\"\\n\");\n\n    // add the details if provided\n    if (mailgoConfigAttributeEnabled(\"detail\", \"cc\") && cc) {\n      detailCc.style.display = \"block\";\n      ccValue.textContent = cc.split(\",\").join(\"\\n\");\n    } else {\n      detailCc.style.display = \"none\";\n    }\n\n    if (mailgoConfigAttributeEnabled(\"detail\", \"bcc\") && bcc) {\n      detailBcc.style.display = \"block\";\n      bccValue.textContent = bcc.split(\",\").join(\"\\n\");\n    } else {\n      detailBcc.style.display = \"none\";\n    }\n\n    if (mailgoConfigAttributeEnabled(\"detail\", \"subject\") && subject) {\n      detailSubject.style.display = \"block\";\n      subjectValue.textContent = subject;\n    } else {\n      detailSubject.style.display = \"none\";\n    }\n\n    if (mailgoConfigAttributeEnabled(\"detail\", \"body\") && bodyMail) {\n      detailBody.style.display = \"block\";\n      bodyValue.textContent = bodyMail;\n    } else {\n      detailBody.style.display = \"none\";\n    }\n\n    // custom action text, title and visibility\n    customAction.textContent = customActionText;\n    customAction.title = customActionTitle;\n    customAction.style.display = customActionText ? \"block\" : \"none\";\n\n    // add the actions\n    gmail.addEventListener(\"click\", openGmail);\n\n    outlook.addEventListener(\"click\", openOutlook);\n\n    yahoo.addEventListener(\"click\", openYahooMail);\n\n    open.addEventListener(\"click\", openDefault);\n\n    copyMail.addEventListener(\"click\", copy);\n\n    customAction.addEventListener(\"click\", openCustomAction);\n  }\n  // mailgo tel\n  else if (type === MAILGO_TEL) {\n    // the title of the modal (tel)\n    titleTel.textContent = tel;\n\n    if (mailgoConfigAttributeEnabled(\"detail\", \"msg\") && msg) {\n      detailMsg.style.display = \"block\";\n      msgValue.textContent = msg;\n    } else {\n      detailMsg.style.display = \"none\";\n    }\n\n    // add the actions to buttons\n    wa.addEventListener(\"click\", openWhatsApp);\n\n    // telegram must be shown only if data-telegram is provided\n    if (telegramUsername) {\n      document.getElementById(\"m-tg\").style.display = \"block\";\n      telegram.addEventListener(\"click\", openTelegram);\n    } else {\n      document.getElementById(\"m-tg\").style.display = \"none\";\n    }\n\n    skype.addEventListener(\"click\", openSkype);\n\n    call.addEventListener(\"click\", openDefault);\n\n    copyTel.addEventListener(\"click\", copy);\n  }\n\n  // show the mailgo\n  showMailgo(type);\n\n  // add listener keyDown\n  document.addEventListener(\"keydown\", mailgoKeydown);\n\n  return true;\n}\n\n// actions\nconst openGmail = (event?: Event): void => {\n  event.preventDefault();\n\n  let urlString: string;\n  let installation: MailgoInstallationType = activeMailgoType?.installation;\n\n  if (installation === CLASSIC) {\n    try {\n      urlString = url.toString();\n    } catch (e) {\n      urlString = href;\n    }\n  } else if (installation === LESS_SPAM) {\n    urlString = lessSpamHref;\n  }\n\n  // Gmail url\n  let gmailUrl: string =\n    \"https://mail.google.com/mail/?extsrc=mailto&url=\" +\n    encodeURIComponent(urlString);\n\n  // open the link\n  window.open(gmailUrl, \"_blank\", \"noopener, noreferrer\");\n\n  // hide the modal\n  hideMailgo();\n};\n\nconst openOutlook = (event?: Event): void => {\n  event.preventDefault();\n\n  // Outlook starting url\n  let startingOutlookUrl: string =\n    \"https://outlook.live.com/owa/?path=/mail/action/compose&to=\";\n\n  // let the user to decide to open Office365 Outlook instead of the classic outlook.live.com\n  if (config?.office365) {\n    startingOutlookUrl =\n      \"https://outlook.office365.com/owa/?path=/mail/action/compose&to=\";\n  }\n\n  // Outlook url\n  let outlookUrl: string = startingOutlookUrl + encodeURIComponent(mail);\n\n  // the details if provided\n  if (subject) {\n    outlookUrl = outlookUrl.concat(\"&subject=\" + encodeURIComponent(subject));\n  }\n\n  if (bodyMail) {\n    outlookUrl = outlookUrl.concat(\"&body=\" + encodeURIComponent(bodyMail));\n  }\n\n  // open the link\n  window.open(outlookUrl, \"_blank\", \"noopener, noreferrer\");\n\n  // hide the modal\n  hideMailgo();\n};\n\nconst openYahooMail = (event?: Event): void => {\n  event.preventDefault();\n\n  // Yahoo url\n  let yahooUrl: string = \"https://compose.mail.yahoo.com/?to=\" + mail;\n\n  // the details if provided\n  if (subject) {\n    yahooUrl = yahooUrl.concat(\"&subject=\" + encodeURIComponent(subject));\n  }\n  if (bodyMail) {\n    yahooUrl = yahooUrl.concat(\"&body=\" + encodeURIComponent(bodyMail));\n  }\n\n  // open the link\n  window.open(yahooUrl, \"_blank\", \"noopener, noreferrer\");\n\n  // hide the modal\n  hideMailgo();\n};\n\nconst openTelegram = (event?: Event): void => {\n  event.preventDefault();\n\n  // check if telegramUsername exists\n  if (telegramUsername) {\n    // Telegram url\n    let tgUrl: string = \"https://t.me/\" + encodeURIComponent(telegramUsername);\n\n    // open the url\n    window.open(tgUrl, \"_blank\", \"noopener, noreferrer\");\n\n    // hide the modal\n    hideMailgo();\n  }\n};\n\nconst openSkype = (event?: Event): void => {\n  event.preventDefault();\n\n  let skype: string = skypeUsername || tel;\n\n  // Telegram url\n  let skypeUrl: string = \"skype:\" + encodeURIComponent(skype);\n\n  // open the url\n  window.open(skypeUrl, \"_blank\", \"noopener, noreferrer\");\n\n  // hide the modal\n  hideMailgo();\n};\n\nconst openWhatsApp = (event?: Event): void => {\n  event.preventDefault();\n\n  // WhatsApp API doesn't work with non number digits and leading 0s: https://faq.whatsapp.com/general/chats/how-to-use-click-to-chat/\n  let whatappTel = tel.replace(notNumber, \"\").replace(leadingZeros, \"\");\n\n  // WhatsApp url\n  let waUrl: string = \"https://wa.me/\" + encodeURIComponent(whatappTel);\n\n  // the details if provided\n  if (msg) {\n    waUrl = waUrl.concat(\"?text=\" + encodeURIComponent(msg));\n  }\n\n  // open the url\n  window.open(waUrl, \"_blank\", \"noopener, noreferrer\");\n\n  // hide the modal\n  hideMailgo();\n};\n\nconst openDefault = (event?: Event): void => {\n  event.preventDefault();\n\n  let installation: MailgoInstallationType = activeMailgoType?.installation;\n\n  // if the installation is classic the browser can follow the default behaviour\n  if (installation === CLASSIC) {\n    window.location.href = href;\n  } else if (installation === LESS_SPAM) {\n    // if the installation is less-spam use the built less-spam href\n    window.location.href = lessSpamHref;\n  }\n\n  hideMailgo();\n};\n\nconst copy = (event?: Event): void => {\n  event.preventDefault();\n\n  // the correct copyButton (mail or tel)\n  if (mailgoIsShowing()) {\n    let activeCopy: HTMLElement;\n\n    let type: MailgoModalType = activeMailgoType?.type;\n\n    if (type === MAILGO_MAIL) {\n      // in case it is showing mail modal copy email address\n      copyToClipboard(mail);\n      activeCopy = copyMail;\n    } else {\n      // in case it is showing tel modal copy phone number\n      copyToClipboard(tel);\n      activeCopy = copyTel;\n    }\n\n    activeCopy.textContent = strings.copied || defaultStrings.copied;\n    setTimeout(() => {\n      activeCopy.textContent = strings.copy || defaultStrings.copy;\n      // hide after the timeout\n      hideMailgo();\n    }, 999);\n  }\n};\n\nconst openCustomAction = (event?: Event): void => {\n  event?.preventDefault();\n\n  if (customActionUrl) {\n    const customActionUrlEncoded = encodeURI(customActionUrl);\n\n    window.open(customActionUrlEncoded, \"_blank\", \"noopener, noreferrer\");\n  }\n\n  hideMailgo();\n};\n\n// function to find if a link is a mailto, tel, callto or sms\nconst validateUrl = (url: string, type: string = MAILTO) => {\n  let regexValidate = new RegExp(\"^\" + type + \"((.)+)\", \"gi\");\n  return regexValidate.test(url);\n};\n\n// function that returns if an element is a mailgo\nfunction getMailgoTypeByElement(element: HTMLElement): MailgoType | null {\n  const linkElement = element as HTMLLinkElement;\n  if (!linkElement.getAttribute) {\n    return null;\n  }\n\n  let elementHref: string = linkElement.getAttribute(\"href\");\n\n  // return null if there is no-mailgo in class\n  if (element.classList?.contains(NO_MAILGO)) {\n    return null;\n  }\n\n  // the case of classic type of mailgo, like a href=mailto:... or a href=tel:... and the class=mailgo with a useful href\n  if (elementHref || element.classList?.contains(\"mailgo\")) {\n    if (validateUrl(elementHref, MAILTO) || validateUrl(elementHref, MAILGO)) {\n      // a mailto: or mailgo:\n      return {\n        type: MAILGO_MAIL,\n        installation: CLASSIC,\n      };\n    } else if (\n      validateUrl(elementHref, TEL) ||\n      validateUrl(elementHref, CALLTO)\n    ) {\n      // a tel: or callto:\n      return {\n        type: MAILGO_TEL,\n        installation: CLASSIC,\n      };\n    } else if (validateUrl(elementHref, SMS)) {\n      // a sms:\n      return {\n        type: MAILGO_SMS,\n        installation: CLASSIC,\n      };\n    }\n  }\n\n  if (elementHref === \"#mailgo\" || element.classList?.contains(\"mailgo\")) {\n    // less-spam installation of mailgo, check to the attributes\n    if (\n      element.hasAttribute(\"data-address\") &&\n      element.hasAttribute(\"data-domain\")\n    ) {\n      // less-spam mailto with data-address and data-domain\n      return {\n        type: MAILGO_MAIL,\n        installation: LESS_SPAM,\n      };\n    } else if (element.hasAttribute(\"data-tel\")) {\n      // less-spam tel with data-tel\n      return {\n        type: MAILGO_TEL,\n        installation: LESS_SPAM,\n      };\n    } else if (element.hasAttribute(\"data-msg\")) {\n      // less-spam sms with data-msd\n      return {\n        type: MAILGO_SMS,\n        installation: LESS_SPAM,\n      };\n    }\n  }\n\n  return null;\n}\n\n/**\n * mailgoKeydown\n * function to manage the keydown event when the modal is showing, return a boolean that represents if a useful key has been pressed\n */\nconst mailgoKeydown = (keyboardEvent: KeyboardEvent): boolean => {\n  // if mailgo is showing\n  if (mailgoIsShowing()) {\n    let type: MailgoModalType = activeMailgoType?.type;\n\n    if (type === MAILGO_MAIL) {\n      switch (keyboardEvent.keyCode) {\n        case 27:\n          // Escape\n          hideMailgo();\n          return true;\n        case 71:\n          // g -> open GMail\n          openGmail();\n          return true;\n        case 79:\n          // o -> open Outlook\n          openOutlook();\n          return true;\n        case 89:\n          // y -> open Yahoo Mail\n          openYahooMail();\n          return true;\n        case 32:\n        case 13:\n          // spacebar or enter -> open default\n          openDefault();\n          return true;\n        case 67:\n          // c -> copy\n          copy();\n          return true;\n        case 65:\n          // a -> custom Action\n          openCustomAction();\n          return true;\n        default:\n          return false;\n      }\n    } else if (type === MAILGO_TEL) {\n      switch (keyboardEvent.keyCode) {\n        case 27:\n          // Escape\n          hideMailgo();\n          return true;\n        case 84:\n          // t -> open Telegram\n          openTelegram();\n          return true;\n        case 87:\n          // w -> open WhatsApp\n          openWhatsApp();\n          return true;\n        case 83:\n          // s -> open Skype\n          openSkype();\n          return true;\n        case 32:\n        case 13:\n          // spacebar or enter -> open default\n          openDefault();\n          return true;\n        case 67:\n          // c -> copy\n          copy();\n          return true;\n        default:\n          return false;\n      }\n    }\n  }\n  return false;\n};\n\n// show the modal\nconst showMailgo = (type: MailgoModalType): void => {\n  // show the correct modal\n  setModalDisplay(type, \"flex\");\n};\n\n// hide the modal\nconst hideMailgo = (): void => {\n  // hide all the modals\n  setModalDisplay(MAILGO_MAIL, \"none\");\n  setModalDisplay(MAILGO_TEL, \"none\");\n\n  // remove listener keyDown\n  document.removeEventListener(\"keydown\", mailgoKeydown);\n};\n\n// is the mailgo modal hidden?\nconst mailgoIsShowing = (): boolean => {\n  return (\n    (mailtoEnabled && getModalDisplay(MAILGO_MAIL) === \"flex\") ||\n    ((telEnabled || smsEnabled) && getModalDisplay(MAILGO_TEL) === \"flex\")\n  );\n};\n\nconst byElement = (): HTMLLinkElement => {\n  // by element in the footer\n  let by: HTMLLinkElement = createElement(aHTMLTag) as HTMLLinkElement;\n  by.href = \"https://mailgo.dev?ref=mailgo-modal\";\n  by.className = \"m-by\";\n  by.target = \"_blank\";\n  by.rel = \"noopener noreferrer\";\n  by.appendChild(createTextNode(\"mailgo.dev\"));\n\n  return by;\n};\n\n// create element\nconst createElement = (element: string = \"div\"): HTMLElement =>\n  document.createElement(element);\n\n// create text node\nconst createTextNode = (element: string): Text =>\n  document.createTextNode(element);\n\n// get the correct HTMLElement from a type\nconst getModalHTMLElement = (type: MailgoModalType = MAILGO_MAIL) => {\n  if (type === MAILGO_TEL) {\n    return modalTel;\n  } else {\n    return modalMailto;\n  }\n};\n\n// get display value\nconst getModalDisplay = (ref: MailgoModalType = MAILGO_MAIL): string =>\n  getModalHTMLElement(ref).style.display;\n\n// set display value\nconst setModalDisplay = (\n  ref: MailgoModalType = MAILGO_MAIL,\n  value: string\n): void => {\n  let modal = getModalHTMLElement(ref);\n\n  if (modal) {\n    modal.style.display = value;\n\n    if (value === \"flex\") {\n      // \"save\" the activated link.\n      activatedLink = document.activeElement as HTMLElement;\n      modal.setAttribute(\"aria-hidden\", \"false\");\n\n      // Focus on the modal container.\n      modal.setAttribute(\"tabindex\", \"0\");\n      modal.focus();\n      setFocusLoop(modal);\n    } else {\n      modal.setAttribute(\"aria-hidden\", \"true\");\n\n      // focus back the activated link for getting back to the context.\n      modal.setAttribute(\"tabindex\", \"-1\");\n      activatedLink.focus();\n    }\n  }\n};\n\n// enable dark mode\nconst enableDarkMode = () => {\n  // get the type from current mailgo type\n  let type: MailgoModalType = activeMailgoType?.type;\n  if (type) {\n    getModalHTMLElement(type).classList.add(\"m-dark\");\n  }\n};\n\n// disable dark mode\nconst disableDarkMode = () => {\n  // get the type from current mailgo type\n  let type: MailgoModalType = activeMailgoType?.type;\n  if (type) {\n    getModalHTMLElement(type).classList.remove(\"m-dark\");\n  }\n};\n\n// custom composedPath if path or event.composedPath() are not defined\nconst composedPath = (\n  el: HTMLElement\n): (HTMLElement | Document | (Window & typeof globalThis))[] => {\n  let path = [];\n\n  while (el) {\n    path.push(el);\n\n    if (el.tagName === \"HTML\") {\n      path.push(document);\n      path.push(window);\n      return path;\n    }\n\n    el = el.parentElement;\n  }\n};\n\n// function to recreate a mailto: or tel: href from less-spam\nconst buildLessSpamHref = (type: string, parameters: string[]): string => {\n  lessSpamHref = type;\n  if (parameters && parameters.length > 0) {\n    let joinedParams = parameters.join(\"&\");\n    lessSpamHref = lessSpamHref.concat(\"?\" + joinedParams);\n  }\n  return lessSpamHref;\n};\n\n// function to check an attribute is enabled or not, by default considering it enabled\nconst mailgoConfigAttributeEnabled = (\n  type: \"action\" | \"detail\",\n  attribute: MailgoAction | MailgoDetail\n): boolean => {\n  // by default all the actions and attribute are enabled\n  if (!config) {\n    return true;\n  }\n\n  // if the attribute type is action consider the actions config attribute\n  if (type === \"action\") {\n    if (config && !config?.actions) {\n      return true;\n    }\n\n    if (\n      config &&\n      config.actions &&\n      config?.actions[attribute as MailgoAction] === false\n    ) {\n      return false;\n    }\n  } else if (type === \"detail\") {\n    // else consider the details attribute\n\n    if (config && !config?.details) {\n      return true;\n    }\n\n    if (\n      config &&\n      config.details &&\n      config?.details[attribute as MailgoDetail] === false\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n// manage the language of mailgo\nconst mailgoSetLanguage = (): string => {\n  let languageType = \"default lang\";\n\n  // if a language is defined in configuration use it\n  if (\n    config?.lang &&\n    (languages as MailgoLanguages).indexOf(config.lang) !== -1\n  ) {\n    lang = config.lang;\n    languageType = \"config lang\";\n  } else {\n    // else if is defined <html lang=\"\"> use it!\n    // keep the lang from html\n    let htmlLang: string = document.documentElement.lang;\n\n    // find the correct language using the lang attribute, not just a === because there a are cases like fr-FR or fr_FR in html lang attribute\n    (languages as MailgoLanguages).forEach((language: any) => {\n      if (new RegExp(\"^\" + language, \"gi\").test(htmlLang)) {\n        lang = language;\n        languageType = \"html lang\";\n      }\n    });\n  }\n\n  // strings\n  strings = (translations as MailgoTranslations)[lang];\n\n  return languageType;\n};\n\nconst mailgoAddStyle = (): void => {\n  if (!document.getElementById(\"mailgo-style\")) {\n    // mailgo style\n    let mailgoCSSElement: HTMLStyleElement = createElement(\n      \"style\"\n    ) as HTMLStyleElement;\n    mailgoCSSElement.id = \"mailgo-style\";\n    mailgoCSSElement.type = \"text/css\";\n    mailgoCSSElement.appendChild(createTextNode(mailgoStyle));\n    document.head.appendChild(mailgoCSSElement);\n  }\n};\n\nfunction mailgoValidateEmail(email: string): boolean {\n  return validateEmail(email);\n}\n\n// mailgo\nfunction mailgo(mailgoConfig?: MailgoConfig): boolean {\n  try {\n    // polyfill mailgo\n    // mailgoPolyfill();\n\n    // set the global config merging window mailgConfig and mailgoConfig passed as a parameter\n    config = { ...mailgoConfig, ...((window as any)?.mailgoConfig || null) };\n\n    // if the window is defined...\n    if (typeof window !== \"undefined\") {\n      // if is set in config use it (load the mailgo CSS)\n      if (typeof config?.loadCSS !== \"undefined\") {\n        loadCSSConfig = config.loadCSS;\n      }\n\n      // if is set in config use it (enable mailto)\n      if (typeof config?.mailto !== \"undefined\") {\n        mailtoEnabled = config.mailto;\n      }\n\n      // if is set in config use it (enable tel)\n      if (typeof config?.tel !== \"undefined\") {\n        telEnabled = config.tel;\n      }\n\n      // if is set in config use it (enable sms)\n      if (typeof config?.sms !== \"undefined\") {\n        smsEnabled = config.sms;\n      }\n\n      // if load css enabled load it!\n      if (loadCSSConfig) {\n        // add the style for mailgo\n        mailgoAddStyle();\n      }\n\n      // if is set an initEvent add the listener\n      if (config?.initEvent) {\n        if (config?.listenerOptions) {\n          // listener options specified\n          document.addEventListener(\n            config.initEvent,\n            mailgoInit,\n            config.listenerOptions\n          );\n        } else {\n          // no listener options\n          document.addEventListener(config.initEvent, mailgoInit);\n        }\n      } else {\n        mailgoInit();\n      }\n\n      return true;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n  return false;\n}\n\n// define the methods also for window element\nif (typeof window !== \"undefined\") {\n  (window as any).getMailgoTypeByElement = getMailgoTypeByElement;\n  (window as any).mailgoClickListener = mailgoClickListener;\n  (window as any).mailgoCheckRender = mailgoClickListener; // for compatibility with old version of mailgo\n  (window as any).mailgoPreRender = mailgoPreRender;\n  (window as any).mailgoDirectRender = mailgoDirectRender;\n  (window as any).mailgoRender = mailgoRender;\n  (window as any).mailgoValidateEmail = mailgoValidateEmail;\n  (window as any).mailgo = mailgo;\n}\n\nexport {\n  getMailgoTypeByElement,\n  mailgoClickListener,\n  mailgoPreRender,\n  mailgoDirectRender,\n  mailgoRender,\n  mailgoValidateEmail,\n};\n\nexport default mailgo;\n","export const userAgent = () => {\n  if (\n    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n      navigator.userAgent\n    )\n  ) {\n    return \"mobile\";\n  }\n  return \"desktop\";\n};\n","// webpack > dist/mailgo.nocss.min.js\n\nimport mailgo from \"../src/mailgo\";\n\n// call init mailgo attached to the event DOMContentLoaded\nconst mailgoConfig = {\n  initEvent: \"DOMContentLoaded\",\n  loadCSS: false,\n};\n\nmailgo(mailgoConfig);\n"],"names":["___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___","___CSS_LOADER_EXPORT___","___CSS_LOADER_API_IMPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","result","__esModule","default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","MAILTO","MAILGO","TEL","CALLTO","SMS","MAILGO_MAIL","MAILGO_TEL","MAILGO_SMS","CLASSIC","LESS_SPAM","spanHTMLTag","aHTMLTag","pHTMLTag","notNumber","RegExp","leadingZeros","validateEmail","email","test","validateEmails","arr","every","copyToClipboard","str","el","document","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","setFocusLoop","ref","modal","querySelector","addEventListener","leaveLastLink","leaveFirstLink","e","code","shiftKey","preventDefault","target","closest","focus","strings","config","activeMailgoType","modalMailto","modalTel","url","href","lessSpamHref","mail","cc","bcc","subject","bodyMail","customActionText","customActionTitle","customActionUrl","tel","msg","telegramUsername","skypeUsername","title","titleTel","detailCc","detailBcc","detailSubject","detailBody","detailMsg","ccValue","bccValue","subjectValue","bodyValue","msgValue","activatedLink","gmail","outlook","yahoo","open","telegram","wa","skype","copyMail","copyTel","customAction","lang","defaultStrings","translations","isMobile","mailtoEnabled","telEnabled","smsEnabled","desktopEnabled","mobileEnabled","validateEmailConfig","validateTelConfig","showFooterConfig","loadCSSConfig","mailgoInit","navigator","userAgent","desktop","mobile","mailgoSetLanguage","mailgoExists","getElementById","display","classList","add","dark","enableDarkMode","disableDarkMode","modalBackground","className","modalContent","details","ccSpan","createTextNode","cc_","bccSpan","bcc_","subjectSpan","subject_","bodySpan","body_","open_in_","gmailSpan","mailgoConfigAttributeEnabled","outlookSpan","yahooSpan","openSpan","_default","copy","showFooter","byElement","hideMailgo","mailgoTelExists","detailsTel","msgSpan","telegramSpan","waSpan","whatsapp","skypeSpan","callSpan","_as_default","mailgoClickListener","event","contains","mailgoIsShowing","path","composedPath","forEach","element","HTMLDocument","Window","localMailgoType","getMailgoTypeByElement","activeMailgoModalType","type","mailgoPreRender","mailgoElementOrUrl","mailgoElement","text","maxLength","installation","getAttribute","validateUrl","decodeURIComponent","split","trim","urlParams","URL","searchParams","error","console","log","encodeURIComponent","parameters","buildLessSpamHref","substr","validateTel","hasAttribute","mailgoRender","textContent","openGmail","openOutlook","openYahooMail","openDefault","openCustomAction","openWhatsApp","openTelegram","openSkype","showMailgo","mailgoKeydown","urlString","gmailUrl","window","startingOutlookUrl","office365","outlookUrl","yahooUrl","tgUrl","skypeUrl","whatappTel","replace","waUrl","location","activeCopy","copied","setTimeout","customActionUrlEncoded","encodeURI","regexValidate","linkElement","elementHref","keyboardEvent","keyCode","setModalDisplay","removeEventListener","getModalDisplay","by","rel","getModalHTMLElement","activeElement","remove","tagName","parentElement","joinedParams","attribute","actions","languageType","languages","htmlLang","documentElement","language","mailgo","mailgoConfig","loadCSS","mailto","sms","mailgoCSSElement","mailgoStyle","head","mailgoAddStyle","initEvent","listenerOptions","mailgoCheckRender","mailgoDirectRender","directUrl","mailgoValidateEmail"],"sourceRoot":""}