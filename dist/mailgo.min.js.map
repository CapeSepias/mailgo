{"version":3,"sources":["webpack://mailgo/../src/constants.ts","webpack://mailgo/../src/utils.ts","webpack://mailgo/../src/mailgo.scss","webpack://mailgo/../node_modules/css-loader/dist/runtime/api.js","webpack://mailgo/../src/mailgo.scss?81f2","webpack://mailgo/../src/mailgo.ts","webpack://mailgo/./mailgo.dist.ts","webpack://mailgo/webpack/bootstrap","webpack://mailgo/webpack/startup","webpack://mailgo/webpack/runtime/define property getters","webpack://mailgo/webpack/runtime/hasOwnProperty shorthand","webpack://mailgo/webpack/runtime/make namespace object"],"names":["MAILTO","MAILGO","TEL","CALLTO","SMS","outlookDeepLink","NO_MAILGO","MAILGO_MAIL","MAILGO_TEL","MAILGO_SMS","spanHTMLTag","aHTMLTag","pHTMLTag","defaultLang","mailgoReadyTag","mailgoRenderTag","validateEmail","email","test","validateEmails","arr","every","validateTel","tel","copyToClipboard","str","el","document","createElement","value","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","setFocusLoop","ref","modal","querySelector","addEventListener","leaveLastLink","leaveFirstLink","e","code","shiftKey","preventDefault","target","closest","focus","___CSS_LOADER_EXPORT___","___CSS_LOADER_API_IMPORT___","i","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","concat","join","modules","mediaQuery","dedupe","alreadyImportedModules","length","_i","result","strings","config","modalMailto","modalTel","href","mail","encEmail","cc","bcc","subject","bodyMail","msg","telegramUsername","skypeUsername","title","titleTel","detailCc","detailBcc","detailSubject","detailBody","detailMsg","ccValue","bccValue","subjectValue","bodyValue","msgValue","activatedLink","gmail","outlook","yahoo","open","telegram","wa","skype","call","copyMail","copyTel","require","languages","translations","mailgoCSS","lang","defaultStrings","mailtoEnabled","telEnabled","smsEnabled","validateEmailConfig","validateTelConfig","showFooterConfig","loadCSSConfig","mailgoInit","getElementById","display","classList","add","mailgoSetLanguage","dark","enableDarkMode","disableDarkMode","modalBackground","className","modalContent","details","ccSpan","createTextNode","cc_","bccSpan","bcc_","subjectSpan","subject_","bodySpan","body_","open_in_","gmailSpan","mailgoActionEnabled","outlookSpan","yahooSpan","openSpan","_default","copy","showFooter","byElement","hideMailgo","detailsTel","msgSpan","telegramSpan","waSpan","whatsapp","skypeSpan","callSpan","_as_default","mailgoCheckRender","event","contains","mailgoIsShowing","path","composedPath","forEach","element","HTMLDocument","Window","getMailgoTypeByElement","mailgoPreRender","mailgoElement","type","mailgoElementOrUrl","validateUrl","decodeURIComponent","split","trim","urlParams","URL","searchParams","get","error","getAttribute","encodeURIComponent","hasAttribute","mailgoRender","innerHTML","textContent","openGmail","openOutlook","openYahooMail","encodeEmail","openDefault","openWhatsApp","openTelegram","openSkype","callDefault","showMailgo","mailgoKeydown","gmailUrl","window","outlookUrl","yahooUrl","location","mailToEncoded","tgUrl","skypeUrl","waUrl","callUrl","activeCopy","copied","setTimeout","url","regexValidate","RegExp","toLowerCase","keyboardEvent","keyCode","setModalDisplay","removeEventListener","getModalDisplay","by","rel","encoded","atob","btoa","getModalHTMLElement","activeElement","remove","tagName","parentElement","action","actions","languageType","indexOf","htmlLang","documentElement","language","mailgo","mailgoConfig","loadCSS","mailto","sms","mailgoCSSElement","head","mailgoStyle","initEvent","listenerOptions","mailgoDirectRender","directUrl","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","r","Symbol","toStringTag"],"mappings":"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","file":"mailgo.min.js","sourcesContent":["// links\nexport const MAILTO: string = \"mailto:\";\nexport const MAILGO: string = \"mailgo:\";\nexport const TEL: string = \"tel:\";\nexport const CALLTO: string = \"callto:\";\nexport const SMS: string = \"sms:\";\n\n// deep linking\nexport const outlookDeepLink: string = \"ms-outlook://\";\n\n// no mailgo class\nexport const NO_MAILGO: string = \"no-mailgo\";\n\n// mailgo types\nexport const MAILGO_MAIL: string = \"mailgo\";\nexport const MAILGO_TEL: string = \"mailgo-tel\";\nexport const MAILGO_SMS: string = \"mailgo-sms\";\n\n// useful html tags\nexport const spanHTMLTag: string = \"span\";\nexport const aHTMLTag: string = \"a\";\nexport const pHTMLTag: string = \"p\";\n\n// default lang\nexport const defaultLang: string = \"en\";\n\n// events tag\nexport const mailgoReadyTag: string = \"mailgo-ready\";\nexport const mailgoRenderTag: string = \"mailgo-render\";\n","// validate a single email with regex\nexport const validateEmail = (email: string): boolean =>\n  /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n    email\n  );\n\n// validate an array of emails\nexport const validateEmails = (arr: string[]): boolean =>\n  arr.every(validateEmail);\n\n// validate a single tel with regex\nexport const validateTel = (tel: string): boolean =>\n  /^[+]{0,1}[\\s0-9]{0,}[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/.test(tel);\n\n// copy of a string\nexport const copyToClipboard = (str: string): boolean => {\n  let el: HTMLTextAreaElement = document.createElement(\n    \"textarea\"\n  ) as HTMLTextAreaElement;\n  el.value = str;\n  el.setAttribute(\"readonly\", \"\");\n  el.style.position = \"absolute\";\n  el.style.left = \"-9999px\";\n  document.body.appendChild(el);\n  let selected: Range | boolean =\n    document.getSelection().rangeCount > 0\n      ? document.getSelection().getRangeAt(0)\n      : false;\n  el.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(el);\n  if (selected) {\n    document.getSelection().removeAllRanges();\n    document.getSelection().addRange(selected);\n    return true;\n  }\n  return false;\n};\n\n// set focus loop within modal\nexport const setFocusLoop = (ref: HTMLElement): void => {\n  let modal = ref;\n  modal\n    .querySelector(\".m-modal-content a:last-of-type\")\n    .addEventListener(\"keydown\", leaveLastLink);\n  modal\n    .querySelector(\".m-modal-content a:first-of-type\")\n    .addEventListener(\"keydown\", leaveFirstLink);\n};\n\nexport const leaveLastLink = (e: KeyboardEvent): void => {\n  // going back to the first link to force looping\n  if (e.code === \"Tab\" && e.shiftKey === false) {\n    e.preventDefault();\n\n    ((e.target as HTMLElement)\n      .closest(\"div\")\n      .querySelector(\"a:first-of-type\") as HTMLElement).focus();\n  }\n};\n\nexport const leaveFirstLink = (e: KeyboardEvent): void => {\n  // going back to the first link to force looping\n  if (e.code === \"Tab\" && e.shiftKey === true) {\n    e.preventDefault();\n    ((e.target as HTMLElement)\n      .closest(\"div\")\n      .querySelector(\"a:last-of-type\") as HTMLElement).focus();\n  }\n};\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".m-modal{position:fixed;top:0;right:0;bottom:0;left:0;justify-content:center;align-items:center;flex-direction:column;overflow:hidden;font-size:16.5px;z-index:10000}.m-modal p,.m-modal span,.m-modal strong,.m-modal a{margin:0;padding:0;font-size:100%;line-height:1;font-family:-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,Helvetica,Arial,sans-serif,\\\"Apple Color Emoji\\\",\\\"Segoe UI Emoji\\\",\\\"Segoe UI Symbol\\\";text-rendering:optimizeLegibility}.m-modal strong{font-weight:700}.m-modal .m-modal-back{position:absolute;z-index:10001;top:0;right:0;bottom:0;left:0;background-color:#20232a;opacity:0.8}.m-modal .m-modal-content{position:relative;z-index:10002;box-sizing:content-box;text-align:center;min-width:200px;max-width:240px;background-color:#fff;opacity:0.95;border-radius:20px;box-shadow:0 3px 20px rgba(32,35,42,0.5);color:#4a4a4a;display:flex;flex-direction:column;overflow:auto;padding:24px;transition:0.5s box-shadow}.m-modal .m-modal-content:hover,.m-modal .m-modal-content:focus,.m-modal .m-modal-content:active{opacity:1}.m-modal .m-modal-content .m-title{margin-bottom:8px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;line-height:1.2em}.m-modal .m-modal-content .m-details{margin-bottom:10px}.m-modal .m-modal-content .m-details p{font-size:12px;margin-top:3px;margin-bottom:3px}.m-modal .m-modal-content a{cursor:pointer;padding:10px;color:#4a4a4a;border-radius:20px;text-decoration:none}.m-modal .m-modal-content a.m-gmail{color:#c0372a}.m-modal .m-modal-content a.m-gmail:hover,.m-modal .m-modal-content a.m-gmail:focus,.m-modal .m-modal-content a.m-gmail:active{background-color:rgba(192,55,42,0.08);color:#c0372a}.m-modal .m-modal-content a.m-outlook{color:#0967aa}.m-modal .m-modal-content a.m-outlook:hover,.m-modal .m-modal-content a.m-outlook:focus,.m-modal .m-modal-content a.m-outlook:active{background-color:rgba(9,103,170,0.08);color:#0967aa}.m-modal .m-modal-content a.m-yahoo{color:#4a00a0}.m-modal .m-modal-content a.m-yahoo:hover,.m-modal .m-modal-content a.m-yahoo:focus,.m-modal .m-modal-content a.m-yahoo:active{background-color:rgba(74,0,160,0.08);color:#4a00a0}.m-modal .m-modal-content a.m-tg{color:#086da0}.m-modal .m-modal-content a.m-tg:hover,.m-modal .m-modal-content a.m-tg:focus,.m-modal .m-modal-content a.m-tg:active{background-color:rgba(8,109,160,0.08);color:#086da0}.m-modal .m-modal-content a.m-wa{color:#067466}.m-modal .m-modal-content a.m-wa:hover,.m-modal .m-modal-content a.m-wa:focus,.m-modal .m-modal-content a.m-wa:active{background-color:rgba(6,116,102,0.08);color:#067466}.m-modal .m-modal-content a.m-skype{color:#076d92}.m-modal .m-modal-content a.m-skype:hover,.m-modal .m-modal-content a.m-skype:focus,.m-modal .m-modal-content a.m-skype:active{background-color:rgba(7,109,146,0.08);color:#076d92}.m-modal .m-modal-content a.m-copy{padding:16px 10px;font-size:16px}.m-modal .m-modal-content a.m-default:hover,.m-modal .m-modal-content a.m-default:focus,.m-modal .m-modal-content a.m-default:active,.m-modal .m-modal-content a.m-copy:hover,.m-modal .m-modal-content a.m-copy:focus,.m-modal .m-modal-content a.m-copy:active{background-color:rgba(0,0,0,0.08);color:#4a4a4a}.m-modal .m-modal-content a.m-by{font-size:12px;margin-top:0.8rem;padding:5px;color:#4a4a4a}.m-modal .m-modal-content a.m-by:hover,.m-modal .m-modal-content a.m-by:focus,.m-modal .m-modal-content a.m-by:active{color:#3d3d3d}.m-modal .m-modal-content .w-500{font-weight:500}.m-modal.m-dark .m-modal-content{background-color:#20232a}.m-modal.m-dark .m-modal-content,.m-modal.m-dark .m-modal-content p,.m-modal.m-dark .m-modal-content p span,.m-modal.m-dark .m-modal-content strong{color:#fff}.m-modal.m-dark .m-modal-content a{color:#eaeaea}.m-modal.m-dark .m-modal-content a:not(.m-by):hover,.m-modal.m-dark .m-modal-content a:not(.m-by):focus,.m-modal.m-dark .m-modal-content a:not(.m-by):active{background-color:rgba(134,134,134,0.08);color:#eaeaea}.m-modal.m-dark .m-modal-content a.m-gmail{color:#e07d73}.m-modal.m-dark .m-modal-content a.m-gmail:hover,.m-modal.m-dark .m-modal-content a.m-gmail:focus,.m-modal.m-dark .m-modal-content a.m-gmail:active{background-color:rgba(224,125,115,0.08);color:#e07d73}.m-modal.m-dark .m-modal-content a.m-outlook{color:#4c9cd7}.m-modal.m-dark .m-modal-content a.m-outlook:hover,.m-modal.m-dark .m-modal-content a.m-outlook:focus,.m-modal.m-dark .m-modal-content a.m-outlook:active{background-color:rgba(76,156,215,0.08);color:#4c9cd7}.m-modal.m-dark .m-modal-content a.m-yahoo{color:#ac88d3}.m-modal.m-dark .m-modal-content a.m-yahoo:hover,.m-modal.m-dark .m-modal-content a.m-yahoo:focus,.m-modal.m-dark .m-modal-content a.m-yahoo:active{background-color:rgba(172,136,211,0.08);color:#ac88d3}.m-modal.m-dark .m-modal-content a.m-tg{color:#4cabdb}.m-modal.m-dark .m-modal-content a.m-tg:hover,.m-modal.m-dark .m-modal-content a.m-tg:focus,.m-modal.m-dark .m-modal-content a.m-tg:active{background-color:rgba(76,171,219,0.08);color:#4cabdb}.m-modal.m-dark .m-modal-content a.m-wa{color:#4cd2c0}.m-modal.m-dark .m-modal-content a.m-wa:hover,.m-modal.m-dark .m-modal-content a.m-wa:focus,.m-modal.m-dark .m-modal-content a.m-wa:active{background-color:rgba(76,210,192,0.08);color:#4cd2c0}.m-modal.m-dark .m-modal-content a.m-skype{color:#4cc7f4}.m-modal.m-dark .m-modal-content a.m-skype:hover,.m-modal.m-dark .m-modal-content a.m-skype:focus,.m-modal.m-dark .m-modal-content a.m-skype:active{background-color:rgba(76,199,244,0.08);color:#4cc7f4}.m-modal.m-dark .m-modal-content a.m-by:hover,.m-modal.m-dark .m-modal-content a.m-by:focus,.m-modal.m-dark .m-modal-content a.m-by:active{color:#fff}\\n\", \"\"]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\n        var result = require(\"!!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../node_modules/sass-loader/dist/cjs.js!./mailgo.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","import {\n  MailgoConfig,\n  MailgoTranslations,\n  MailgoTranslation,\n  MailgoAction,\n  MailgoModalType,\n  MailgoLanguages,\n} from \"mailgo\";\n\n// polyfill\n// const { mailgoPolyfill } = require(\"./polyfill\");\n\n// constants\nconst {\n  MAILTO,\n  MAILGO,\n  TEL,\n  CALLTO,\n  SMS,\n  MAILGO_MAIL,\n  MAILGO_TEL,\n  MAILGO_SMS,\n  NO_MAILGO,\n  spanHTMLTag,\n  aHTMLTag,\n  pHTMLTag,\n  defaultLang,\n} = require(\"./constants\");\n\n// utils\nconst {\n  validateEmails,\n  validateTel,\n  copyToClipboard,\n  setFocusLoop,\n} = require(\"./utils\");\n\n// i18n for mailgo\nconst languages: MailgoLanguages = require(\"../i18n/languages.json\");\nconst translations: MailgoTranslations = require(\"../i18n/translations.json\");\n\n// mailgo scss\nconst mailgoCSS: string = require(\"./mailgo.scss\").toString();\n\n// default language\nlet lang: string = defaultLang;\n\n// default strings\nconst defaultStrings: MailgoTranslation = translations[defaultLang];\n\n// translation strings\nlet strings: MailgoTranslation;\n\n// global mailgo config object\nlet config: MailgoConfig;\n\n// default config attributes\nlet mailtoEnabled: boolean = true;\nlet telEnabled: boolean = true;\nlet smsEnabled: boolean = false;\nlet validateEmailConfig: boolean = true;\nlet validateTelConfig: boolean = true;\nlet showFooterConfig: boolean = true;\nlet loadCSSConfig: boolean = true;\n\n// modals global object\nlet modalMailto: HTMLElement, modalTel: HTMLElement;\n\n// mailgo variables\nlet url: URL,\n  href: string,\n  mail: string,\n  encEmail: string,\n  cc: string,\n  bcc: string,\n  subject: string,\n  bodyMail: string;\n\n// mailgo tel variables\nlet tel: string, msg: string, telegramUsername: string, skypeUsername: string;\n\n// the DOM elements\nlet title: HTMLElement,\n  titleTel: HTMLElement,\n  detailCc: HTMLElement,\n  detailBcc: HTMLElement,\n  detailSubject: HTMLElement,\n  detailBody: HTMLElement,\n  detailMsg: HTMLElement,\n  ccValue: HTMLElement,\n  bccValue: HTMLElement,\n  subjectValue: HTMLElement,\n  bodyValue: HTMLElement,\n  msgValue: HTMLElement,\n  activatedLink: HTMLElement;\n\n// mailgo buttons (actions)\nlet gmail: HTMLLinkElement,\n  outlook: HTMLLinkElement,\n  yahoo: HTMLLinkElement,\n  open: HTMLLinkElement,\n  telegram: HTMLLinkElement,\n  wa: HTMLLinkElement,\n  skype: HTMLLinkElement,\n  call: HTMLLinkElement,\n  copyMail: HTMLLinkElement,\n  copyTel: HTMLLinkElement;\n\n/**\n * mailgoInit\n * the function that creates the mailgo elements in DOM\n */\nconst mailgoInit = (): void => {\n  // mailgo, if mailgo not already exists\n  let mailgoExists = !!document.getElementById(MAILGO_MAIL);\n\n  if (!mailgoExists) {\n    // modal\n    modalMailto = createElement() as HTMLElement;\n    modalMailto.style.display = \"none\";\n    modalMailto.id = MAILGO_MAIL;\n    modalMailto.classList.add(\"m-modal\");\n    modalMailto.setAttribute(\"role\", \"dialog\");\n    modalMailto.setAttribute(\"tabindex\", \"-1\");\n    modalMailto.setAttribute(\"aria-labelledby\", \"m-title\");\n\n    // set the mailgo language\n    mailgoSetLanguage();\n\n    // if dark is in config\n    if (config?.dark) {\n      enableDarkMode(MAILGO_MAIL);\n    } else {\n      disableDarkMode(MAILGO_MAIL);\n    }\n\n    // background\n    let modalBackground: HTMLElement = createElement();\n    modalBackground.className = \"m-modal-back\";\n    modalMailto.appendChild(modalBackground);\n\n    // modal content\n    let modalContent: HTMLElement = createElement();\n    modalContent.className = \"m-modal-content\";\n    modalMailto.appendChild(modalContent);\n\n    // title (email address)\n    title = createElement(\"strong\");\n    title.id = \"m-title\";\n    title.className = \"m-title\";\n    modalContent.appendChild(title);\n\n    // details\n    let details: HTMLElement = createElement();\n    details.id = \"m-details\";\n    details.className = \"m-details\";\n\n    detailCc = createElement(pHTMLTag);\n    detailCc.id = \"m-cc\";\n    let ccSpan: HTMLElement = createElement(spanHTMLTag);\n    ccSpan.className = \"w-500\";\n    ccSpan.appendChild(createTextNode(strings.cc_ || defaultStrings.cc_));\n    ccValue = createElement(spanHTMLTag);\n    ccValue.id = \"m-cc-value\";\n    detailCc.appendChild(ccSpan);\n    detailCc.appendChild(ccValue);\n    details.appendChild(detailCc);\n\n    detailBcc = createElement(pHTMLTag);\n    detailBcc.id = \"m-bcc\";\n    let bccSpan: HTMLElement = createElement(spanHTMLTag);\n    bccSpan.className = \"w-500\";\n    bccSpan.appendChild(createTextNode(strings.bcc_ || defaultStrings.bcc_));\n    bccValue = createElement(spanHTMLTag);\n    bccValue.id = \"m-bcc-value\";\n    detailBcc.appendChild(bccSpan);\n    detailBcc.appendChild(bccValue);\n    details.appendChild(detailBcc);\n\n    detailSubject = createElement(pHTMLTag);\n    detailSubject.id = \"m-subject\";\n    let subjectSpan: HTMLElement = createElement(spanHTMLTag);\n    subjectSpan.className = \"w-500\";\n    subjectSpan.appendChild(\n      createTextNode(strings.subject_ || defaultStrings.subject_)\n    );\n    subjectValue = createElement(spanHTMLTag);\n    subjectValue.id = \"m-subject-value\";\n    detailSubject.appendChild(subjectSpan);\n    detailSubject.appendChild(subjectValue);\n    details.appendChild(detailSubject);\n\n    detailBody = createElement(pHTMLTag);\n    detailBody.id = \"m-body\";\n    let bodySpan: HTMLElement = createElement(spanHTMLTag);\n    bodySpan.className = \"w-500\";\n    bodySpan.appendChild(createTextNode(strings.body_ || defaultStrings.body_));\n    bodyValue = createElement(spanHTMLTag);\n    bodyValue.id = \"m-body-value\";\n    detailBody.appendChild(bodySpan);\n    detailBody.appendChild(bodyValue);\n    details.appendChild(detailBody);\n\n    modalContent.appendChild(details);\n\n    // Gmail\n    gmail = createElement(aHTMLTag) as HTMLLinkElement;\n    gmail.id = \"m-gmail\";\n    gmail.href = \"#mailgo-gmail\";\n    gmail.classList.add(\"m-open\");\n    gmail.classList.add(\"m-gmail\");\n    gmail.appendChild(\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\n    );\n    let gmailSpan: HTMLElement = createElement(spanHTMLTag);\n    gmailSpan.className = \"w-500\";\n    gmailSpan.appendChild(\n      createTextNode(strings.gmail || defaultStrings.gmail)\n    );\n    gmail.appendChild(gmailSpan);\n\n    if (mailgoActionEnabled(\"gmail\")) modalContent.appendChild(gmail);\n\n    // Outlook\n    outlook = createElement(aHTMLTag) as HTMLLinkElement;\n    outlook.id = \"m-outlook\";\n    outlook.href = \"#mailgo-outlook\";\n    outlook.classList.add(\"m-open\");\n    outlook.classList.add(\"m-outlook\");\n    outlook.appendChild(\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\n    );\n    let outlookSpan: HTMLElement = createElement(spanHTMLTag);\n    outlookSpan.className = \"w-500\";\n    outlookSpan.appendChild(\n      createTextNode(strings.outlook || defaultStrings.outlook)\n    );\n    outlook.appendChild(outlookSpan);\n\n    if (mailgoActionEnabled(\"outlook\")) {\n      modalContent.appendChild(outlook);\n    }\n\n    // Outlook\n    yahoo = createElement(aHTMLTag) as HTMLLinkElement;\n    yahoo.id = \"m-yahoo\";\n    yahoo.href = \"#mailgo-yahoo\";\n    yahoo.classList.add(\"m-open\");\n    yahoo.classList.add(\"m-yahoo\");\n    yahoo.appendChild(\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\n    );\n    let yahooSpan: HTMLElement = createElement(spanHTMLTag);\n    yahooSpan.className = \"w-500\";\n    yahooSpan.appendChild(\n      createTextNode(strings.yahoo || defaultStrings.yahoo)\n    );\n    yahoo.appendChild(yahooSpan);\n\n    if (mailgoActionEnabled(\"yahoo\")) {\n      modalContent.appendChild(yahoo);\n    }\n\n    // open default\n    open = createElement(aHTMLTag) as HTMLLinkElement;\n    open.id = \"m-open\";\n    open.href = \"#mailgo-open\";\n    open.classList.add(\"m-open\");\n    open.classList.add(\"m-default\");\n    let openSpan: HTMLElement = createElement(spanHTMLTag);\n    openSpan.className = \"w-500\";\n    openSpan.appendChild(createTextNode(strings.open || defaultStrings.open));\n    open.appendChild(openSpan);\n    open.appendChild(\n      createTextNode(strings._default || defaultStrings._default)\n    );\n\n    modalContent.appendChild(open);\n\n    // copy\n    copyMail = createElement(aHTMLTag) as HTMLLinkElement;\n    copyMail.id = \"m-copy\";\n    copyMail.href = \"#mailgo-copy\";\n    copyMail.classList.add(\"m-copy\");\n    copyMail.classList.add(\"w-500\");\n    copyMail.appendChild(createTextNode(strings.copy || defaultStrings.copy));\n\n    modalContent.appendChild(copyMail);\n\n    // hide mailgo.dev in footer only if showFooter is defined and equal to false\n    if (typeof config?.showFooter !== \"undefined\") {\n      showFooterConfig = config.showFooter;\n    }\n\n    if (showFooterConfig) {\n      modalContent.appendChild(byElement());\n    }\n\n    // add the modal at the end of the body\n    document.body.appendChild(modalMailto);\n\n    // every click outside the modal will hide the modal\n    modalBackground.addEventListener(\"click\", hideMailgo);\n  }\n\n  // mailgo tel, if mailgo-tel not already exists\n  let mailgoTelExists = !!document.getElementById(MAILGO_TEL);\n\n  if (!mailgoTelExists) {\n    // modal\n    modalTel = createElement() as HTMLElement;\n    modalTel.style.display = \"none\";\n    modalTel.id = MAILGO_TEL;\n    modalTel.classList.add(\"m-modal\");\n    modalTel.setAttribute(\"role\", \"dialog\");\n    modalTel.setAttribute(\"tabindex\", \"-1\");\n    modalTel.setAttribute(\"aria-labelledby\", \"m-tel-title\");\n\n    // if dark is in config\n    if (config?.dark) {\n      enableDarkMode(MAILGO_TEL);\n    } else {\n      disableDarkMode(MAILGO_TEL);\n    }\n\n    // background\n    let modalBackground: HTMLElement = createElement();\n    modalBackground.className = \"m-modal-back\";\n    modalTel.appendChild(modalBackground);\n\n    // modal content\n    let modalContent: HTMLElement = createElement();\n    modalContent.className = \"m-modal-content\";\n    modalTel.appendChild(modalContent);\n\n    // title (telephone number)\n    titleTel = createElement(\"strong\");\n    titleTel.id = \"m-tel-title\";\n    titleTel.className = \"m-title\";\n    modalContent.appendChild(titleTel);\n\n    // details\n    let detailsTel: HTMLElement = createElement();\n    detailsTel.id = \"m-tel-details\";\n    detailsTel.className = \"m-details\";\n\n    detailMsg = createElement(pHTMLTag);\n    detailMsg.id = \"m-msg\";\n    let msgSpan: HTMLElement = createElement(spanHTMLTag);\n    msgSpan.className = \"w-500\";\n    msgSpan.appendChild(createTextNode(strings.body_ || defaultStrings.body_));\n    msgValue = createElement(spanHTMLTag);\n    msgValue.id = \"m-msg-value\";\n    detailMsg.appendChild(msgSpan);\n    detailMsg.appendChild(msgValue);\n    detailsTel.appendChild(detailMsg);\n\n    modalContent.appendChild(detailsTel);\n\n    // Telegram\n    telegram = createElement(aHTMLTag) as HTMLLinkElement;\n    telegram.id = \"m-tg\";\n    telegram.href = \"#mailgo-telegram\";\n    telegram.classList.add(\"m-open\");\n    telegram.classList.add(\"m-tg\");\n\n    // by default not display\n    telegram.style.display = \"none\";\n\n    telegram.appendChild(\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\n    );\n    let telegramSpan: HTMLElement = createElement(spanHTMLTag);\n    telegramSpan.className = \"w-500\";\n    telegramSpan.appendChild(\n      createTextNode(strings.telegram || defaultStrings.telegram)\n    );\n    telegram.appendChild(telegramSpan);\n\n    if (mailgoActionEnabled(\"telegram\")) {\n      modalContent.appendChild(telegram);\n    }\n\n    // WhatsApp\n    wa = createElement(aHTMLTag) as HTMLLinkElement;\n    wa.id = \"m-wa\";\n    wa.href = \"#mailgo-whatsapp\";\n    wa.classList.add(\"m-open\");\n    wa.classList.add(\"m-wa\");\n    wa.appendChild(createTextNode(strings.open_in_ || defaultStrings.open_in_));\n    let waSpan: HTMLElement = createElement(spanHTMLTag);\n    waSpan.className = \"w-500\";\n    waSpan.appendChild(\n      createTextNode(strings.whatsapp || defaultStrings.whatsapp)\n    );\n    wa.appendChild(waSpan);\n\n    if (mailgoActionEnabled(\"whatsapp\")) {\n      modalContent.appendChild(wa);\n    }\n\n    // Skype\n    skype = createElement(aHTMLTag) as HTMLLinkElement;\n    skype.id = \"m-skype\";\n    skype.href = \"#mailgo-skype\";\n    skype.classList.add(\"m-open\");\n    skype.classList.add(\"m-skype\");\n    skype.appendChild(\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\n    );\n    let skypeSpan: HTMLElement = createElement(spanHTMLTag);\n    skypeSpan.className = \"w-500\";\n    skypeSpan.appendChild(\n      createTextNode(strings.skype || defaultStrings.skype)\n    );\n    skype.appendChild(skypeSpan);\n\n    if (mailgoActionEnabled(\"skype\")) {\n      modalContent.appendChild(skype);\n    }\n\n    // call default\n    call = createElement(aHTMLTag) as HTMLLinkElement;\n    call.id = \"m-call\";\n    call.href = \"#mailgo-open\";\n    call.classList.add(\"m-open\");\n    call.classList.add(\"m-default\");\n    let callSpan: HTMLElement = createElement(spanHTMLTag);\n    callSpan.className = \"w-500\";\n    callSpan.appendChild(createTextNode(strings.call || defaultStrings.call));\n    call.appendChild(callSpan);\n    call.appendChild(\n      createTextNode(strings._as_default || defaultStrings._as_default)\n    );\n\n    modalContent.appendChild(call);\n\n    // copy\n    copyTel = createElement(aHTMLTag) as HTMLLinkElement;\n    copyTel.id = \"m-tel-copy\";\n    copyTel.href = \"#mailgo-copy\";\n    copyTel.classList.add(\"m-copy\");\n    copyTel.classList.add(\"w-500\");\n    copyTel.appendChild(createTextNode(strings.copy || defaultStrings.copy));\n\n    modalContent.appendChild(copyTel);\n\n    // hide mailgo.dev in footer only if showFooter is defined and equal to false\n    if (typeof config?.showFooter !== \"undefined\") {\n      showFooterConfig = config.showFooter;\n    }\n\n    if (showFooterConfig) {\n      modalContent.appendChild(byElement());\n    }\n\n    // add the modal at the end of the body\n    document.body.appendChild(modalTel);\n\n    // every click outside the modal will hide the modal\n    modalBackground.addEventListener(\"click\", hideMailgo);\n  }\n\n  // event listener on body, if the element is mailgo-compatible the mailgo modal will be rendered\n  document.addEventListener(\"click\", mailgoCheckRender);\n};\n\n/**\n * mailgoCheckRender\n * function to check if an element is mailgo-enabled or not referencing to\n * mail:\n * document.querySelectorAll(\n *   'a[href^=\"mailto:\" i]:not(.no-mailgo), a[href=\"#mailgo\"], a.mailgo'\n * );\n * tel:\n * document.querySelectorAll(\n *   'a[href^=\"tel:\" i]:not(.no-mailgo), a[href=\"#mailgo\"], a.mailgo'\n * );\n * or\n * document.querySelectorAll(\n *   'a[href^=\"callto:\" i]:not(.no-mailgo), a[href=\"#mailgo\"], a.mailgo'\n * );\n * or\n * document.querySelectorAll(\n *   'a[href^=\"sms:\" i]:not(.no-mailgo), a[href=\"#mailgo\"], a.mailgo'\n * );\n */\nfunction mailgoCheckRender(event: Event): boolean {\n  // check if the mailgo HTML exists in the body\n  if (\n    !document.body.contains(modalMailto) ||\n    !document.body.contains(modalTel)\n  ) {\n    return false;\n  }\n\n  // if a mailgo is already showing do nothing\n  if (mailgoIsShowing(MAILGO_MAIL) || mailgoIsShowing(MAILGO_TEL)) {\n    return false;\n  }\n\n  // the path of the event\n  let path =\n    (event.composedPath && event.composedPath()) ||\n    composedPath(event.target as HTMLElement);\n\n  if (path) {\n    path.forEach((element: HTMLElement) => {\n      if (element instanceof HTMLDocument || element instanceof Window) {\n        return false;\n      }\n\n      // go in the event.path to find if the user has clicked on a mailgo element (if mailto/tel enabled)\n      if (mailtoEnabled && getMailgoTypeByElement(element) === MAILGO_MAIL) {\n        // stop the normal execution of the element click\n        event.preventDefault();\n\n        // render mailgo\n        mailgoPreRender(MAILGO_MAIL, element as HTMLLinkElement);\n\n        return true;\n      }\n\n      if (telEnabled && getMailgoTypeByElement(element) == MAILGO_TEL) {\n        // stop the normal execution of the element click\n        event.preventDefault();\n\n        // render mailgo\n        mailgoPreRender(MAILGO_TEL, element as HTMLLinkElement);\n\n        return true;\n      }\n\n      if (smsEnabled && getMailgoTypeByElement(element) == MAILGO_SMS) {\n        // stop the normal execution of the element click\n        event.preventDefault();\n\n        // render mailgo, at the moment as tel\n        mailgoPreRender(MAILGO_TEL, element as HTMLLinkElement);\n\n        return true;\n      }\n    });\n  }\n\n  return false;\n}\n\n/**\n * mailgoPreRender\n * function to pre-render a mailgo, it helps populating elements needed by modal\n */\nfunction mailgoPreRender(\n  type: string = MAILGO_MAIL,\n  mailgoElementOrUrl: HTMLLinkElement | string\n): boolean {\n  let mailgoElement: HTMLLinkElement;\n\n  if (typeof mailgoElementOrUrl == \"string\") {\n    // if the parameter is a string it is the url\n    href = mailgoElementOrUrl as string;\n  } else {\n    // if the paramenter is an HTMLLinkElement get the href attribute and the element\n    href = mailgoElementOrUrl.href as string;\n    mailgoElement = mailgoElementOrUrl as HTMLLinkElement;\n  }\n\n  // if href is undefined or null return false\n  if (!href) {\n    return false;\n  }\n\n  // mailgo mail\n  if (type === MAILGO_MAIL) {\n    // if the element href=^\"mailto:\" or href=^\"mailgo:\"\n    if (validateUrl(href, MAILTO) || validateUrl(href, MAILGO)) {\n      if (validateUrl(href, MAILTO)) {\n        mail = decodeURIComponent(href.split(\"?\")[0].split(MAILTO)[1].trim());\n      } else if (validateUrl(href, MAILGO)) {\n        mail = decodeURIComponent(href.split(\"?\")[0].split(MAILGO)[1].trim());\n      }\n\n      try {\n        url = new URL(href);\n\n        let urlParams: URLSearchParams = url.searchParams;\n\n        // optional parameters for the email\n        cc = urlParams.get(\"cc\");\n        bcc = urlParams.get(\"bcc\");\n        subject = urlParams.get(\"subject\");\n        bodyMail = urlParams.get(\"body\");\n      } catch (error) {\n        // console.error(error);\n      }\n    } else {\n      // if the element href=\"#mailgo\" or class=\"mailgo\"\n      // mail = data-address + @ + data-domain\n      mail =\n        mailgoElement.getAttribute(\"data-address\") +\n        \"@\" +\n        mailgoElement.getAttribute(\"data-domain\");\n\n      try {\n        url = new URL(MAILTO + encodeURIComponent(mail));\n      } catch (error) {\n        // console.error(error);\n      }\n\n      // cc = data-cc-address + @ + data-cc-domain\n      cc =\n        mailgoElement.getAttribute(\"data-cc-address\") +\n        \"@\" +\n        mailgoElement.getAttribute(\"data-cc-domain\");\n\n      // bcc = data-bcc-address + @ + data-bcc-domain\n      bcc =\n        mailgoElement.getAttribute(\"data-bcc-address\") +\n        \"@\" +\n        mailgoElement.getAttribute(\"data-bcc-domain\");\n\n      // subject = data-subject\n      subject = mailgoElement.getAttribute(\"data-subject\");\n\n      // body = data-body\n      bodyMail = mailgoElement.getAttribute(\"data-body\");\n    }\n\n    // if is in config use it\n    if (typeof config?.validateEmail !== \"undefined\") {\n      validateEmailConfig = config.validateEmail;\n    }\n\n    if (validateEmailConfig) {\n      // validate the email address\n      if (!validateEmails(mail.split(\",\"))) {\n        return false;\n      }\n\n      // if cc, bcc are not valid cc, bcc = \"\"\n      if (cc && !validateEmails(cc.split(\",\"))) cc = \"\";\n      if (bcc && !validateEmails(bcc.split(\",\"))) bcc = \"\";\n    }\n  }\n  // mailgo tel\n  else if (type === MAILGO_TEL) {\n    if (validateUrl(href, TEL)) {\n      tel = decodeURIComponent(href.split(\"?\")[0].split(TEL)[1].trim());\n    } else if (validateUrl(href, CALLTO)) {\n      tel = decodeURIComponent(href.split(\"?\")[0].split(CALLTO)[1].trim());\n    } else if (validateUrl(href, SMS)) {\n      tel = decodeURIComponent(href.split(\"?\")[0].split(SMS)[1].trim());\n\n      try {\n        url = new URL(href);\n        let urlParams: URLSearchParams = url.searchParams;\n\n        // optional parameters for the phone number\n        msg = urlParams.get(\"body\");\n      } catch (error) {\n        // console.error(error);\n      }\n    } else if (mailgoElement.hasAttribute(\"data-tel\")) {\n      tel = mailgoElement.getAttribute(\"data-tel\");\n      msg = mailgoElement.getAttribute(\"data-msg\");\n    }\n\n    // if is in config use it\n    if (typeof config?.validateTel !== \"undefined\") {\n      validateTelConfig = config.validateTel;\n    }\n\n    // validate the phone number\n    if (validateTelConfig) {\n      if (!validateTel(tel)) return;\n    }\n\n    // Telegram username\n    if (mailgoElement && mailgoElement.hasAttribute(\"data-telegram\")) {\n      telegramUsername = mailgoElement.getAttribute(\"data-telegram\");\n    } else {\n      telegramUsername = null;\n    }\n\n    // Telegram username\n    if (mailgoElement && mailgoElement.hasAttribute(\"data-skype\")) {\n      skypeUsername = mailgoElement.getAttribute(\"data-skype\");\n    } else {\n      skypeUsername = null;\n    }\n  }\n\n  // if config.dark is set to true then all the modals will be in dark mode\n  if (mailgoElement && !config?.dark) {\n    // if the element contains dark as class enable dark mode\n    if (mailgoElement.classList.contains(\"dark\")) {\n      enableDarkMode(type);\n    } else {\n      disableDarkMode(type);\n    }\n  }\n\n  // render mailgo\n  mailgoRender(type);\n\n  return true;\n}\n\n/**\n * mailgoDirectRender\n * function to render a mailgo directly from a URL\n */\nfunction mailgoDirectRender(directUrl: string): boolean {\n  // start mailgo\n  mailgo();\n\n  if (validateUrl(directUrl, MAILTO) || validateUrl(directUrl, MAILGO)) {\n    mailgoPreRender(MAILGO_MAIL, directUrl);\n    return true;\n  } else if (\n    validateUrl(directUrl, TEL) ||\n    validateUrl(directUrl, CALLTO) ||\n    validateUrl(directUrl, SMS)\n  ) {\n    mailgoPreRender(MAILGO_TEL, directUrl);\n    return true;\n  }\n  return false;\n}\n\n/**\n * mailgoRender\n * function to render a mailgo (mail or tel)\n */\nfunction mailgoRender(type: string = MAILGO_MAIL): boolean {\n  // mailgo mail\n  if (type === MAILGO_MAIL) {\n    // the title of the modal (email address)\n    title.innerHTML = mail.split(\",\").join(\"<br/>\");\n\n    // add the details if provided\n    if (cc) {\n      detailCc.style.display = \"block\";\n      ccValue.innerHTML = cc.split(\",\").join(\"<br/>\");\n    } else {\n      detailCc.style.display = \"none\";\n    }\n\n    if (bcc) {\n      detailBcc.style.display = \"block\";\n      bccValue.innerHTML = bcc.split(\",\").join(\"<br/>\");\n    } else {\n      detailBcc.style.display = \"none\";\n    }\n\n    if (subject) {\n      detailSubject.style.display = \"block\";\n      subjectValue.textContent = subject;\n    } else {\n      detailSubject.style.display = \"none\";\n    }\n\n    if (bodyMail) {\n      detailBody.style.display = \"block\";\n      bodyValue.textContent = bodyMail;\n    } else {\n      detailBody.style.display = \"none\";\n    }\n\n    // add the actions\n    gmail.addEventListener(\"click\", openGmail);\n\n    outlook.addEventListener(\"click\", openOutlook);\n\n    yahoo.addEventListener(\"click\", openYahooMail);\n\n    encEmail = encodeEmail(mail);\n    open.addEventListener(\"click\", openDefault);\n\n    copyMail.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n      copy(mail);\n    });\n  }\n  // mailgo tel\n  else if (type === MAILGO_TEL) {\n    // the title of the modal (tel)\n    titleTel.innerHTML = tel;\n\n    if (msg) {\n      detailMsg.style.display = \"block\";\n      msgValue.textContent = msg;\n    } else {\n      detailMsg.style.display = \"none\";\n    }\n\n    // add the actions to buttons\n    wa.addEventListener(\"click\", openWhatsApp);\n\n    // telegram must be shown only if data-telegram is provided\n    if (telegramUsername) {\n      document.getElementById(\"m-tg\").style.display = \"block\";\n      telegram.addEventListener(\"click\", openTelegram);\n    } else {\n      document.getElementById(\"m-tg\").style.display = \"none\";\n    }\n\n    skype.addEventListener(\"click\", openSkype);\n\n    call.addEventListener(\"click\", callDefault);\n\n    copyTel.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n      copy(tel);\n    });\n  }\n\n  // show the mailgo\n  showMailgo(type);\n\n  // add listener keyDown\n  document.addEventListener(\"keydown\", mailgoKeydown);\n\n  return true;\n}\n\n// actions\nconst openGmail = (event?: Event): void => {\n  event.preventDefault();\n\n  // Gmail url\n  let gmailUrl: string =\n    \"https://mail.google.com/mail/u/0/?view=cm&source=mailto&to=\" +\n    encodeURIComponent(mail);\n\n  // the details if provided\n  if (cc) {\n    gmailUrl = gmailUrl.concat(\"&cc=\" + encodeURIComponent(cc));\n  }\n  if (bcc) {\n    gmailUrl = gmailUrl.concat(\"&bcc=\" + encodeURIComponent(bcc));\n  }\n  if (subject) {\n    gmailUrl = gmailUrl.concat(\"&subject=\" + subject);\n  }\n  if (bodyMail) {\n    gmailUrl = gmailUrl.concat(\"&body=\" + bodyMail);\n  }\n\n  // open the link\n  window.open(gmailUrl, \"_blank\", \"noopener, noreferrer\");\n\n  // hide the modal\n  hideMailgo();\n};\n\nconst openOutlook = (event?: Event): void => {\n  event.preventDefault();\n\n  // Outlook url\n  let outlookUrl: string =\n    \"https://outlook.live.com/owa/?path=/mail/action/compose&to=\" +\n    encodeURIComponent(mail);\n\n  // the details if provided\n  if (subject) {\n    outlookUrl = outlookUrl.concat(\"&subject=\" + subject);\n  }\n  if (bodyMail) {\n    outlookUrl = outlookUrl.concat(\"&body=\" + bodyMail);\n  }\n\n  // open the link\n  window.open(outlookUrl, \"_blank\", \"noopener, noreferrer\");\n\n  // hide the modal\n  hideMailgo();\n};\n\nconst openYahooMail = (event?: Event): void => {\n  event.preventDefault();\n\n  // Yahoo url\n  let yahooUrl: string =\n    \"https://compose.mail.yahoo.com/?to=\" + encodeURIComponent(mail);\n\n  // the details if provided\n  if (subject) {\n    yahooUrl = yahooUrl.concat(\"&subject=\" + subject);\n  }\n  if (bodyMail) {\n    yahooUrl = yahooUrl.concat(\"&body=\" + bodyMail);\n  }\n\n  // open the link\n  window.open(yahooUrl, \"_blank\", \"noopener, noreferrer\");\n\n  // hide the modal\n  hideMailgo();\n};\n\nconst openDefault = (event?: Event): void => {\n  event.preventDefault();\n\n  // if href exists go there\n  if (href) {\n    window.location.href = href;\n  } else {\n    mailToEncoded(encEmail);\n  }\n\n  hideMailgo();\n};\n\nconst openTelegram = (event?: Event): void => {\n  event.preventDefault();\n\n  // check if telegramUsername exists\n  if (telegramUsername) {\n    // Telegram url\n    let tgUrl: string = \"https://t.me/\" + telegramUsername;\n\n    // open the url\n    window.open(tgUrl, \"_blank\", \"noopener, noreferrer\");\n\n    // hide the modal\n    hideMailgo();\n  }\n};\n\nconst openSkype = (event?: Event): void => {\n  event.preventDefault();\n\n  let skype: string = skypeUsername || tel;\n\n  // Telegram url\n  let skypeUrl: string = \"skype:\" + skype;\n\n  // open the url\n  window.open(skypeUrl, \"_blank\", \"noopener, noreferrer\");\n\n  // hide the modal\n  hideMailgo();\n};\n\nconst openWhatsApp = (event?: Event): void => {\n  event.preventDefault();\n\n  // WhatsApp url\n  let waUrl: string = \"https://wa.me/\" + tel;\n\n  // the details if provided\n  if (msg) {\n    waUrl = waUrl + \"?text=\" + msg;\n  }\n\n  // open the url\n  window.open(waUrl, \"_blank\", \"noopener, noreferrer\");\n\n  // hide the modal\n  hideMailgo();\n};\n\nconst callDefault = (event?: Event) => {\n  event.preventDefault();\n\n  let callUrl: string = TEL + tel;\n  window.open(callUrl);\n  hideMailgo();\n};\n\nconst copy = (content: string): void => {\n  copyToClipboard(content);\n  let activeCopy: HTMLElement;\n  // the correct copyButton (mail or tel)\n  if (mailgoIsShowing(MAILGO_MAIL)) {\n    activeCopy = copyMail;\n  } else {\n    activeCopy = copyTel;\n  }\n  activeCopy.textContent = strings.copied || defaultStrings.copied;\n  setTimeout(() => {\n    activeCopy.textContent = strings.copy || defaultStrings.copy;\n    // hide after the timeout\n    hideMailgo();\n  }, 999);\n};\n\n// function to find if a link is a mailto, tel, callto or sms\nconst validateUrl = (url: string, type: string = MAILTO) => {\n  let regexValidate = new RegExp(\"^\" + type, \"gi\");\n  return regexValidate.test(url);\n};\n\n// function that returns if an element is a mailgo\nfunction getMailgoTypeByElement(element: HTMLElement): MailgoModalType | null {\n  let href: string = (element as HTMLLinkElement).href;\n\n  // mailgo type mail\n  if (\n    // first case: it is an <a> element with \"mailto:...\" or \"mailgo:...\" in href and no no-mailgo in classList\n    (href &&\n      (validateUrl(href, MAILTO) || validateUrl(href, MAILGO)) &&\n      !element.classList.contains(NO_MAILGO)) ||\n    (element.hasAttribute(\"data-address\") &&\n      // second case: the href=#mailgo\n      ((href && element.getAttribute(\"href\").toLowerCase() === \"#mailgo\") ||\n        // third case: the classList contains mailgo\n        (element.classList && element.classList.contains(\"mailgo\"))))\n  ) {\n    return MAILGO_MAIL;\n  }\n\n  // mailgo type tel\n  if (\n    // first case: it is an <a> element with \"tel:...\" or \"callto:...\" in href and no no-mailgo in classList\n    (href &&\n      (validateUrl(href, TEL) || validateUrl(href, CALLTO)) &&\n      !element.classList.contains(NO_MAILGO)) ||\n    (element.hasAttribute(\"data-tel\") &&\n      // second case: the href=#mailgo\n      href &&\n      element.getAttribute(\"href\").toLowerCase() === \"#mailgo\") ||\n    // third case: the classList contains mailgo\n    (element.classList && element.classList.contains(\"mailgo\"))\n  ) {\n    return MAILGO_TEL;\n  }\n\n  // mailgo type tel\n  if (\n    // first case: it is an <a> element with \"sms:...\" in href and no no-mailgo in classList\n    (href &&\n      validateUrl(href, SMS) &&\n      !element.classList.contains(NO_MAILGO)) ||\n    (element.hasAttribute(\"data-sms\") &&\n      // second case: the href=#mailgo\n      href &&\n      element.getAttribute(\"href\").toLowerCase() === \"#mailgo\") ||\n    // third case: the classList contains mailgo\n    (element.classList && element.classList.contains(\"mailgo\"))\n  ) {\n    return MAILGO_SMS;\n  }\n\n  return null;\n}\n\n/**\n * mailgoKeydown\n * function to manage the keydown event when the modal is showing, return a boolean that represents if a useful key has been pressed\n */\nconst mailgoKeydown = (keyboardEvent: KeyboardEvent): boolean => {\n  // if mailgo is showing\n  if (mailgoIsShowing(MAILGO_MAIL)) {\n    switch (keyboardEvent.keyCode) {\n      case 27:\n        // Escape\n        hideMailgo();\n        return true;\n      case 71:\n        // g -> open GMail\n        openGmail();\n        return true;\n      case 79:\n        // o -> open Outlook\n        openOutlook();\n        return true;\n      case 89:\n        // y -> open Yahoo Mail\n        openYahooMail();\n        return true;\n      case 32:\n      case 13:\n        // spacebar or enter -> open default\n        openDefault();\n        return true;\n      case 67:\n        // c -> copy\n        copy(mail);\n        return true;\n      default:\n        return false;\n    }\n  } else if (mailgoIsShowing(MAILGO_TEL)) {\n    switch (keyboardEvent.keyCode) {\n      case 27:\n        // Escape\n        hideMailgo();\n        return true;\n      case 84:\n        // t -> open Telegram\n        openTelegram();\n        return true;\n      case 87:\n        // w -> open WhatsApp\n        openWhatsApp();\n        return true;\n      case 83:\n        // s -> open Skype\n        openSkype();\n        return true;\n      case 32:\n      case 13:\n        // spacebar or enter -> call default\n        callDefault();\n        return true;\n      case 67:\n        // c -> copy\n        copy(tel);\n        return true;\n      default:\n        return false;\n    }\n  }\n  return false;\n};\n\n// show the modal\nconst showMailgo = (type = MAILGO_MAIL): void => {\n  // show the correct modal\n  setModalDisplay(type, \"flex\");\n};\n\n// hide the modal\nconst hideMailgo = (): void => {\n  // hide all the modals\n  setModalDisplay(MAILGO_MAIL, \"none\");\n  setModalDisplay(MAILGO_TEL, \"none\");\n\n  // remove listener keyDown\n  document.removeEventListener(\"keydown\", mailgoKeydown);\n};\n\n// is the mailgo modal hidden?\nconst mailgoIsShowing = (type = MAILGO_MAIL): boolean => {\n  return getModalDisplay(type) === \"flex\";\n};\n\nconst byElement = (): HTMLLinkElement => {\n  // by\n  let by: HTMLLinkElement = createElement(aHTMLTag) as HTMLLinkElement;\n  by.href = \"https://mailgo.dev?ref=mailgo-modal\";\n  by.className = \"m-by\";\n  by.target = \"_blank\";\n  by.rel = \"noopener noreferrer\";\n  by.appendChild(createTextNode(\"mailgo.dev\"));\n\n  return by;\n};\n\n// create element\nconst createElement = (element: string = \"div\"): HTMLElement =>\n  document.createElement(element);\n\n// create text node\nconst createTextNode = (element: string): Text =>\n  document.createTextNode(element);\n\n// decrypt email\nconst mailToEncoded = (encoded: string): string =>\n  (window.location.href = MAILTO + atob(encoded));\n\n// encode email\nconst encodeEmail = (email: string): string => btoa(email);\n\n// get the correct HTMLElement from a type\nconst getModalHTMLElement = (type: string = MAILGO_MAIL) => {\n  if (type === MAILGO_TEL) {\n    return modalTel;\n  } else {\n    return modalMailto;\n  }\n};\n\n// get display value\nconst getModalDisplay = (ref: string = MAILGO_MAIL): string =>\n  getModalHTMLElement(ref).style.display;\n\n// set display value\nconst setModalDisplay = (ref: string = MAILGO_MAIL, value: string): void => {\n  let modal = getModalHTMLElement(ref);\n  modal.style.display = value;\n\n  if (value === \"flex\") {\n    // \"save\" the activated link.\n    activatedLink = document.activeElement as HTMLElement;\n    modal.setAttribute(\"aria-hidden\", \"false\");\n\n    // Focus on the modal container.\n    modal.setAttribute(\"tabindex\", \"0\");\n    modal.focus();\n    setFocusLoop(modal);\n  } else {\n    modal.setAttribute(\"aria-hidden\", \"true\");\n\n    // focus back the activated link for getting back to the context.\n    modal.setAttribute(\"tabindex\", \"-1\");\n    activatedLink.focus();\n  }\n};\n\n// enable dark mode\nconst enableDarkMode = (type: string = MAILGO_MAIL) =>\n  getModalHTMLElement(type).classList.add(\"m-dark\");\n\n// disable dark mode\nconst disableDarkMode = (type: string = MAILGO_MAIL) =>\n  getModalHTMLElement(type).classList.remove(\"m-dark\");\n\n// custom composedPath if path or event.composedPath() are not defined\nconst composedPath = (\n  el: HTMLElement\n): (HTMLElement | Document | (Window & typeof globalThis))[] => {\n  let path = [];\n\n  while (el) {\n    path.push(el);\n\n    if (el.tagName === \"HTML\") {\n      path.push(document);\n      path.push(window);\n      return path;\n    }\n\n    el = el.parentElement;\n  }\n};\n\n// function to check an action is enabled or not\nconst mailgoActionEnabled = (action: MailgoAction): boolean => {\n  // by default all the actions are enabled\n  if (!config) {\n    return true;\n  }\n  if (config && !config?.actions) {\n    return true;\n  }\n\n  if (config && config.actions && config?.actions[action] === false) {\n    return false;\n  }\n\n  return true;\n};\n\n// manage the language of mailgo\nconst mailgoSetLanguage = (): string => {\n  let languageType = \"default lang\";\n\n  // if a language is defined in configuration use it\n  if (config?.lang && languages.indexOf(config.lang) !== -1) {\n    lang = config.lang;\n    languageType = \"config lang\";\n  } else {\n    // else if is defined <html lang=\"\"> use it!\n    // keep the lang from html\n    let htmlLang: string = document.documentElement.lang;\n\n    // find the correct language using the lang attribute, not just a === because there a are cases like fr-FR or fr_FR in html lang attribute\n    languages.forEach((language: any) => {\n      if (new RegExp(\"^\" + language, \"gi\").test(htmlLang)) {\n        lang = language;\n        languageType = \"html lang\";\n      }\n    });\n  }\n\n  // strings\n  strings = translations[lang];\n\n  return languageType;\n};\n\nconst mailgoStyle = (): void => {\n  if (!document.getElementById(\"mailgo-style\")) {\n    // mailgo style\n    let mailgoCSSElement: HTMLStyleElement = createElement(\n      \"style\"\n    ) as HTMLStyleElement;\n    mailgoCSSElement.id = \"mailgo-style\";\n    mailgoCSSElement.type = \"text/css\";\n    mailgoCSSElement.appendChild(createTextNode(mailgoCSS));\n    document.head.appendChild(mailgoCSSElement);\n  }\n};\n\n// mailgo\nfunction mailgo(mailgoConfig?: MailgoConfig): boolean {\n  try {\n    // polyfill mailgo\n    // mailgoPolyfill();\n\n    // set the global config merging window mailgConfig and mailgoConfig passed as a parameter\n    config = { ...mailgoConfig, ...((window as any)?.mailgoConfig || null) };\n\n    // if the window is defined...\n    if (typeof window !== \"undefined\") {\n      // if is set in config use it (load the mailgo CSS)\n      if (typeof config?.loadCSS !== \"undefined\") {\n        loadCSSConfig = config.loadCSS;\n      }\n\n      // if is set in config use it (enable mailto)\n      if (typeof config?.mailto !== \"undefined\") {\n        mailtoEnabled = config.mailto;\n      }\n\n      // if is set in config use it (enable tel)\n      if (typeof config?.tel !== \"undefined\") {\n        telEnabled = config.tel;\n      }\n\n      // if is set in config use it (enable sms)\n      if (typeof config?.sms !== \"undefined\") {\n        smsEnabled = config.sms;\n      }\n\n      // if load css enabled load it!\n      if (loadCSSConfig) {\n        // add the style for mailgo\n        mailgoStyle();\n      }\n\n      // if is set an initEvent add the listener\n      if (config?.initEvent) {\n        if (config?.listenerOptions) {\n          // listener options specified\n          document.addEventListener(\n            config.initEvent,\n            mailgoInit,\n            config.listenerOptions\n          );\n        } else {\n          // no listener options\n          document.addEventListener(config.initEvent, mailgoInit);\n        }\n      } else {\n        mailgoInit();\n      }\n\n      return true;\n    }\n  } catch (error) {\n    // console.error(error);\n  }\n  return false;\n}\n\n// define the methods also for window element\nif (typeof window !== \"undefined\") {\n  (window as any).getMailgoTypeByElement = getMailgoTypeByElement;\n  (window as any).mailgoCheckRender = mailgoCheckRender;\n  (window as any).mailgoPreRender = mailgoPreRender;\n  (window as any).mailgoDirectRender = mailgoDirectRender;\n  (window as any).mailgoRender = mailgoRender;\n  (window as any).mailgo = mailgo;\n}\n\nexport {\n  getMailgoTypeByElement,\n  mailgoCheckRender,\n  mailgoPreRender,\n  mailgoDirectRender,\n  mailgoRender,\n};\n\nexport default mailgo;\n","// webpack > dist/mailgo.min.js\n\nimport mailgo from \"../src/mailgo\";\n\n// call init mailgo attached to the event DOMContentLoaded\nconst mailgoConfig = {\n  initEvent: \"DOMContentLoaded\",\n};\n\nmailgo(mailgoConfig);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(358);\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}