{"version":3,"sources":["webpack://mailgo/../src/mailgo.scss","webpack://mailgo/../node_modules/css-loader/dist/runtime/api.js","webpack://mailgo/../src/mailgo.scss?81f2","webpack://mailgo/../src/constants.ts","webpack://mailgo/../src/utils.ts","webpack://mailgo/../src/mailgo.ts","webpack://mailgo/../src/mobile-detect.ts","webpack://mailgo/./mailgo.dist.ts","webpack://mailgo/webpack/bootstrap","webpack://mailgo/webpack/runtime/make namespace object","webpack://mailgo/webpack/startup"],"names":["___CSS_LOADER_EXPORT___","___CSS_LOADER_API_IMPORT___","i","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","concat","join","modules","mediaQuery","dedupe","alreadyImportedModules","length","_i","result","MAILTO","MAILGO","TEL","CALLTO","SMS","MAILGO_MAIL","MAILGO_TEL","MAILGO_SMS","CLASSIC","LESS_SPAM","spanHTMLTag","aHTMLTag","pHTMLTag","notNumber","RegExp","leadingZeros","validateEmail","email","test","validateEmails","arr","every","copyToClipboard","str","el","document","createElement","value","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","setFocusLoop","ref","modal","querySelector","addEventListener","leaveLastLink","leaveFirstLink","e","code","shiftKey","preventDefault","target","closest","focus","strings","config","activeMailgoType","modalMailto","modalTel","url","href","lessSpamHref","mail","cc","bcc","subject","bodyMail","tel","msg","telegramUsername","skypeUsername","title","titleTel","detailCc","detailBcc","detailSubject","detailBody","detailMsg","ccValue","bccValue","subjectValue","bodyValue","msgValue","activatedLink","gmail","outlook","yahoo","open","telegram","wa","skype","call","copyMail","copyTel","mailgoCSS","require","lang","defaultStrings","translations","isMobile","mailtoEnabled","telEnabled","smsEnabled","desktopEnabled","mobileEnabled","validateEmailConfig","validateTelConfig","showFooterConfig","loadCSSConfig","mailgoInit","navigator","userAgent","desktop","mobile","mailgoSetLanguage","mailgoExists","getElementById","display","classList","add","dark","enableDarkMode","disableDarkMode","modalBackground","className","modalContent","details","ccSpan","createTextNode","cc_","bccSpan","bcc_","subjectSpan","subject_","bodySpan","body_","open_in_","gmailSpan","mailgoConfigAttributeEnabled","outlookSpan","yahooSpan","openSpan","_default","copy","showFooter","byElement","hideMailgo","mailgoTelExists","detailsTel","msgSpan","telegramSpan","waSpan","whatsapp","skypeSpan","callSpan","_as_default","mailgoClickListener","event","contains","mailgoIsShowing","path","composedPath","forEach","element","HTMLDocument","Window","localMailgoType","getMailgoTypeByElement","activeMailgoModalType","type","mailgoPreRender","mailgoElementOrUrl","mailgoElement","installation","getAttribute","validateUrl","decodeURIComponent","split","trim","urlParams","URL","searchParams","get","error","console","log","encodeURIComponent","parameters","buildLessSpamHref","validateTel","hasAttribute","mailgoRender","textContent","openGmail","openOutlook","openYahooMail","openDefault","openWhatsApp","openTelegram","openSkype","showMailgo","mailgoKeydown","urlString","gmailUrl","window","startingOutlookUrl","office365","outlookUrl","yahooUrl","tgUrl","skypeUrl","whatappTel","replace","waUrl","location","activeCopy","copied","setTimeout","regexValidate","elementHref","keyboardEvent","keyCode","setModalDisplay","removeEventListener","getModalDisplay","by","rel","getModalHTMLElement","activeElement","remove","tagName","parentElement","joinedParams","attribute","actions","languageType","languages","htmlLang","documentElement","language","mailgo","mailgoConfig","loadCSS","mailto","sms","mailgoCSSElement","head","mailgoStyle","initEvent","listenerOptions","mailgoCheckRender","mailgoDirectRender","directUrl","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","r","Symbol","toStringTag","Object","defineProperty","__webpack_exports__"],"mappings":"sCACA,IACIA,EAD8B,EAAQ,IACZC,EAA4B,SAASC,GAAG,OAAOA,EAAE,MAE/EF,EAAwBG,KAAK,CAACC,EAAOC,GAAI,y/KAAkgL,KAE3iLD,EAAOE,QAAUN,G,6BCEjBI,EAAOE,QAAU,SAAUC,GACzB,IAAIC,EAAO,GAuDX,OArDAA,EAAKC,SAAW,WACd,OAAOC,KAAKC,KAAI,SAAUC,GACxB,IAAIC,EAAUN,EAAuBK,GAErC,OAAIA,EAAK,GACA,UAAUE,OAAOF,EAAK,GAAI,MAAME,OAAOD,EAAS,KAGlDA,KACNE,KAAK,KAKVP,EAAKN,EAAI,SAAUc,EAASC,EAAYC,GACf,iBAAZF,IAETA,EAAU,CAAC,CAAC,KAAMA,EAAS,MAG7B,IAAIG,EAAyB,GAE7B,GAAID,EACF,IAAK,IAAIhB,EAAI,EAAGA,EAAIQ,KAAKU,OAAQlB,IAAK,CAEpC,IAAIG,EAAKK,KAAKR,GAAG,GAEP,MAANG,IACFc,EAAuBd,IAAM,GAKnC,IAAK,IAAIgB,EAAK,EAAGA,EAAKL,EAAQI,OAAQC,IAAM,CAC1C,IAAIT,EAAO,GAAGE,OAAOE,EAAQK,IAEzBH,GAAUC,EAAuBP,EAAK,MAKtCK,IACGL,EAAK,GAGRA,EAAK,GAAK,GAAGE,OAAOG,EAAY,SAASH,OAAOF,EAAK,IAFrDA,EAAK,GAAKK,GAMdT,EAAKL,KAAKS,MAIPJ,I,oBC/DD,IAAIc,EAAS,EAAQ,IAGjBlB,EAAOE,QADW,iBAAXgB,EACUA,EAEAA,EAAOb,Y,wCCH7B,IAAMc,EAAiB,UACjBC,EAAiB,UACjBC,EAAc,OACdC,EAAiB,UACjBC,EAAc,OAadC,EAA+B,SAC/BC,EAA8B,aAC9BC,EAA8B,aAG9BC,EAAkC,UAClCC,EAAoC,YAGpCC,EAAsB,OACtBC,EAAmB,IACnBC,EAAmB,IAMnBC,EAAoB,IAAIC,OAAO,UAAW,MAC1CC,EAAuB,IAAID,OAAO,MAAO,MCrCzCE,EAAgB,SAACC,GAAD,MAC3B,4JAA4JC,KAC1JD,IAISE,EAAiB,SAACC,GAAD,OAC5BA,EAAIC,MAAML,IASCM,EAAkB,SAACC,GAC9B,IAAIC,EAA0BC,SAASC,cACrC,YAEFF,EAAGG,MAAQJ,EACXC,EAAGI,aAAa,WAAY,IAC5BJ,EAAGK,MAAMC,SAAW,WACpBN,EAAGK,MAAME,KAAO,UAChBN,SAASO,KAAKC,YAAYT,GAC1B,IAAIU,EACFT,SAASU,eAAeC,WAAa,GACjCX,SAASU,eAAeE,WAAW,GAKzC,OAHAb,EAAGc,SACHb,SAASc,YAAY,QACrBd,SAASO,KAAKQ,YAAYhB,KACtBU,IACFT,SAASU,eAAeM,kBACxBhB,SAASU,eAAeO,SAASR,IAC1B,IAMES,EAAe,SAACC,GAC3B,IAAIC,EAAQD,EACZC,EACGC,cAAc,mCACdC,iBAAiB,UAAWC,GAC/BH,EACGC,cAAc,oCACdC,iBAAiB,UAAWE,IAGpBD,EAAgB,SAACE,GAEb,QAAXA,EAAEC,OAAiC,IAAfD,EAAEE,WACxBF,EAAEG,iBAEAH,EAAEI,OACDC,QAAQ,OACRT,cAAc,mBAAmCU,UAI3CP,EAAiB,SAACC,GAEd,QAAXA,EAAEC,OAAiC,IAAfD,EAAEE,WACxBF,EAAEG,iBACAH,EAAEI,OACDC,QAAQ,OACRT,cAAc,kBAAkCU,U,y3GCfvD,IAWIC,EAGAC,EAiBAC,EAGAC,EAA0BC,EAG1BC,EAAUC,EAAcC,EAGxBC,EAAcC,EAAYC,EAAaC,EAAiBC,EAGxDC,EAAaC,EAAaC,EAA0BC,EAGpDC,EACFC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GACAC,GACAC,GACAC,GACAC,GAGEC,GACFC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAtEIC,GAAoBC,kBAGtBC,GFvB+B,KE0B7BC,GAAqCC,EAAD,GAWtCC,IAAoB,EAGpBC,IAAyB,EACzBC,IAAsB,EACtBC,IAAsB,EACtBC,IAA0B,EAC1BC,IAAyB,EACzBC,IAA+B,EAC/BC,IAA6B,EAC7BC,IAA4B,EAC5BC,IAAyB,EAgDvBC,GAAa,WAKjB,QACE,GAJFV,GFnH4B,WGf1B,iEAAiEpF,KAC/D+F,UAAUC,WAGL,SAEF,iBDgI0B,KAA3B,UAAOxD,SAAP,aAAO,EAAQyD,WACjBT,GAAiBhD,EAAOyD,QAEnBb,IAAaI,YAIU,KAA1B,UAAOhD,SAAP,aAAO,EAAQ0D,UACjBT,GAAgBjD,EAAO0D,QAEnBd,IAAaK,KAHnB,CAUFU,KAGA,IAAIC,IAAiB7F,SAAS8F,eAAelH,GAG7C,GAAIkG,KAAkBe,EAAc,UAElC1D,EAAclC,MACFG,MAAM2F,QAAU,OAC5B5D,EAAY9E,GAAKuB,EACjBuD,EAAY6D,UAAUC,IAAI,WAC1B9D,EAAYhC,aAAa,OAAQ,UACjCgC,EAAYhC,aAAa,WAAY,MACrCgC,EAAYhC,aAAa,kBAAmB,WAG5C,UAAI8B,SAAJ,OAAI,EAAQiE,KACVC,KAEAC,KAIF,IAAIC,EAA+BpG,KACnCoG,EAAgBC,UAAY,eAC5BnE,EAAY3B,YAAY6F,GAGxB,IAAIE,EAA4BtG,KAChCsG,EAAaD,UAAY,kBACzBnE,EAAY3B,YAAY+F,IAGxBtD,EAAQhD,GAAc,WAChB5C,GAAK,UACX4F,EAAMqD,UAAY,UAClBC,EAAa/F,YAAYyC,GAGzB,IAAIuD,EAAuBvG,KAC3BuG,EAAQnJ,GAAK,YACbmJ,EAAQF,UAAY,aAEpBnD,EAAWlD,GAAcd,IAChB9B,GAAK,OACd,IAAIoJ,EAAsBxG,GAAchB,GACxCwH,EAAOH,UAAY,QACnBG,EAAOjG,YAAYkG,GAAe1E,EAAQ2E,KAAOhC,GAAegC,OAChEnD,EAAUvD,GAAchB,IAChB5B,GAAK,aACb8F,EAAS3C,YAAYiG,GACrBtD,EAAS3C,YAAYgD,GACrBgD,EAAQhG,YAAY2C,IAEpBC,EAAYnD,GAAcd,IAChB9B,GAAK,QACf,IAAIuJ,EAAuB3G,GAAchB,GACzC2H,EAAQN,UAAY,QACpBM,EAAQpG,YAAYkG,GAAe1E,EAAQ6E,MAAQlC,GAAekC,QAClEpD,GAAWxD,GAAchB,IAChB5B,GAAK,cACd+F,EAAU5C,YAAYoG,GACtBxD,EAAU5C,YAAYiD,IACtB+C,EAAQhG,YAAY4C,IAEpBC,EAAgBpD,GAAcd,IAChB9B,GAAK,YACnB,IAAIyJ,EAA2B7G,GAAchB,GAC7C6H,EAAYR,UAAY,QACxBQ,EAAYtG,YACVkG,GAAe1E,EAAQ+E,UAAYpC,GAAeoC,YAEpDrD,GAAezD,GAAchB,IAChB5B,GAAK,kBAClBgG,EAAc7C,YAAYsG,GAC1BzD,EAAc7C,YAAYkD,IAC1B8C,EAAQhG,YAAY6C,IAEpBC,EAAarD,GAAcd,IAChB9B,GAAK,SAChB,IAAI2J,EAAwB/G,GAAchB,GAC1C+H,EAASV,UAAY,QACrBU,EAASxG,YAAYkG,GAAe1E,EAAQiF,OAAStC,GAAesC,SACpEtD,GAAY1D,GAAchB,IAChB5B,GAAK,eACfiG,EAAW9C,YAAYwG,GACvB1D,EAAW9C,YAAYmD,IACvB6C,EAAQhG,YAAY8C,GAEpBiD,EAAa/F,YAAYgG,IAGzB1C,GAAQ7D,GAAcf,IAChB7B,GAAK,UACXyG,GAAMxB,KAAO,gBACbwB,GAAMkC,UAAUC,IAAI,UACpBnC,GAAMkC,UAAUC,IAAI,WACpBnC,GAAMtD,YACJkG,GAAe1E,EAAQkF,UAAYvC,GAAeuC,WAEpD,IAAIC,EAAyBlH,GAAchB,GAC3CkI,EAAUb,UAAY,QACtBa,EAAU3G,YACRkG,GAAe1E,EAAQ8B,OAASa,GAAeb,QAEjDA,GAAMtD,YAAY2G,GAEdC,GAA6B,SAAU,UACzCb,EAAa/F,YAAYsD,KAI3BC,GAAU9D,GAAcf,IAChB7B,GAAK,YACb0G,GAAQzB,KAAO,kBACfyB,GAAQiC,UAAUC,IAAI,UACtBlC,GAAQiC,UAAUC,IAAI,aACtBlC,GAAQvD,YACNkG,GAAe1E,EAAQkF,UAAYvC,GAAeuC,WAEpD,IAAIG,EAA2BpH,GAAchB,GAC7CoI,EAAYf,UAAY,QACxBe,EAAY7G,YACVkG,GAAe1E,EAAQ+B,SAAWY,GAAeZ,UAEnDA,GAAQvD,YAAY6G,GAEhBD,GAA6B,SAAU,YACzCb,EAAa/F,YAAYuD,KAI3BC,GAAQ/D,GAAcf,IAChB7B,GAAK,UACX2G,GAAM1B,KAAO,gBACb0B,GAAMgC,UAAUC,IAAI,UACpBjC,GAAMgC,UAAUC,IAAI,WACpBjC,GAAMxD,YACJkG,GAAe1E,EAAQkF,UAAYvC,GAAeuC,WAEpD,IAAII,EAAyBrH,GAAchB,GAC3CqI,EAAUhB,UAAY,QACtBgB,EAAU9G,YACRkG,GAAe1E,EAAQgC,OAASW,GAAeX,QAEjDA,GAAMxD,YAAY8G,GAEdF,GAA6B,SAAU,UACzCb,EAAa/F,YAAYwD,KAI3BC,GAAOhE,GAAcf,IAChB7B,GAAK,SACV4G,GAAK3B,KAAO,eACZ2B,GAAK+B,UAAUC,IAAI,UACnBhC,GAAK+B,UAAUC,IAAI,aACnB,IAAIsB,EAAwBtH,GAAchB,GAC1CsI,EAASjB,UAAY,QACrBiB,EAAS/G,YAAYkG,GAAe1E,EAAQiC,MAAQU,GAAeV,OACnEA,GAAKzD,YAAY+G,GACjBtD,GAAKzD,YACHkG,GAAe1E,EAAQwF,UAAY7C,GAAe6C,WAGpDjB,EAAa/F,YAAYyD,KAGzBK,GAAWrE,GAAcf,IAChB7B,GAAK,SACdiH,GAAShC,KAAO,eAChBgC,GAAS0B,UAAUC,IAAI,UACvB3B,GAAS0B,UAAUC,IAAI,SACvB3B,GAAS9D,YAAYkG,GAAe1E,EAAQyF,MAAQ9C,GAAe8C,OAEnElB,EAAa/F,YAAY8D,SAGS,KAA9B,UAAOrC,SAAP,aAAO,EAAQyF,cACjBrC,GAAmBpD,EAAOyF,YAGxBrC,IACFkB,EAAa/F,YAAYmH,MAI3B3H,SAASO,KAAKC,YAAY2B,GAG1BkE,EAAgB/E,iBAAiB,QAASsG,IAI5C,IAAIC,IAAoB7H,SAAS8F,eAAejH,GAGhD,GAAIkG,KAAe8C,EAAiB,UAElCzF,EAAWnC,MACFG,MAAM2F,QAAU,OACzB3D,EAAS/E,GAAKwB,EACduD,EAAS4D,UAAUC,IAAI,WACvB7D,EAASjC,aAAa,OAAQ,UAC9BiC,EAASjC,aAAa,WAAY,MAClCiC,EAASjC,aAAa,kBAAmB,eAGzC,UAAI8B,SAAJ,OAAI,EAAQiE,KACVC,KAEAC,KAIF,IAAIC,EAA+BpG,KACnCoG,EAAgBC,UAAY,eAC5BlE,EAAS5B,YAAY6F,GAGrB,IAAIE,EAA4BtG,KAChCsG,EAAaD,UAAY,kBACzBlE,EAAS5B,YAAY+F,IAGrBrD,EAAWjD,GAAc,WAChB5C,GAAK,cACd6F,EAASoD,UAAY,UACrBC,EAAa/F,YAAY0C,GAGzB,IAAI4E,EAA0B7H,KAC9B6H,EAAWzK,GAAK,gBAChByK,EAAWxB,UAAY,aAEvB/C,EAAYtD,GAAcd,IAChB9B,GAAK,QACf,IAAI0K,EAAuB9H,GAAchB,GACzC8I,EAAQzB,UAAY,QACpByB,EAAQvH,YAAYkG,GAAe1E,EAAQiF,OAAStC,GAAesC,SACnErD,GAAW3D,GAAchB,IAChB5B,GAAK,cACdkG,EAAU/C,YAAYuH,GACtBxE,EAAU/C,YAAYoD,IACtBkE,EAAWtH,YAAY+C,GAEvBgD,EAAa/F,YAAYsH,IAGzB5D,GAAWjE,GAAcf,IAChB7B,GAAK,OACd6G,GAAS5B,KAAO,mBAChB4B,GAAS8B,UAAUC,IAAI,UACvB/B,GAAS8B,UAAUC,IAAI,QAGvB/B,GAAS9D,MAAM2F,QAAU,OAEzB7B,GAAS1D,YACPkG,GAAe1E,EAAQkF,UAAYvC,GAAeuC,WAEpD,IAAIc,EAA4B/H,GAAchB,GAC9C+I,EAAa1B,UAAY,QACzB0B,EAAaxH,YACXkG,GAAe1E,EAAQkC,UAAYS,GAAeT,WAEpDA,GAAS1D,YAAYwH,GAEjBZ,GAA6B,SAAU,aACzCb,EAAa/F,YAAY0D,KAI3BC,GAAKlE,GAAcf,IAChB7B,GAAK,OACR8G,GAAG7B,KAAO,mBACV6B,GAAG6B,UAAUC,IAAI,UACjB9B,GAAG6B,UAAUC,IAAI,QACjB9B,GAAG3D,YAAYkG,GAAe1E,EAAQkF,UAAYvC,GAAeuC,WACjE,IAAIe,EAAsBhI,GAAchB,GACxCgJ,EAAO3B,UAAY,QACnB2B,EAAOzH,YACLkG,GAAe1E,EAAQkG,UAAYvD,GAAeuD,WAEpD/D,GAAG3D,YAAYyH,GAEXb,GAA6B,SAAU,aACzCb,EAAa/F,YAAY2D,KAI3BC,GAAQnE,GAAcf,IAChB7B,GAAK,UACX+G,GAAM9B,KAAO,gBACb8B,GAAM4B,UAAUC,IAAI,UACpB7B,GAAM4B,UAAUC,IAAI,WACpB7B,GAAM5D,YACJkG,GAAe1E,EAAQkF,UAAYvC,GAAeuC,WAEpD,IAAIiB,EAAyBlI,GAAchB,GAC3CkJ,EAAU7B,UAAY,QACtB6B,EAAU3H,YACRkG,GAAe1E,EAAQoC,OAASO,GAAeP,QAEjDA,GAAM5D,YAAY2H,GAEdf,GAA6B,SAAU,UACzCb,EAAa/F,YAAY4D,KAI3BC,GAAOpE,GAAcf,IAChB7B,GAAK,SACVgH,GAAK/B,KAAO,eACZ+B,GAAK2B,UAAUC,IAAI,UACnB5B,GAAK2B,UAAUC,IAAI,aACnB,IAAImC,EAAwBnI,GAAchB,GAC1CmJ,EAAS9B,UAAY,QACrB8B,EAAS5H,YAAYkG,GAAe1E,EAAQqC,MAAQM,GAAeN,OACnEA,GAAK7D,YAAY4H,GACjB/D,GAAK7D,YACHkG,GAAe1E,EAAQqG,aAAe1D,GAAe0D,cAGvD9B,EAAa/F,YAAY6D,KAGzBE,GAAUtE,GAAcf,IAChB7B,GAAK,aACbkH,GAAQjC,KAAO,eACfiC,GAAQyB,UAAUC,IAAI,UACtB1B,GAAQyB,UAAUC,IAAI,SACtB1B,GAAQ/D,YAAYkG,GAAe1E,EAAQyF,MAAQ9C,GAAe8C,OAElElB,EAAa/F,YAAY+D,SAGS,KAA9B,UAAOtC,SAAP,aAAO,EAAQyF,cACjBrC,GAAmBpD,EAAOyF,YAGxBrC,IACFkB,EAAa/F,YAAYmH,MAI3B3H,SAASO,KAAKC,YAAY4B,GAG1BiE,EAAgB/E,iBAAiB,QAASsG,IAI5C5H,SAASsB,iBAAiB,QAASgH,MAuBrC,SAASA,GAAoBC,GAE3B,IACGvI,SAASO,KAAKiI,SAASrG,KACvBnC,SAASO,KAAKiI,SAASpG,GAExB,OAAO,EAIT,GAAIqG,KACF,OAAO,EAIT,IAAIC,EACDH,EAAMI,cAAgBJ,EAAMI,gBAC7BA,GAAaJ,EAAM1G,QAwCrB,OAtCI6G,GACFA,EAAKE,SAAQ,SAACC,GACZ,GAAIA,aAAmBC,cAAgBD,aAAmBE,OACxD,OAAO,EAIT,GAAIjE,IAAiBC,IAAcC,GAAY,CAC7C,IAAIgE,EAAkBC,GAAuBJ,GAG7C,GAAIG,EAAiB,OAIfE,EAAqB,UAFzBhH,EAAmB8G,SAEM,aAAG,EAAkBG,KAE9C,GAAID,IAGCpE,IAAiBoE,IAA0BtK,GAC3CmG,IAAcmE,IAA0BrK,GACxCmG,IAAckE,IAA0BpK,GAQzC,OALAyJ,EAAM3G,iBAGNwH,GAAgBP,IAET,QAQZ,EAOT,SAASO,GACPC,GACS,UACLC,EAGAH,EAAqB,UAAGjH,SAAH,aAAG,EAAkBiH,KAC1CI,EAAoC,UAAGrH,SAAH,aAAG,EAAkBqH,aAG7D,IAAKJ,EAAM,OAAO,EAYlB,GAVkC,iBAAvBE,EAET/G,EAAO+G,GAGP/G,EAAO+G,EAAmBG,aAAa,QACvCF,EAAgBD,GAIdF,IAASvK,EAAa,OAExB,GAAI2K,IAAiBxK,EAAS,CACxB0K,GAAYnH,EAAM/D,GACpBiE,EAAOkH,mBAAmBpH,EAAKqH,MAAM,KAAK,GAAGA,MAAMpL,GAAQ,GAAGqL,QACrDH,GAAYnH,EAAM9D,KAC3BgE,EAAOkH,mBAAmBpH,EAAKqH,MAAM,KAAK,GAAGA,MAAMnL,GAAQ,GAAGoL,SAGhE,IAGE,IAAIC,GAFJxH,EAAM,IAAIyH,IAAIxH,IAEuByH,aAErCtH,EAAKoH,EAAUG,IAAI,MACnBtH,EAAMmH,EAAUG,IAAI,OACpBrH,EAAUkH,EAAUG,IAAI,WACxBpH,EAAWiH,EAAUG,IAAI,QACzB,MAAOC,GACPC,QAAQC,IAAIF,SAET,GAAIV,IAAiBvK,EAAW,CAGrCwD,EACE8G,EAAcE,aAAa,iBAC3BF,EAAcE,aAAa,eACvBF,EAAcE,aAAa,gBAC3B,IACAF,EAAcE,aAAa,eAC3B,KAEN,IACEnH,EAAM,IAAIyH,IAAIvL,EAAS6L,mBAAmB5H,IAC1C,MAAOyH,GACPC,QAAQC,IAAIF,GAGd,IAAII,EAAuB,IAG3B5H,EAAK6G,EAAcE,aAAa,mBAC5BF,EAAcE,aAAa,mBAC3B,IACAF,EAAcE,aAAa,kBAC3B,OAGIa,EAAWlN,KAAK,MAAQsF,IAGhCC,EAAM4G,EAAcE,aAAa,oBAC7BF,EAAcE,aAAa,oBAC3B,IACAF,EAAcE,aAAa,mBAC3B,OAGKa,EAAWlN,KAAK,OAASuF,IAGlCC,EAAU2G,EAAcE,aAAa,kBAGxBa,EAAWlN,KAAK,WAAawF,IAG1CC,EAAW0G,EAAcE,aAAa,eAGxBa,EAAWlN,KAAK,QAAUyF,GAGxCL,EAAe+H,GACb/L,EAAS6L,mBAAmB5H,GAC5B6H,GASJ,QAJqC,KAAjC,UAAOpI,SAAP,aAAO,EAAQ1C,iBACjB4F,GAAsBlD,EAAO1C,eAG3B4F,GAAqB,CAEvB,IAAKzF,EAAe8C,EAAKmH,MAAM,MAC7B,OAAO,EAILlH,IAAO/C,EAAe+C,EAAGkH,MAAM,QAAOlH,EAAK,IAC3CC,IAAQhD,EAAegD,EAAIiH,MAAM,QAAOjH,EAAM,UAIjD,GAAIyG,IAAStK,EAAY,OAC5B,GAAI0K,IAAiBxK,EAAS,CACxB0K,GAAYnH,EAAM7D,GACpBoE,EAAM6G,mBAAmBpH,EAAKqH,MAAM,KAAK,GAAGA,MAAMlL,GAAK,GAAGmL,QACjDH,GAAYnH,EAAM5D,GAC3BmE,EAAM6G,mBAAmBpH,EAAKqH,MAAM,KAAK,GAAGA,MAAMjL,GAAQ,GAAGkL,QACpDH,GAAYnH,EAAM3D,KAC3BkE,EAAM6G,mBAAmBpH,EAAKqH,MAAM,KAAK,GAAGA,MAAMhL,GAAK,GAAGiL,SAG5D,IAEE,IAAIC,GADJxH,EAAM,IAAIyH,IAAIxH,IACuByH,aAGrCjH,EAAM+G,EAAUG,IAAI,QACpB,MAAOC,GACPC,QAAQC,IAAIF,SAET,GAAIV,GAAgBvK,EAAW,CACpC6D,EAAMyG,EAAcE,aAAa,YACjC1G,EAAMwG,EAAcE,aAAa,YAEjC,IACEnH,EAAM,IAAIyH,IAAIrL,EAAM2L,mBAAmBvH,IACvC,MAAOoH,GACPC,QAAQC,IAAIF,GAGd,IAAII,EAAuB,GAGvBvH,GAAKuH,EAAWlN,KAAK,QAAU2F,GAGnCP,EAAe+H,GACb7L,EAAM2L,mBAAmBvH,GACzBwH,GAUJ,QALmC,KAA/B,UAAOpI,SAAP,aAAO,EAAQsI,eACjBnF,GAAoBnD,EAAOsI,aAIzBnF,KD5uBmB,SAACvC,GAAD,MACzB,2EAA2EpD,KACzEoD,GC2uBO0H,CAAY1H,GAAM,OAKvBE,EADEuG,GAAiBA,EAAckB,aAAa,iBAC3BlB,EAAcE,aAAa,iBAE3B,KAKnBxG,EADEsG,GAAiBA,EAAckB,aAAa,cAC9BlB,EAAcE,aAAa,cAE3B,KAcpB,OATU,QAAN,EAAAvH,SAAA,SAAQiE,MAAQoD,EAActD,UAAUwC,SAAS,QACnDrC,KAEAC,KAIFqE,MAEO,EAqCT,SAASA,KAAwB,MAE3BtB,EAAqB,UAAGjH,SAAH,aAAG,EAAkBiH,KAG9C,QAAKA,IAGDA,IAASvK,GAEXqE,EAAMyH,YAAclI,EAAKmH,MAAM,KAAK5L,KAAK,MAGrCqJ,GAA6B,SAAU,OAAS3E,GAClDU,EAAS/C,MAAM2F,QAAU,QACzBvC,EAAQkH,YAAcjI,EAAGkH,MAAM,KAAK5L,KAAK,OAEzCoF,EAAS/C,MAAM2F,QAAU,OAGvBqB,GAA6B,SAAU,QAAU1E,GACnDU,EAAUhD,MAAM2F,QAAU,QAC1BtC,GAASiH,YAAchI,EAAIiH,MAAM,KAAK5L,KAAK,OAE3CqF,EAAUhD,MAAM2F,QAAU,OAGxBqB,GAA6B,SAAU,YAAczE,GACvDU,EAAcjD,MAAM2F,QAAU,QAC9BrC,GAAagH,YAAc/H,GAE3BU,EAAcjD,MAAM2F,QAAU,OAG5BqB,GAA6B,SAAU,SAAWxE,GACpDU,EAAWlD,MAAM2F,QAAU,QAC3BpC,GAAU+G,YAAc9H,GAExBU,EAAWlD,MAAM2F,QAAU,OAI7BjC,GAAMxC,iBAAiB,QAASqJ,IAEhC5G,GAAQzC,iBAAiB,QAASsJ,IAElC5G,GAAM1C,iBAAiB,QAASuJ,IAEhC5G,GAAK3C,iBAAiB,QAASwJ,IAE/BxG,GAAShD,iBAAiB,QAASmG,KAG5B0B,IAAStK,IAEhBqE,EAASwH,YAAc7H,EAEnBuE,GAA6B,SAAU,QAAUtE,GACnDS,EAAUnD,MAAM2F,QAAU,QAC1BnC,GAAS8G,YAAc5H,GAEvBS,EAAUnD,MAAM2F,QAAU,OAI5B5B,GAAG7C,iBAAiB,QAASyJ,IAGzBhI,GACF/C,SAAS8F,eAAe,QAAQ1F,MAAM2F,QAAU,QAChD7B,GAAS5C,iBAAiB,QAAS0J,KAEnChL,SAAS8F,eAAe,QAAQ1F,MAAM2F,QAAU,OAGlD3B,GAAM9C,iBAAiB,QAAS2J,IAEhC5G,GAAK/C,iBAAiB,QAASwJ,IAE/BvG,GAAQjD,iBAAiB,QAASmG,KAIpCyD,GAAW/B,GAGXnJ,SAASsB,iBAAiB,UAAW6J,KAE9B,GAIT,IAAMR,GAAY,SAACpC,GAAwB,MAGrC6C,EAFJ7C,EAAM3G,iBAGN,IAAI2H,EAAoC,UAAGrH,SAAH,aAAG,EAAkBqH,aAE7D,GAAIA,IAAiBxK,EACnB,IACEqM,EAAY/I,EAAI5E,WAChB,MAAOgE,GACP2J,EAAY9I,OAELiH,IAAiBvK,IAC1BoM,EAAY7I,GAId,IAAI8I,EACF,mDACAjB,mBAAmBgB,GAGrBE,OAAOrH,KAAKoH,EAAU,SAAU,wBAGhCzD,MAGIgD,GAAc,SAACrC,GAAwB,MAC3CA,EAAM3G,iBAGN,IAAI2J,EACF,8DAGF,UAAItJ,SAAJ,OAAI,EAAQuJ,YACVD,EACE,oEAIJ,IAAIE,EAAqBF,EAAqBnB,mBAAmB5H,GAG7DG,IACF8I,EAAaA,EAAW3N,OAAO,YAAcsM,mBAAmBzH,KAG9DC,IACF6I,EAAaA,EAAW3N,OAAO,SAAWsM,mBAAmBxH,KAI/D0I,OAAOrH,KAAKwH,EAAY,SAAU,wBAGlC7D,MAGIiD,GAAgB,SAACtC,GACrBA,EAAM3G,iBAGN,IAAI8J,EAAmB,sCAAwClJ,EAG3DG,IACF+I,EAAWA,EAAS5N,OAAO,YAAcsM,mBAAmBzH,KAE1DC,IACF8I,EAAWA,EAAS5N,OAAO,SAAWsM,mBAAmBxH,KAI3D0I,OAAOrH,KAAKyH,EAAU,SAAU,wBAGhC9D,MAGIoD,GAAe,SAACzC,GAIpB,GAHAA,EAAM3G,iBAGFmB,EAAkB,CAEpB,IAAI4I,EAAgB,gBAAkBvB,mBAAmBrH,GAGzDuI,OAAOrH,KAAK0H,EAAO,SAAU,wBAG7B/D,OAIEqD,GAAY,SAAC1C,GACjBA,EAAM3G,iBAEN,IAGIgK,EAAmB,SAAWxB,mBAHdpH,GAAiBH,GAMrCyI,OAAOrH,KAAK2H,EAAU,SAAU,wBAGhChE,MAGImD,GAAe,SAACxC,GACpBA,EAAM3G,iBAGN,IAAIiK,EAAahJ,EAAIiJ,QAAQ1M,EAAW,IAAI0M,QAAQxM,EAAc,IAG9DyM,EAAgB,iBAAmB3B,mBAAmByB,GAGtD/I,IACFiJ,EAAQA,EAAMjO,OAAO,SAAWsM,mBAAmBtH,KAIrDwI,OAAOrH,KAAK8H,EAAO,SAAU,wBAG7BnE,MAGIkD,GAAc,SAACvC,GAAwB,MAC3CA,EAAM3G,iBAEN,IAAI2H,EAAoC,UAAGrH,SAAH,aAAG,EAAkBqH,aAGzDA,IAAiBxK,EACnBuM,OAAOU,SAAS1J,KAAOA,EACdiH,IAAiBvK,IAE1BsM,OAAOU,SAAS1J,KAAOC,GAGzBqF,MAGIH,GAAO,SAACc,GAIW,MACjB0D,GAJN1D,EAAM3G,iBAGF6G,SAGuB,UAAGvG,SAAH,aAAG,EAAkBiH,QAEjCvK,GAEXiB,EAAgB2C,GAChByJ,EAAa3H,KAGbzE,EAAgBgD,GAChBoJ,EAAa1H,IAGf0H,EAAWvB,YAAc1I,EAAQkK,QAAUvH,GAAeuH,OAC1DC,YAAW,WACTF,EAAWvB,YAAc1I,EAAQyF,MAAQ9C,GAAe8C,KAExDG,OACC,OAKD6B,GAAc,SAACpH,GAAuC,IAA1B8G,EAA0B,uDAAX5K,EAC3C6N,EAAgB,IAAI/M,OAAO,IAAM8J,EAAO,SAAU,MACtD,OAAOiD,EAAc3M,KAAK4C,IAI5B,SAAS4G,GAAuBJ,GAAyC,UACnEwD,EAAuBxD,EAA4BW,aAAa,QAGpE,aAAIX,EAAQ7C,iBAAZ,OAAI,EAAmBwC,SFpkCQ,aEqkC7B,OAAO,KAIT,GAAI6D,GAAW,UAAIxD,EAAQ7C,iBAAZ,OAAI,EAAmBwC,SAAS,UAAW,CACxD,GAAIiB,GAAY4C,EAAa9N,IAAWkL,GAAY4C,EAAa7N,GAE/D,MAAO,CACL2K,KAAMvK,EACN2K,aAAcxK,GAEX,GACL0K,GAAY4C,EAAa5N,IACzBgL,GAAY4C,EAAa3N,GAGzB,MAAO,CACLyK,KAAMtK,EACN0K,aAAcxK,GAEX,GAAI0K,GAAY4C,EAAa1N,GAElC,MAAO,CACLwK,KAAMrK,EACNyK,aAAcxK,GAKpB,GAAoB,YAAhBsN,GAAA,UAA6BxD,EAAQ7C,iBAArC,OAA6B,EAAmBwC,SAAS,UAAW,CAEtE,GACEK,EAAQ2B,aAAa,iBACrB3B,EAAQ2B,aAAa,eAGrB,MAAO,CACLrB,KAAMvK,EACN2K,aAAcvK,GAEX,GAAI6J,EAAQ2B,aAAa,YAE9B,MAAO,CACLrB,KAAMtK,EACN0K,aAAcvK,GAEX,GAAI6J,EAAQ2B,aAAa,YAE9B,MAAO,CACLrB,KAAMrK,EACNyK,aAAcvK,GAKpB,OAAO,KAOT,IAAMmM,GAAgB,SAACmB,GAErB,GAAI7D,KAAmB,OACjBU,EAAqB,UAAGjH,SAAH,aAAG,EAAkBiH,KAE9C,GAAIA,IAASvK,EACX,OAAQ0N,EAAcC,SACpB,KAAK,GAGH,OADA3E,MACO,EACT,KAAK,GAGH,OADA+C,MACO,EACT,KAAK,GAGH,OADAC,MACO,EACT,KAAK,GAGH,OADAC,MACO,EACT,KAAK,GACL,KAAK,GAGH,OADAC,MACO,EACT,KAAK,GAGH,OADArD,MACO,EACT,QACE,OAAO,OAEN,GAAI0B,IAAStK,EAClB,OAAQyN,EAAcC,SACpB,KAAK,GAGH,OADA3E,MACO,EACT,KAAK,GAGH,OADAoD,MACO,EACT,KAAK,GAGH,OADAD,MACO,EACT,KAAK,GAGH,OADAE,MACO,EACT,KAAK,GACL,KAAK,GAGH,OADAH,MACO,EACT,KAAK,GAGH,OADArD,MACO,EACT,QACE,OAAO,GAIf,OAAO,GAIHyD,GAAa,SAAC/B,GAElBqD,GAAgBrD,EAAM,SAIlBvB,GAAa,WAEjB4E,GAAgB5N,EAAa,QAC7B4N,GAAgB3N,EAAY,QAG5BmB,SAASyM,oBAAoB,UAAWtB,KAIpC1C,GAAkB,WACtB,OACG3D,IAAkD,SAAjC4H,GAAgB9N,KAChCmG,IAAcC,KAA+C,SAAhC0H,GAAgB7N,IAI7C8I,GAAY,WAEhB,IAAIgF,EAAsB1M,GAAcf,GAOxC,OANAyN,EAAGrK,KAAO,sCACVqK,EAAGrG,UAAY,OACfqG,EAAG9K,OAAS,SACZ8K,EAAGC,IAAM,sBACTD,EAAGnM,YAAYkG,GAAe,eAEvBiG,GAIH1M,GAAgB,eAAC4I,EAAD,uDAAmB,MAAnB,OACpB7I,SAASC,cAAc4I,IAGnBnC,GAAiB,SAACmC,GAAD,OACrB7I,SAAS0G,eAAemC,IAGpBgE,GAAsB,WAAyC,IAAxC1D,EAAwC,uDAAhBvK,EACnD,OAAIuK,IAAStK,EACJuD,EAEAD,GAKLuK,GAAkB,eAACvL,EAAD,uDAAwBvC,EAAxB,OACtBiO,GAAoB1L,GAAKf,MAAM2F,SAG3ByG,GAAkB,WAGb,IAFTrL,EAES,uDAFcvC,EACvBsB,EACS,uCACLkB,EAAQyL,GAAoB1L,GAE5BC,IACFA,EAAMhB,MAAM2F,QAAU7F,EAER,SAAVA,GAEF2D,GAAgB7D,SAAS8M,cACzB1L,EAAMjB,aAAa,cAAe,SAGlCiB,EAAMjB,aAAa,WAAY,KAC/BiB,EAAMW,QACNb,EAAaE,KAEbA,EAAMjB,aAAa,cAAe,QAGlCiB,EAAMjB,aAAa,WAAY,MAC/B0D,GAAc9B,WAMdoE,GAAiB,WAAM,MAEvBgD,EAAqB,UAAGjH,SAAH,aAAG,EAAkBiH,KAC1CA,GACF0D,GAAoB1D,GAAMnD,UAAUC,IAAI,WAKtCG,GAAkB,WAAM,MAExB+C,EAAqB,UAAGjH,SAAH,aAAG,EAAkBiH,KAC1CA,GACF0D,GAAoB1D,GAAMnD,UAAU+G,OAAO,WAKzCpE,GAAe,SACnB5I,GAIA,IAFA,IAAI2I,EAAO,GAEJ3I,GAAI,CAGT,GAFA2I,EAAKvL,KAAK4C,GAES,SAAfA,EAAGiN,QAGL,OAFAtE,EAAKvL,KAAK6C,UACV0I,EAAKvL,KAAKmO,QACH5C,EAGT3I,EAAKA,EAAGkN,gBAKN3C,GAAoB,SAACnB,EAAckB,GAEvC,GADA9H,EAAe4G,EACXkB,GAAcA,EAAWjM,OAAS,EAAG,CACvC,IAAI8O,EAAe7C,EAAWtM,KAAK,KACnCwE,EAAeA,EAAazE,OAAO,IAAMoP,GAE3C,OAAO3K,GAIH6E,GAA+B,SACnC+B,EACAgE,GAGA,IAAKlL,EACH,OAAO,EAIT,GAAa,WAATkH,EAAmB,SACrB,GAAIlH,IAAU,UAACA,SAAD,QAAC,EAAQmL,SACrB,OAAO,EAGT,GACEnL,GACAA,EAAOmL,UACwC,KAAzC,QAAN,EAAAnL,SAAA,eAAQmL,QAAQD,IAEhB,OAAO,OAEJ,GAAa,WAAThE,EAAmB,SAG5B,GAAIlH,IAAU,UAACA,SAAD,QAAC,EAAQuE,SACrB,OAAO,EAGT,GACEvE,GACAA,EAAOuE,UACwC,KAAzC,QAAN,EAAAvE,SAAA,eAAQuE,QAAQ2G,IAEhB,OAAO,EAIX,OAAO,GAIHvH,GAAoB,WAAc,MAClCyH,EAAe,eAGnB,GACQ,QAAN,EAAApL,SAAA,SAAQyC,OACiD,IAAxD4I,UAAsCrL,EAAOyC,MAE9CA,GAAOzC,EAAOyC,KACd2I,EAAe,kBACV,CAGL,IAAIE,EAAmBvN,SAASwN,gBAAgB9I,KAG/C4I,WAAsC,SAACG,GAClC,IAAIpO,OAAO,IAAMoO,EAAU,MAAMhO,KAAK8N,KACxC7I,GAAO+I,EACPJ,EAAe,gBAQrB,OAFArL,EAAW4C,EAAoCF,IAExC2I,GAiBT,SAASK,GAAOC,GACd,IAAI,MAQF,GAHA1L,EAAS,EAAH,KAAQ0L,IAAkB,UAACrC,cAAD,eAAiBqC,eAAgB,MAG3C,oBAAXrC,OAAwB,eA4BV,EAAvB,QA1B+B,KAA3B,UAAOrJ,SAAP,aAAO,EAAQ2L,WACjBtI,GAAgBrD,EAAO2L,cAIK,KAA1B,UAAO3L,SAAP,aAAO,EAAQ4L,UACjB/I,GAAgB7C,EAAO4L,aAIE,KAAvB,UAAO5L,SAAP,aAAO,EAAQY,OACjBkC,GAAa9C,EAAOY,UAIK,KAAvB,UAAOZ,SAAP,aAAO,EAAQ6L,OACjB9I,GAAa/C,EAAO6L,KAIlBxI,IA7CU,WAClB,IAAKtF,SAAS8F,eAAe,gBAAiB,CAE5C,IAAIiI,EAAqC9N,GACvC,SAEF8N,EAAiB1Q,GAAK,eACtB0Q,EAAiB5E,KAAO,WACxB4E,EAAiBvN,YAAYkG,GAAelC,KAC5CxE,SAASgO,KAAKxN,YAAYuN,IAsCtBE,GAIF,UAAIhM,SAAJ,OAAI,EAAQiM,UACV,UAAIjM,SAAJ,OAAI,EAAQkM,gBAEVnO,SAASsB,iBACPW,EAAOiM,UACP3I,GACAtD,EAAOkM,iBAITnO,SAASsB,iBAAiBW,EAAOiM,UAAW3I,SAG9CA,KAGF,OAAO,GAET,MAAO0E,GACPC,QAAQC,IAAIF,GAEd,OAAO,EAIa,oBAAXqB,SACRA,OAAerC,uBAAyBA,GACxCqC,OAAehD,oBAAsBA,GACrCgD,OAAe8C,kBAAoB9F,GACnCgD,OAAelC,gBAAkBA,GACjCkC,OAAe+C,mBA1tBlB,SAA4BC,GAI1B,OAFAZ,KAEIjE,GAAY6E,EAAW/P,IAAWkL,GAAY6E,EAAW9P,IAC3D0D,EAAmB,CACjBiH,KAAMvK,EACN2K,aAAcxK,GAEhBqK,GAAgBkF,IACT,MAEP7E,GAAY6E,EAAW7P,IACvBgL,GAAY6E,EAAW5P,IACvB+K,GAAY6E,EAAW3P,MAEvBuD,EAAmB,CACjBiH,KAAMtK,EACN0K,aAAcxK,GAEhBqK,GAAgBkF,IACT,IAssBRhD,OAAeb,aAAeA,GAC9Ba,OAAeoC,OAASA,IAY3B,GE9/CqB,CACnBQ,UAAW,uBCLTK,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUnR,QAG3C,IAAIF,EAASmR,EAAyBE,GAAY,CACjDpR,GAAIoR,EAEJnR,QAAS,IAOV,OAHAoR,EAAoBD,GAAUrR,EAAQA,EAAOE,QAASkR,GAG/CpR,EAAOE,QCnBfkR,EAAoBG,EAAI,SAASrR,GACX,oBAAXsR,QAA0BA,OAAOC,aAC1CC,OAAOC,eAAezR,EAASsR,OAAOC,YAAa,CAAE3O,MAAO,WAE7D4O,OAAOC,eAAezR,EAAS,aAAc,CAAE4C,OAAO,KCFvD,IAAI8O,EAAsBR,EAAoB,K","file":"mailgo.min.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".m-modal{position:fixed;top:0;right:0;bottom:0;left:0;justify-content:center;align-items:center;flex-direction:column;overflow:hidden;font-size:16.5px;z-index:10000}.m-modal p,.m-modal span,.m-modal strong,.m-modal a{margin:0;padding:0;font-size:100%;line-height:1;font-family:-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,Helvetica,Arial,sans-serif,\\\"Apple Color Emoji\\\",\\\"Segoe UI Emoji\\\",\\\"Segoe UI Symbol\\\";text-rendering:optimizeLegibility}.m-modal strong{font-weight:700}.m-modal .m-modal-back{position:absolute;z-index:10001;top:0;right:0;bottom:0;left:0;background-color:#20232a;opacity:.8}.m-modal .m-modal-content{position:relative;z-index:10002;box-sizing:content-box;text-align:center;overflow:hidden;min-width:200px;max-width:240px;background-color:#fff;opacity:.95;border-radius:20px;box-shadow:0 3px 20px rgba(32,35,42,.5);border:3px solid #333;color:#4a4a4a;display:flex;flex-direction:column;overflow:auto;padding:24px;transition:.5s box-shadow}.m-modal .m-modal-content:hover,.m-modal .m-modal-content:focus,.m-modal .m-modal-content:active{opacity:1}.m-modal .m-modal-content .m-title{margin-bottom:8px;overflow:hidden;white-space:pre-line;text-overflow:ellipsis;line-height:1.2em}.m-modal .m-modal-content .m-details{margin-bottom:10px}.m-modal .m-modal-content .m-details p{white-space:pre-line;font-size:12px;margin-top:3px;margin-bottom:3px}.m-modal .m-modal-content a{cursor:pointer;padding:10px;color:#4a4a4a;border-radius:20px;text-decoration:none}.m-modal .m-modal-content a.m-gmail{color:#c0372a}.m-modal .m-modal-content a.m-gmail:hover,.m-modal .m-modal-content a.m-gmail:focus,.m-modal .m-modal-content a.m-gmail:active{background-color:rgba(192,55,42,.08);color:#c0372a}.m-modal .m-modal-content a.m-outlook{color:#0967aa}.m-modal .m-modal-content a.m-outlook:hover,.m-modal .m-modal-content a.m-outlook:focus,.m-modal .m-modal-content a.m-outlook:active{background-color:rgba(9,103,170,.08);color:#0967aa}.m-modal .m-modal-content a.m-yahoo{color:#4a00a0}.m-modal .m-modal-content a.m-yahoo:hover,.m-modal .m-modal-content a.m-yahoo:focus,.m-modal .m-modal-content a.m-yahoo:active{background-color:rgba(74,0,160,.08);color:#4a00a0}.m-modal .m-modal-content a.m-tg{color:#086da0}.m-modal .m-modal-content a.m-tg:hover,.m-modal .m-modal-content a.m-tg:focus,.m-modal .m-modal-content a.m-tg:active{background-color:rgba(8,109,160,.08);color:#086da0}.m-modal .m-modal-content a.m-wa{color:#067466}.m-modal .m-modal-content a.m-wa:hover,.m-modal .m-modal-content a.m-wa:focus,.m-modal .m-modal-content a.m-wa:active{background-color:rgba(6,116,102,.08);color:#067466}.m-modal .m-modal-content a.m-skype{color:#076d92}.m-modal .m-modal-content a.m-skype:hover,.m-modal .m-modal-content a.m-skype:focus,.m-modal .m-modal-content a.m-skype:active{background-color:rgba(7,109,146,.08);color:#076d92}.m-modal .m-modal-content a.m-copy{padding:16px 10px;font-size:16px}.m-modal .m-modal-content a.m-default:hover,.m-modal .m-modal-content a.m-default:focus,.m-modal .m-modal-content a.m-default:active,.m-modal .m-modal-content a.m-copy:hover,.m-modal .m-modal-content a.m-copy:focus,.m-modal .m-modal-content a.m-copy:active{background-color:rgba(0,0,0,.08);color:#4a4a4a}.m-modal .m-modal-content a.m-by{font-size:12px;margin-top:.8rem;padding:5px;color:#4a4a4a}.m-modal .m-modal-content a.m-by:hover,.m-modal .m-modal-content a.m-by:focus,.m-modal .m-modal-content a.m-by:active{color:#3d3d3d}.m-modal .m-modal-content .w-500{font-weight:500}.m-modal.m-dark .m-modal-content{background-color:#20232a}.m-modal.m-dark .m-modal-content,.m-modal.m-dark .m-modal-content p,.m-modal.m-dark .m-modal-content p span,.m-modal.m-dark .m-modal-content strong{color:#fff}.m-modal.m-dark .m-modal-content a{color:#eaeaea}.m-modal.m-dark .m-modal-content a:not(.m-by):hover,.m-modal.m-dark .m-modal-content a:not(.m-by):focus,.m-modal.m-dark .m-modal-content a:not(.m-by):active{background-color:rgba(134,134,134,.08);color:#eaeaea}.m-modal.m-dark .m-modal-content a.m-gmail{color:#e07d73}.m-modal.m-dark .m-modal-content a.m-gmail:hover,.m-modal.m-dark .m-modal-content a.m-gmail:focus,.m-modal.m-dark .m-modal-content a.m-gmail:active{background-color:rgba(224,125,115,.08);color:#e07d73}.m-modal.m-dark .m-modal-content a.m-outlook{color:#4c9cd7}.m-modal.m-dark .m-modal-content a.m-outlook:hover,.m-modal.m-dark .m-modal-content a.m-outlook:focus,.m-modal.m-dark .m-modal-content a.m-outlook:active{background-color:rgba(76,156,215,.08);color:#4c9cd7}.m-modal.m-dark .m-modal-content a.m-yahoo{color:#ac88d3}.m-modal.m-dark .m-modal-content a.m-yahoo:hover,.m-modal.m-dark .m-modal-content a.m-yahoo:focus,.m-modal.m-dark .m-modal-content a.m-yahoo:active{background-color:rgba(172,136,211,.08);color:#ac88d3}.m-modal.m-dark .m-modal-content a.m-tg{color:#4cabdb}.m-modal.m-dark .m-modal-content a.m-tg:hover,.m-modal.m-dark .m-modal-content a.m-tg:focus,.m-modal.m-dark .m-modal-content a.m-tg:active{background-color:rgba(76,171,219,.08);color:#4cabdb}.m-modal.m-dark .m-modal-content a.m-wa{color:#4cd2c0}.m-modal.m-dark .m-modal-content a.m-wa:hover,.m-modal.m-dark .m-modal-content a.m-wa:focus,.m-modal.m-dark .m-modal-content a.m-wa:active{background-color:rgba(76,210,192,.08);color:#4cd2c0}.m-modal.m-dark .m-modal-content a.m-skype{color:#4cc7f4}.m-modal.m-dark .m-modal-content a.m-skype:hover,.m-modal.m-dark .m-modal-content a.m-skype:focus,.m-modal.m-dark .m-modal-content a.m-skype:active{background-color:rgba(76,199,244,.08);color:#4cc7f4}.m-modal.m-dark .m-modal-content a.m-by:hover,.m-modal.m-dark .m-modal-content a.m-by:focus,.m-modal.m-dark .m-modal-content a.m-by:active{color:#fff}\", \"\"]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\n        var result = require(\"!!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../node_modules/sass-loader/dist/cjs.js!./mailgo.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","import { MailgoModalType, MailgoInstallationType } from \"mailgo\";\r\n\r\n// links\r\nexport const MAILTO: string = \"mailto:\";\r\nexport const MAILGO: string = \"mailgo:\";\r\nexport const TEL: string = \"tel:\";\r\nexport const CALLTO: string = \"callto:\";\r\nexport const SMS: string = \"sms:\";\r\n\r\n// deep linking\r\nexport const outlookDeepLink: string = \"ms-outlook://\";\r\n\r\n// no mailgo class\r\nexport const NO_MAILGO: string = \"no-mailgo\";\r\n\r\n// responsive settings\r\nexport const DESKTOP: string = \"desktop\";\r\nexport const MOBILE: string = \"mobile\";\r\n\r\n// mailgo modal types\r\nexport const MAILGO_MAIL: MailgoModalType = \"mailgo\";\r\nexport const MAILGO_TEL: MailgoModalType = \"mailgo-tel\";\r\nexport const MAILGO_SMS: MailgoModalType = \"mailgo-sms\";\r\n\r\n// mailgo installation types\r\nexport const CLASSIC: MailgoInstallationType = \"classic\";\r\nexport const LESS_SPAM: MailgoInstallationType = \"less-spam\";\r\n\r\n// useful html tags\r\nexport const spanHTMLTag: string = \"span\";\r\nexport const aHTMLTag: string = \"a\";\r\nexport const pHTMLTag: string = \"p\";\r\n\r\n// default lang\r\nexport const defaultLang: string = \"en\";\r\n\r\n// useful regexp\r\nexport const notNumber: RegExp = new RegExp(\"[^0-9/]\", \"gi\");\r\nexport const leadingZeros: RegExp = new RegExp(\"^0+\", \"gi\");\r\n","// validate a single email with regex\r\nexport const validateEmail = (email: string): boolean =>\r\n  /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n    email\r\n  );\r\n\r\n// validate an array of emails\r\nexport const validateEmails = (arr: string[]): boolean =>\r\n  arr.every(validateEmail);\r\n\r\n// validate a single tel with regex\r\nexport const validateTel = (tel: string): boolean =>\r\n  /^[+]{0,1}[\\s0-9]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*[p]{0,1}[\\s0-9]*$/.test(\r\n    tel\r\n  );\r\n\r\n// copy of a string\r\nexport const copyToClipboard = (str: string): boolean => {\r\n  let el: HTMLTextAreaElement = document.createElement(\r\n    \"textarea\"\r\n  ) as HTMLTextAreaElement;\r\n  el.value = str;\r\n  el.setAttribute(\"readonly\", \"\");\r\n  el.style.position = \"absolute\";\r\n  el.style.left = \"-9999px\";\r\n  document.body.appendChild(el);\r\n  let selected: Range | boolean =\r\n    document.getSelection().rangeCount > 0\r\n      ? document.getSelection().getRangeAt(0)\r\n      : false;\r\n  el.select();\r\n  document.execCommand(\"copy\");\r\n  document.body.removeChild(el);\r\n  if (selected) {\r\n    document.getSelection().removeAllRanges();\r\n    document.getSelection().addRange(selected);\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\n// set focus loop within modal\r\nexport const setFocusLoop = (ref: HTMLElement): void => {\r\n  let modal = ref;\r\n  modal\r\n    .querySelector(\".m-modal-content a:last-of-type\")\r\n    .addEventListener(\"keydown\", leaveLastLink);\r\n  modal\r\n    .querySelector(\".m-modal-content a:first-of-type\")\r\n    .addEventListener(\"keydown\", leaveFirstLink);\r\n};\r\n\r\nexport const leaveLastLink = (e: KeyboardEvent): void => {\r\n  // going back to the first link to force looping\r\n  if (e.code === \"Tab\" && e.shiftKey === false) {\r\n    e.preventDefault();\r\n\r\n    ((e.target as HTMLElement)\r\n      .closest(\"div\")\r\n      .querySelector(\"a:first-of-type\") as HTMLElement).focus();\r\n  }\r\n};\r\n\r\nexport const leaveFirstLink = (e: KeyboardEvent): void => {\r\n  // going back to the first link to force looping\r\n  if (e.code === \"Tab\" && e.shiftKey === true) {\r\n    e.preventDefault();\r\n    ((e.target as HTMLElement)\r\n      .closest(\"div\")\r\n      .querySelector(\"a:last-of-type\") as HTMLElement).focus();\r\n  }\r\n};\r\n","import {\r\n  MailgoConfig,\r\n  MailgoTranslations,\r\n  MailgoTranslation,\r\n  MailgoAction,\r\n  MailgoLanguages,\r\n  MailgoType,\r\n  MailgoDetail,\r\n  MailgoInstallationType,\r\n  MailgoModalType,\r\n} from \"mailgo\";\r\n\r\n// polyfill\r\n// import { mailgoPolyfill } from \"./polyfill\";\r\n\r\n// constants\r\nimport {\r\n  MAILTO,\r\n  MAILGO,\r\n  TEL,\r\n  CALLTO,\r\n  SMS,\r\n  MAILGO_MAIL,\r\n  MAILGO_TEL,\r\n  MAILGO_SMS,\r\n  CLASSIC,\r\n  LESS_SPAM,\r\n  NO_MAILGO,\r\n  MOBILE,\r\n  spanHTMLTag,\r\n  aHTMLTag,\r\n  pHTMLTag,\r\n  defaultLang,\r\n  notNumber,\r\n  leadingZeros,\r\n} from \"./constants\";\r\n\r\n// utils\r\nimport {\r\n  validateEmail,\r\n  validateEmails,\r\n  validateTel,\r\n  copyToClipboard,\r\n  setFocusLoop,\r\n} from \"./utils\";\r\n\r\n// i18n for mailgo\r\nimport languages from \"../i18n/languages.json\";\r\nimport translations from \"../i18n/translations.json\";\r\n\r\n// mobile detect\r\nimport { userAgent } from \"./mobile-detect\";\r\n\r\n// mailgo scss, with toString (https://github.com/webpack-contrib/css-loader#tostring)\r\nconst mailgoCSS: string = require(\"./mailgo.scss\").toString();\r\n\r\n// default language\r\nlet lang: string = defaultLang;\r\n\r\n// default strings\r\nconst defaultStrings: MailgoTranslation = (translations as MailgoTranslations)[\r\n  defaultLang\r\n];\r\n\r\n// translation strings\r\nlet strings: MailgoTranslation;\r\n\r\n// global mailgo config object\r\nlet config: MailgoConfig;\r\n\r\n// config to check if the client is mobile or desktop\r\nlet isMobile: boolean = false;\r\n\r\n// default config attributes\r\nlet mailtoEnabled: boolean = true;\r\nlet telEnabled: boolean = true;\r\nlet smsEnabled: boolean = false;\r\nlet desktopEnabled: boolean = true;\r\nlet mobileEnabled: boolean = true;\r\nlet validateEmailConfig: boolean = true;\r\nlet validateTelConfig: boolean = true;\r\nlet showFooterConfig: boolean = true;\r\nlet loadCSSConfig: boolean = true;\r\n\r\n// activeMailgoType\r\nlet activeMailgoType: MailgoType;\r\n\r\n// modals global object\r\nlet modalMailto: HTMLElement, modalTel: HTMLElement;\r\n\r\n// mailgo general variables\r\nlet url: URL, href: string, lessSpamHref: string;\r\n\r\n// mailgo mail variables\r\nlet mail: string, cc: string, bcc: string, subject: string, bodyMail: string;\r\n\r\n// mailgo tel variables\r\nlet tel: string, msg: string, telegramUsername: string, skypeUsername: string;\r\n\r\n// the DOM elements\r\nlet title: HTMLElement,\r\n  titleTel: HTMLElement,\r\n  detailCc: HTMLElement,\r\n  detailBcc: HTMLElement,\r\n  detailSubject: HTMLElement,\r\n  detailBody: HTMLElement,\r\n  detailMsg: HTMLElement,\r\n  ccValue: HTMLElement,\r\n  bccValue: HTMLElement,\r\n  subjectValue: HTMLElement,\r\n  bodyValue: HTMLElement,\r\n  msgValue: HTMLElement,\r\n  activatedLink: HTMLElement;\r\n\r\n// mailgo buttons (actions)\r\nlet gmail: HTMLLinkElement,\r\n  outlook: HTMLLinkElement,\r\n  yahoo: HTMLLinkElement,\r\n  open: HTMLLinkElement,\r\n  telegram: HTMLLinkElement,\r\n  wa: HTMLLinkElement,\r\n  skype: HTMLLinkElement,\r\n  call: HTMLLinkElement,\r\n  copyMail: HTMLLinkElement,\r\n  copyTel: HTMLLinkElement;\r\n\r\n/**\r\n * mailgoInit\r\n * the function that creates the mailgo elements in DOM\r\n */\r\nconst mailgoInit = (): void => {\r\n  // set the boolean for mobile/desktop\r\n  isMobile = userAgent() === MOBILE;\r\n\r\n  // responsive settings\r\n  {\r\n    if (typeof config?.desktop !== \"undefined\") {\r\n      desktopEnabled = config.desktop;\r\n      // if it is a desktop and desktop is not enabled no init mailgo\r\n      if (!isMobile && !desktopEnabled) {\r\n        return;\r\n      }\r\n    }\r\n    if (typeof config?.mobile !== \"undefined\") {\r\n      mobileEnabled = config.mobile;\r\n      // if it is a mobile and mobile is not enabled no init mailgo\r\n      if (isMobile && !mobileEnabled) {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  // set the mailgo language\r\n  mailgoSetLanguage();\r\n\r\n  // mailgo, if mailgo not already exists\r\n  let mailgoExists = !!document.getElementById(MAILGO_MAIL);\r\n\r\n  // if mailgo is enabled for mailto and it not exists in DOM\r\n  if (mailtoEnabled && !mailgoExists) {\r\n    // modal\r\n    modalMailto = createElement() as HTMLElement;\r\n    modalMailto.style.display = \"none\";\r\n    modalMailto.id = MAILGO_MAIL;\r\n    modalMailto.classList.add(\"m-modal\");\r\n    modalMailto.setAttribute(\"role\", \"dialog\");\r\n    modalMailto.setAttribute(\"tabindex\", \"-1\");\r\n    modalMailto.setAttribute(\"aria-labelledby\", \"m-title\");\r\n\r\n    // if dark is in config\r\n    if (config?.dark) {\r\n      enableDarkMode();\r\n    } else {\r\n      disableDarkMode();\r\n    }\r\n\r\n    // background\r\n    let modalBackground: HTMLElement = createElement();\r\n    modalBackground.className = \"m-modal-back\";\r\n    modalMailto.appendChild(modalBackground);\r\n\r\n    // modal content\r\n    let modalContent: HTMLElement = createElement();\r\n    modalContent.className = \"m-modal-content\";\r\n    modalMailto.appendChild(modalContent);\r\n\r\n    // title (email address)\r\n    title = createElement(\"strong\");\r\n    title.id = \"m-title\";\r\n    title.className = \"m-title\";\r\n    modalContent.appendChild(title);\r\n\r\n    // details\r\n    let details: HTMLElement = createElement();\r\n    details.id = \"m-details\";\r\n    details.className = \"m-details\";\r\n\r\n    detailCc = createElement(pHTMLTag);\r\n    detailCc.id = \"m-cc\";\r\n    let ccSpan: HTMLElement = createElement(spanHTMLTag);\r\n    ccSpan.className = \"w-500\";\r\n    ccSpan.appendChild(createTextNode(strings.cc_ || defaultStrings.cc_));\r\n    ccValue = createElement(spanHTMLTag);\r\n    ccValue.id = \"m-cc-value\";\r\n    detailCc.appendChild(ccSpan);\r\n    detailCc.appendChild(ccValue);\r\n    details.appendChild(detailCc);\r\n\r\n    detailBcc = createElement(pHTMLTag);\r\n    detailBcc.id = \"m-bcc\";\r\n    let bccSpan: HTMLElement = createElement(spanHTMLTag);\r\n    bccSpan.className = \"w-500\";\r\n    bccSpan.appendChild(createTextNode(strings.bcc_ || defaultStrings.bcc_));\r\n    bccValue = createElement(spanHTMLTag);\r\n    bccValue.id = \"m-bcc-value\";\r\n    detailBcc.appendChild(bccSpan);\r\n    detailBcc.appendChild(bccValue);\r\n    details.appendChild(detailBcc);\r\n\r\n    detailSubject = createElement(pHTMLTag);\r\n    detailSubject.id = \"m-subject\";\r\n    let subjectSpan: HTMLElement = createElement(spanHTMLTag);\r\n    subjectSpan.className = \"w-500\";\r\n    subjectSpan.appendChild(\r\n      createTextNode(strings.subject_ || defaultStrings.subject_)\r\n    );\r\n    subjectValue = createElement(spanHTMLTag);\r\n    subjectValue.id = \"m-subject-value\";\r\n    detailSubject.appendChild(subjectSpan);\r\n    detailSubject.appendChild(subjectValue);\r\n    details.appendChild(detailSubject);\r\n\r\n    detailBody = createElement(pHTMLTag);\r\n    detailBody.id = \"m-body\";\r\n    let bodySpan: HTMLElement = createElement(spanHTMLTag);\r\n    bodySpan.className = \"w-500\";\r\n    bodySpan.appendChild(createTextNode(strings.body_ || defaultStrings.body_));\r\n    bodyValue = createElement(spanHTMLTag);\r\n    bodyValue.id = \"m-body-value\";\r\n    detailBody.appendChild(bodySpan);\r\n    detailBody.appendChild(bodyValue);\r\n    details.appendChild(detailBody);\r\n\r\n    modalContent.appendChild(details);\r\n\r\n    // Gmail\r\n    gmail = createElement(aHTMLTag) as HTMLLinkElement;\r\n    gmail.id = \"m-gmail\";\r\n    gmail.href = \"#mailgo-gmail\";\r\n    gmail.classList.add(\"m-open\");\r\n    gmail.classList.add(\"m-gmail\");\r\n    gmail.appendChild(\r\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\r\n    );\r\n    let gmailSpan: HTMLElement = createElement(spanHTMLTag);\r\n    gmailSpan.className = \"w-500\";\r\n    gmailSpan.appendChild(\r\n      createTextNode(strings.gmail || defaultStrings.gmail)\r\n    );\r\n    gmail.appendChild(gmailSpan);\r\n\r\n    if (mailgoConfigAttributeEnabled(\"action\", \"gmail\")) {\r\n      modalContent.appendChild(gmail);\r\n    }\r\n\r\n    // Outlook\r\n    outlook = createElement(aHTMLTag) as HTMLLinkElement;\r\n    outlook.id = \"m-outlook\";\r\n    outlook.href = \"#mailgo-outlook\";\r\n    outlook.classList.add(\"m-open\");\r\n    outlook.classList.add(\"m-outlook\");\r\n    outlook.appendChild(\r\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\r\n    );\r\n    let outlookSpan: HTMLElement = createElement(spanHTMLTag);\r\n    outlookSpan.className = \"w-500\";\r\n    outlookSpan.appendChild(\r\n      createTextNode(strings.outlook || defaultStrings.outlook)\r\n    );\r\n    outlook.appendChild(outlookSpan);\r\n\r\n    if (mailgoConfigAttributeEnabled(\"action\", \"outlook\")) {\r\n      modalContent.appendChild(outlook);\r\n    }\r\n\r\n    // Outlook\r\n    yahoo = createElement(aHTMLTag) as HTMLLinkElement;\r\n    yahoo.id = \"m-yahoo\";\r\n    yahoo.href = \"#mailgo-yahoo\";\r\n    yahoo.classList.add(\"m-open\");\r\n    yahoo.classList.add(\"m-yahoo\");\r\n    yahoo.appendChild(\r\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\r\n    );\r\n    let yahooSpan: HTMLElement = createElement(spanHTMLTag);\r\n    yahooSpan.className = \"w-500\";\r\n    yahooSpan.appendChild(\r\n      createTextNode(strings.yahoo || defaultStrings.yahoo)\r\n    );\r\n    yahoo.appendChild(yahooSpan);\r\n\r\n    if (mailgoConfigAttributeEnabled(\"action\", \"yahoo\")) {\r\n      modalContent.appendChild(yahoo);\r\n    }\r\n\r\n    // open default\r\n    open = createElement(aHTMLTag) as HTMLLinkElement;\r\n    open.id = \"m-open\";\r\n    open.href = \"#mailgo-open\";\r\n    open.classList.add(\"m-open\");\r\n    open.classList.add(\"m-default\");\r\n    let openSpan: HTMLElement = createElement(spanHTMLTag);\r\n    openSpan.className = \"w-500\";\r\n    openSpan.appendChild(createTextNode(strings.open || defaultStrings.open));\r\n    open.appendChild(openSpan);\r\n    open.appendChild(\r\n      createTextNode(strings._default || defaultStrings._default)\r\n    );\r\n\r\n    modalContent.appendChild(open);\r\n\r\n    // copy\r\n    copyMail = createElement(aHTMLTag) as HTMLLinkElement;\r\n    copyMail.id = \"m-copy\";\r\n    copyMail.href = \"#mailgo-copy\";\r\n    copyMail.classList.add(\"m-copy\");\r\n    copyMail.classList.add(\"w-500\");\r\n    copyMail.appendChild(createTextNode(strings.copy || defaultStrings.copy));\r\n\r\n    modalContent.appendChild(copyMail);\r\n\r\n    // hide mailgo.dev in footer only if showFooter is defined and equal to false\r\n    if (typeof config?.showFooter !== \"undefined\") {\r\n      showFooterConfig = config.showFooter;\r\n    }\r\n\r\n    if (showFooterConfig) {\r\n      modalContent.appendChild(byElement());\r\n    }\r\n\r\n    // add the modal at the end of the body\r\n    document.body.appendChild(modalMailto);\r\n\r\n    // every click outside the modal will hide the modal\r\n    modalBackground.addEventListener(\"click\", hideMailgo);\r\n  }\r\n\r\n  // mailgo tel, if mailgo-tel not already exists\r\n  let mailgoTelExists = !!document.getElementById(MAILGO_TEL);\r\n\r\n  // if mailgo is enabled for tel/callto and it not exists in DOM\r\n  if (telEnabled && !mailgoTelExists) {\r\n    // modal\r\n    modalTel = createElement() as HTMLElement;\r\n    modalTel.style.display = \"none\";\r\n    modalTel.id = MAILGO_TEL;\r\n    modalTel.classList.add(\"m-modal\");\r\n    modalTel.setAttribute(\"role\", \"dialog\");\r\n    modalTel.setAttribute(\"tabindex\", \"-1\");\r\n    modalTel.setAttribute(\"aria-labelledby\", \"m-tel-title\");\r\n\r\n    // if dark is in config\r\n    if (config?.dark) {\r\n      enableDarkMode();\r\n    } else {\r\n      disableDarkMode();\r\n    }\r\n\r\n    // background\r\n    let modalBackground: HTMLElement = createElement();\r\n    modalBackground.className = \"m-modal-back\";\r\n    modalTel.appendChild(modalBackground);\r\n\r\n    // modal content\r\n    let modalContent: HTMLElement = createElement();\r\n    modalContent.className = \"m-modal-content\";\r\n    modalTel.appendChild(modalContent);\r\n\r\n    // title (telephone number)\r\n    titleTel = createElement(\"strong\");\r\n    titleTel.id = \"m-tel-title\";\r\n    titleTel.className = \"m-title\";\r\n    modalContent.appendChild(titleTel);\r\n\r\n    // details\r\n    let detailsTel: HTMLElement = createElement();\r\n    detailsTel.id = \"m-tel-details\";\r\n    detailsTel.className = \"m-details\";\r\n\r\n    detailMsg = createElement(pHTMLTag);\r\n    detailMsg.id = \"m-msg\";\r\n    let msgSpan: HTMLElement = createElement(spanHTMLTag);\r\n    msgSpan.className = \"w-500\";\r\n    msgSpan.appendChild(createTextNode(strings.body_ || defaultStrings.body_));\r\n    msgValue = createElement(spanHTMLTag);\r\n    msgValue.id = \"m-msg-value\";\r\n    detailMsg.appendChild(msgSpan);\r\n    detailMsg.appendChild(msgValue);\r\n    detailsTel.appendChild(detailMsg);\r\n\r\n    modalContent.appendChild(detailsTel);\r\n\r\n    // Telegram\r\n    telegram = createElement(aHTMLTag) as HTMLLinkElement;\r\n    telegram.id = \"m-tg\";\r\n    telegram.href = \"#mailgo-telegram\";\r\n    telegram.classList.add(\"m-open\");\r\n    telegram.classList.add(\"m-tg\");\r\n\r\n    // by default not display\r\n    telegram.style.display = \"none\";\r\n\r\n    telegram.appendChild(\r\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\r\n    );\r\n    let telegramSpan: HTMLElement = createElement(spanHTMLTag);\r\n    telegramSpan.className = \"w-500\";\r\n    telegramSpan.appendChild(\r\n      createTextNode(strings.telegram || defaultStrings.telegram)\r\n    );\r\n    telegram.appendChild(telegramSpan);\r\n\r\n    if (mailgoConfigAttributeEnabled(\"action\", \"telegram\")) {\r\n      modalContent.appendChild(telegram);\r\n    }\r\n\r\n    // WhatsApp\r\n    wa = createElement(aHTMLTag) as HTMLLinkElement;\r\n    wa.id = \"m-wa\";\r\n    wa.href = \"#mailgo-whatsapp\";\r\n    wa.classList.add(\"m-open\");\r\n    wa.classList.add(\"m-wa\");\r\n    wa.appendChild(createTextNode(strings.open_in_ || defaultStrings.open_in_));\r\n    let waSpan: HTMLElement = createElement(spanHTMLTag);\r\n    waSpan.className = \"w-500\";\r\n    waSpan.appendChild(\r\n      createTextNode(strings.whatsapp || defaultStrings.whatsapp)\r\n    );\r\n    wa.appendChild(waSpan);\r\n\r\n    if (mailgoConfigAttributeEnabled(\"action\", \"whatsapp\")) {\r\n      modalContent.appendChild(wa);\r\n    }\r\n\r\n    // Skype\r\n    skype = createElement(aHTMLTag) as HTMLLinkElement;\r\n    skype.id = \"m-skype\";\r\n    skype.href = \"#mailgo-skype\";\r\n    skype.classList.add(\"m-open\");\r\n    skype.classList.add(\"m-skype\");\r\n    skype.appendChild(\r\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\r\n    );\r\n    let skypeSpan: HTMLElement = createElement(spanHTMLTag);\r\n    skypeSpan.className = \"w-500\";\r\n    skypeSpan.appendChild(\r\n      createTextNode(strings.skype || defaultStrings.skype)\r\n    );\r\n    skype.appendChild(skypeSpan);\r\n\r\n    if (mailgoConfigAttributeEnabled(\"action\", \"skype\")) {\r\n      modalContent.appendChild(skype);\r\n    }\r\n\r\n    // call default\r\n    call = createElement(aHTMLTag) as HTMLLinkElement;\r\n    call.id = \"m-call\";\r\n    call.href = \"#mailgo-open\";\r\n    call.classList.add(\"m-open\");\r\n    call.classList.add(\"m-default\");\r\n    let callSpan: HTMLElement = createElement(spanHTMLTag);\r\n    callSpan.className = \"w-500\";\r\n    callSpan.appendChild(createTextNode(strings.call || defaultStrings.call));\r\n    call.appendChild(callSpan);\r\n    call.appendChild(\r\n      createTextNode(strings._as_default || defaultStrings._as_default)\r\n    );\r\n\r\n    modalContent.appendChild(call);\r\n\r\n    // copy\r\n    copyTel = createElement(aHTMLTag) as HTMLLinkElement;\r\n    copyTel.id = \"m-tel-copy\";\r\n    copyTel.href = \"#mailgo-copy\";\r\n    copyTel.classList.add(\"m-copy\");\r\n    copyTel.classList.add(\"w-500\");\r\n    copyTel.appendChild(createTextNode(strings.copy || defaultStrings.copy));\r\n\r\n    modalContent.appendChild(copyTel);\r\n\r\n    // hide mailgo.dev in footer only if showFooter is defined and equal to false\r\n    if (typeof config?.showFooter !== \"undefined\") {\r\n      showFooterConfig = config.showFooter;\r\n    }\r\n\r\n    if (showFooterConfig) {\r\n      modalContent.appendChild(byElement());\r\n    }\r\n\r\n    // add the modal at the end of the body\r\n    document.body.appendChild(modalTel);\r\n\r\n    // every click outside the modal will hide the modal\r\n    modalBackground.addEventListener(\"click\", hideMailgo);\r\n  }\r\n\r\n  // event listener on body, if the element is mailgo-compatible the mailgo modal will be rendered\r\n  document.addEventListener(\"click\", mailgoClickListener);\r\n};\r\n\r\n/**\r\n * mailgoClickListener\r\n * function to check if an element is mailgo-enabled or not referencing to\r\n * mail:\r\n * document.querySelectorAll(\r\n *   'a[href^=\"mailto:\" i]:not(.no-mailgo), a[href=\"#mailgo\"], a.mailgo'\r\n * );\r\n * tel:\r\n * document.querySelectorAll(\r\n *   'a[href^=\"tel:\" i]:not(.no-mailgo), a[href=\"#mailgo\"], a.mailgo'\r\n * );\r\n * or\r\n * document.querySelectorAll(\r\n *   'a[href^=\"callto:\" i]:not(.no-mailgo), a[href=\"#mailgo\"], a.mailgo'\r\n * );\r\n * or\r\n * document.querySelectorAll(\r\n *   'a[href^=\"sms:\" i]:not(.no-mailgo), a[href=\"#mailgo\"], a.mailgo'\r\n * );\r\n */\r\nfunction mailgoClickListener(event: Event): boolean {\r\n  // check if the mailgo HTML exists in the body\r\n  if (\r\n    !document.body.contains(modalMailto) &&\r\n    !document.body.contains(modalTel)\r\n  ) {\r\n    return false;\r\n  }\r\n\r\n  // if a mailgo is already showing do nothing\r\n  if (mailgoIsShowing()) {\r\n    return false;\r\n  }\r\n\r\n  // the path of the event\r\n  let path =\r\n    (event.composedPath && event.composedPath()) ||\r\n    composedPath(event.target as HTMLElement);\r\n\r\n  if (path) {\r\n    path.forEach((element: HTMLElement) => {\r\n      if (element instanceof HTMLDocument || element instanceof Window) {\r\n        return false;\r\n      }\r\n\r\n      // go here only if one of the mailgo modals are enabled\r\n      if (mailtoEnabled || telEnabled || smsEnabled) {\r\n        let localMailgoType = getMailgoTypeByElement(element);\r\n\r\n        // go on if the localMailgoType is not null\r\n        if (localMailgoType) {\r\n          // set the active mailgo type\r\n          activeMailgoType = localMailgoType;\r\n\r\n          let activeMailgoModalType = activeMailgoType?.type;\r\n\r\n          if (activeMailgoModalType) {\r\n            // check if the setting is enabled and if so go with pre-render\r\n            if (\r\n              (mailtoEnabled && activeMailgoModalType === MAILGO_MAIL) ||\r\n              (telEnabled && activeMailgoModalType === MAILGO_TEL) ||\r\n              (smsEnabled && activeMailgoModalType === MAILGO_SMS)\r\n            ) {\r\n              // stop the normal execution of the element click\r\n              event.preventDefault();\r\n\r\n              // render mailgo\r\n              mailgoPreRender(element as HTMLLinkElement);\r\n\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * mailgoPreRender\r\n * function to pre-render a mailgo, it helps populating elements needed by modal\r\n */\r\nfunction mailgoPreRender(\r\n  mailgoElementOrUrl: HTMLLinkElement | string\r\n): boolean {\r\n  let mailgoElement: HTMLLinkElement;\r\n\r\n  // get the type and installation from current mailgo type\r\n  let type: MailgoModalType = activeMailgoType?.type;\r\n  let installation: MailgoInstallationType = activeMailgoType?.installation;\r\n\r\n  // if type is not defined return\r\n  if (!type) return false;\r\n\r\n  if (typeof mailgoElementOrUrl === \"string\") {\r\n    // if the parameter is a string it is the url\r\n    href = mailgoElementOrUrl as string;\r\n  } else {\r\n    // if the paramenter is an HTMLLinkElement get the href attribute and the element\r\n    href = mailgoElementOrUrl.getAttribute(\"href\") as string;\r\n    mailgoElement = mailgoElementOrUrl as HTMLLinkElement;\r\n  }\r\n\r\n  // mailgo mail\r\n  if (type === MAILGO_MAIL) {\r\n    // if the installation is classic\r\n    if (installation === CLASSIC) {\r\n      if (validateUrl(href, MAILTO)) {\r\n        mail = decodeURIComponent(href.split(\"?\")[0].split(MAILTO)[1].trim());\r\n      } else if (validateUrl(href, MAILGO)) {\r\n        mail = decodeURIComponent(href.split(\"?\")[0].split(MAILGO)[1].trim());\r\n      }\r\n\r\n      try {\r\n        url = new URL(href);\r\n\r\n        let urlParams: URLSearchParams = url.searchParams;\r\n        // optional parameters for the email\r\n        cc = urlParams.get(\"cc\");\r\n        bcc = urlParams.get(\"bcc\");\r\n        subject = urlParams.get(\"subject\");\r\n        bodyMail = urlParams.get(\"body\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else if (installation === LESS_SPAM) {\r\n      // if the installation is less-spam\r\n      // mail = data-address + @ + data-domain\r\n      mail =\r\n        mailgoElement.getAttribute(\"data-address\") &&\r\n        mailgoElement.getAttribute(\"data-domain\")\r\n          ? mailgoElement.getAttribute(\"data-address\") +\r\n            \"@\" +\r\n            mailgoElement.getAttribute(\"data-domain\")\r\n          : null;\r\n\r\n      try {\r\n        url = new URL(MAILTO + encodeURIComponent(mail));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n\r\n      let parameters: string[] = [];\r\n\r\n      // cc = data-cc-address + @ + data-cc-domain\r\n      cc = mailgoElement.getAttribute(\"data-cc-address\")\r\n        ? mailgoElement.getAttribute(\"data-cc-address\") +\r\n          \"@\" +\r\n          mailgoElement.getAttribute(\"data-cc-domain\")\r\n        : null;\r\n\r\n      // if cc is defined add it to parameters\r\n      if (cc) parameters.push(\"cc=\" + cc);\r\n\r\n      // bcc = data-bcc-address + @ + data-bcc-domain\r\n      bcc = mailgoElement.getAttribute(\"data-bcc-address\")\r\n        ? mailgoElement.getAttribute(\"data-bcc-address\") +\r\n          \"@\" +\r\n          mailgoElement.getAttribute(\"data-bcc-domain\")\r\n        : null;\r\n\r\n      // if bcc is defined add it to parameters\r\n      if (bcc) parameters.push(\"bcc=\" + bcc);\r\n\r\n      // subject = data-subject\r\n      subject = mailgoElement.getAttribute(\"data-subject\");\r\n\r\n      // if subject is defined add it to parameters\r\n      if (subject) parameters.push(\"subject=\" + subject);\r\n\r\n      // body = data-body\r\n      bodyMail = mailgoElement.getAttribute(\"data-body\");\r\n\r\n      // if body is defined add it to parameters\r\n      if (bodyMail) parameters.push(\"body=\" + bodyMail);\r\n\r\n      // set the lessSpamHref\r\n      lessSpamHref = buildLessSpamHref(\r\n        MAILTO + encodeURIComponent(mail),\r\n        parameters\r\n      );\r\n    }\r\n\r\n    // if is in config use it\r\n    if (typeof config?.validateEmail !== \"undefined\") {\r\n      validateEmailConfig = config.validateEmail;\r\n    }\r\n\r\n    if (validateEmailConfig) {\r\n      // validate the email address\r\n      if (!validateEmails(mail.split(\",\"))) {\r\n        return false;\r\n      }\r\n\r\n      // if cc, bcc are not valid cc, bcc = \"\"\r\n      if (cc && !validateEmails(cc.split(\",\"))) cc = \"\";\r\n      if (bcc && !validateEmails(bcc.split(\",\"))) bcc = \"\";\r\n    }\r\n  }\r\n  // mailgo tel\r\n  else if (type === MAILGO_TEL) {\r\n    if (installation === CLASSIC) {\r\n      if (validateUrl(href, TEL)) {\r\n        tel = decodeURIComponent(href.split(\"?\")[0].split(TEL)[1].trim());\r\n      } else if (validateUrl(href, CALLTO)) {\r\n        tel = decodeURIComponent(href.split(\"?\")[0].split(CALLTO)[1].trim());\r\n      } else if (validateUrl(href, SMS)) {\r\n        tel = decodeURIComponent(href.split(\"?\")[0].split(SMS)[1].trim());\r\n      }\r\n\r\n      try {\r\n        url = new URL(href);\r\n        let urlParams: URLSearchParams = url.searchParams;\r\n\r\n        // optional parameters for the phone number\r\n        msg = urlParams.get(\"body\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else if (installation == LESS_SPAM) {\r\n      tel = mailgoElement.getAttribute(\"data-tel\");\r\n      msg = mailgoElement.getAttribute(\"data-msg\");\r\n\r\n      try {\r\n        url = new URL(TEL + encodeURIComponent(tel));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n\r\n      let parameters: string[] = [];\r\n\r\n      // if msg is defined add it to parameters\r\n      if (msg) parameters.push(\"body=\" + msg);\r\n\r\n      // set the lessSpamHref\r\n      lessSpamHref = buildLessSpamHref(\r\n        TEL + encodeURIComponent(tel),\r\n        parameters\r\n      );\r\n    }\r\n\r\n    // if is in config use it\r\n    if (typeof config?.validateTel !== \"undefined\") {\r\n      validateTelConfig = config.validateTel;\r\n    }\r\n\r\n    // validate the phone number\r\n    if (validateTelConfig) {\r\n      if (!validateTel(tel)) return;\r\n    }\r\n\r\n    // Telegram username\r\n    if (mailgoElement && mailgoElement.hasAttribute(\"data-telegram\")) {\r\n      telegramUsername = mailgoElement.getAttribute(\"data-telegram\");\r\n    } else {\r\n      telegramUsername = null;\r\n    }\r\n\r\n    // Telegram username\r\n    if (mailgoElement && mailgoElement.hasAttribute(\"data-skype\")) {\r\n      skypeUsername = mailgoElement.getAttribute(\"data-skype\");\r\n    } else {\r\n      skypeUsername = null;\r\n    }\r\n  }\r\n\r\n  // if dark is in config or contained in the element\r\n  if (config?.dark || mailgoElement.classList.contains(\"dark\")) {\r\n    enableDarkMode();\r\n  } else {\r\n    disableDarkMode();\r\n  }\r\n\r\n  // render mailgo\r\n  mailgoRender();\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * mailgoDirectRender\r\n * function to render a mailgo directly from a URL\r\n */\r\nfunction mailgoDirectRender(directUrl: string): boolean {\r\n  // start mailgo\r\n  mailgo();\r\n\r\n  if (validateUrl(directUrl, MAILTO) || validateUrl(directUrl, MAILGO)) {\r\n    activeMailgoType = {\r\n      type: MAILGO_MAIL,\r\n      installation: CLASSIC,\r\n    };\r\n    mailgoPreRender(directUrl);\r\n    return true;\r\n  } else if (\r\n    validateUrl(directUrl, TEL) ||\r\n    validateUrl(directUrl, CALLTO) ||\r\n    validateUrl(directUrl, SMS)\r\n  ) {\r\n    activeMailgoType = {\r\n      type: MAILGO_TEL,\r\n      installation: CLASSIC,\r\n    };\r\n    mailgoPreRender(directUrl);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * mailgoRender\r\n * function to render a mailgo (mail or tel)\r\n */\r\nfunction mailgoRender(): boolean {\r\n  // get the type from current mailgo type\r\n  let type: MailgoModalType = activeMailgoType?.type;\r\n\r\n  // if type is not defined return\r\n  if (!type) return false;\r\n\r\n  // mailgo mail\r\n  if (type === MAILGO_MAIL) {\r\n    // the title of the modal (email address)\r\n    title.textContent = mail.split(\",\").join(\"\\n\");\r\n\r\n    // add the details if provided\r\n    if (mailgoConfigAttributeEnabled(\"detail\", \"cc\") && cc) {\r\n      detailCc.style.display = \"block\";\r\n      ccValue.textContent = cc.split(\",\").join(\"\\n\");\r\n    } else {\r\n      detailCc.style.display = \"none\";\r\n    }\r\n\r\n    if (mailgoConfigAttributeEnabled(\"detail\", \"bcc\") && bcc) {\r\n      detailBcc.style.display = \"block\";\r\n      bccValue.textContent = bcc.split(\",\").join(\"\\n\");\r\n    } else {\r\n      detailBcc.style.display = \"none\";\r\n    }\r\n\r\n    if (mailgoConfigAttributeEnabled(\"detail\", \"subject\") && subject) {\r\n      detailSubject.style.display = \"block\";\r\n      subjectValue.textContent = subject;\r\n    } else {\r\n      detailSubject.style.display = \"none\";\r\n    }\r\n\r\n    if (mailgoConfigAttributeEnabled(\"detail\", \"body\") && bodyMail) {\r\n      detailBody.style.display = \"block\";\r\n      bodyValue.textContent = bodyMail;\r\n    } else {\r\n      detailBody.style.display = \"none\";\r\n    }\r\n\r\n    // add the actions\r\n    gmail.addEventListener(\"click\", openGmail);\r\n\r\n    outlook.addEventListener(\"click\", openOutlook);\r\n\r\n    yahoo.addEventListener(\"click\", openYahooMail);\r\n\r\n    open.addEventListener(\"click\", openDefault);\r\n\r\n    copyMail.addEventListener(\"click\", copy);\r\n  }\r\n  // mailgo tel\r\n  else if (type === MAILGO_TEL) {\r\n    // the title of the modal (tel)\r\n    titleTel.textContent = tel;\r\n\r\n    if (mailgoConfigAttributeEnabled(\"detail\", \"msg\") && msg) {\r\n      detailMsg.style.display = \"block\";\r\n      msgValue.textContent = msg;\r\n    } else {\r\n      detailMsg.style.display = \"none\";\r\n    }\r\n\r\n    // add the actions to buttons\r\n    wa.addEventListener(\"click\", openWhatsApp);\r\n\r\n    // telegram must be shown only if data-telegram is provided\r\n    if (telegramUsername) {\r\n      document.getElementById(\"m-tg\").style.display = \"block\";\r\n      telegram.addEventListener(\"click\", openTelegram);\r\n    } else {\r\n      document.getElementById(\"m-tg\").style.display = \"none\";\r\n    }\r\n\r\n    skype.addEventListener(\"click\", openSkype);\r\n\r\n    call.addEventListener(\"click\", openDefault);\r\n\r\n    copyTel.addEventListener(\"click\", copy);\r\n  }\r\n\r\n  // show the mailgo\r\n  showMailgo(type);\r\n\r\n  // add listener keyDown\r\n  document.addEventListener(\"keydown\", mailgoKeydown);\r\n\r\n  return true;\r\n}\r\n\r\n// actions\r\nconst openGmail = (event?: Event): void => {\r\n  event.preventDefault();\r\n\r\n  let urlString: string;\r\n  let installation: MailgoInstallationType = activeMailgoType?.installation;\r\n\r\n  if (installation === CLASSIC) {\r\n    try {\r\n      urlString = url.toString();\r\n    } catch (e) {\r\n      urlString = href;\r\n    }\r\n  } else if (installation === LESS_SPAM) {\r\n    urlString = lessSpamHref;\r\n  }\r\n\r\n  // Gmail url\r\n  let gmailUrl: string =\r\n    \"https://mail.google.com/mail/?extsrc=mailto&url=\" +\r\n    encodeURIComponent(urlString);\r\n\r\n  // open the link\r\n  window.open(gmailUrl, \"_blank\", \"noopener, noreferrer\");\r\n\r\n  // hide the modal\r\n  hideMailgo();\r\n};\r\n\r\nconst openOutlook = (event?: Event): void => {\r\n  event.preventDefault();\r\n\r\n  // Outlook starting url\r\n  let startingOutlookUrl: string =\r\n    \"https://outlook.live.com/owa/?path=/mail/action/compose&to=\";\r\n\r\n  // let the user to decide to open Office365 Outlook instead of the classic outlook.live.com\r\n  if (config?.office365) {\r\n    startingOutlookUrl =\r\n      \"https://outlook.office365.com/owa/?path=/mail/action/compose&to=\";\r\n  }\r\n\r\n  // Outlook url\r\n  let outlookUrl: string = startingOutlookUrl + encodeURIComponent(mail);\r\n\r\n  // the details if provided\r\n  if (subject) {\r\n    outlookUrl = outlookUrl.concat(\"&subject=\" + encodeURIComponent(subject));\r\n  }\r\n\r\n  if (bodyMail) {\r\n    outlookUrl = outlookUrl.concat(\"&body=\" + encodeURIComponent(bodyMail));\r\n  }\r\n\r\n  // open the link\r\n  window.open(outlookUrl, \"_blank\", \"noopener, noreferrer\");\r\n\r\n  // hide the modal\r\n  hideMailgo();\r\n};\r\n\r\nconst openYahooMail = (event?: Event): void => {\r\n  event.preventDefault();\r\n\r\n  // Yahoo url\r\n  let yahooUrl: string = \"https://compose.mail.yahoo.com/?to=\" + mail;\r\n\r\n  // the details if provided\r\n  if (subject) {\r\n    yahooUrl = yahooUrl.concat(\"&subject=\" + encodeURIComponent(subject));\r\n  }\r\n  if (bodyMail) {\r\n    yahooUrl = yahooUrl.concat(\"&body=\" + encodeURIComponent(bodyMail));\r\n  }\r\n\r\n  // open the link\r\n  window.open(yahooUrl, \"_blank\", \"noopener, noreferrer\");\r\n\r\n  // hide the modal\r\n  hideMailgo();\r\n};\r\n\r\nconst openTelegram = (event?: Event): void => {\r\n  event.preventDefault();\r\n\r\n  // check if telegramUsername exists\r\n  if (telegramUsername) {\r\n    // Telegram url\r\n    let tgUrl: string = \"https://t.me/\" + encodeURIComponent(telegramUsername);\r\n\r\n    // open the url\r\n    window.open(tgUrl, \"_blank\", \"noopener, noreferrer\");\r\n\r\n    // hide the modal\r\n    hideMailgo();\r\n  }\r\n};\r\n\r\nconst openSkype = (event?: Event): void => {\r\n  event.preventDefault();\r\n\r\n  let skype: string = skypeUsername || tel;\r\n\r\n  // Telegram url\r\n  let skypeUrl: string = \"skype:\" + encodeURIComponent(skype);\r\n\r\n  // open the url\r\n  window.open(skypeUrl, \"_blank\", \"noopener, noreferrer\");\r\n\r\n  // hide the modal\r\n  hideMailgo();\r\n};\r\n\r\nconst openWhatsApp = (event?: Event): void => {\r\n  event.preventDefault();\r\n\r\n  // WhatsApp API doesn't work with non number digits and leading 0s: https://faq.whatsapp.com/general/chats/how-to-use-click-to-chat/\r\n  let whatappTel = tel.replace(notNumber, \"\").replace(leadingZeros, \"\");\r\n\r\n  // WhatsApp url\r\n  let waUrl: string = \"https://wa.me/\" + encodeURIComponent(whatappTel);\r\n\r\n  // the details if provided\r\n  if (msg) {\r\n    waUrl = waUrl.concat(\"?text=\" + encodeURIComponent(msg));\r\n  }\r\n\r\n  // open the url\r\n  window.open(waUrl, \"_blank\", \"noopener, noreferrer\");\r\n\r\n  // hide the modal\r\n  hideMailgo();\r\n};\r\n\r\nconst openDefault = (event?: Event): void => {\r\n  event.preventDefault();\r\n\r\n  let installation: MailgoInstallationType = activeMailgoType?.installation;\r\n\r\n  // if the installation is classic the browser can follow the default behaviour\r\n  if (installation === CLASSIC) {\r\n    window.location.href = href;\r\n  } else if (installation === LESS_SPAM) {\r\n    // if the installation is less-spam use the built less-spam href\r\n    window.location.href = lessSpamHref;\r\n  }\r\n\r\n  hideMailgo();\r\n};\r\n\r\nconst copy = (event?: Event): void => {\r\n  event.preventDefault();\r\n\r\n  // the correct copyButton (mail or tel)\r\n  if (mailgoIsShowing()) {\r\n    let activeCopy: HTMLElement;\r\n\r\n    let type: MailgoModalType = activeMailgoType?.type;\r\n\r\n    if (type === MAILGO_MAIL) {\r\n      // in case it is showing mail modal copy email address\r\n      copyToClipboard(mail);\r\n      activeCopy = copyMail;\r\n    } else {\r\n      // in case it is showing tel modal copy phone number\r\n      copyToClipboard(tel);\r\n      activeCopy = copyTel;\r\n    }\r\n\r\n    activeCopy.textContent = strings.copied || defaultStrings.copied;\r\n    setTimeout(() => {\r\n      activeCopy.textContent = strings.copy || defaultStrings.copy;\r\n      // hide after the timeout\r\n      hideMailgo();\r\n    }, 999);\r\n  }\r\n};\r\n\r\n// function to find if a link is a mailto, tel, callto or sms\r\nconst validateUrl = (url: string, type: string = MAILTO) => {\r\n  let regexValidate = new RegExp(\"^\" + type + \"((.)+)\", \"gi\");\r\n  return regexValidate.test(url);\r\n};\r\n\r\n// function that returns if an element is a mailgo\r\nfunction getMailgoTypeByElement(element: HTMLElement): MailgoType | null {\r\n  let elementHref: string = (element as HTMLLinkElement).getAttribute(\"href\");\r\n\r\n  // return null if there is no-mailgo in class\r\n  if (element.classList?.contains(NO_MAILGO)) {\r\n    return null;\r\n  }\r\n\r\n  // the case of classic type of mailgo, like a href=mailto:... or a href=tel:... and the class=mailgo with a useful href\r\n  if (elementHref || element.classList?.contains(\"mailgo\")) {\r\n    if (validateUrl(elementHref, MAILTO) || validateUrl(elementHref, MAILGO)) {\r\n      // a mailto: or mailgo:\r\n      return {\r\n        type: MAILGO_MAIL,\r\n        installation: CLASSIC,\r\n      };\r\n    } else if (\r\n      validateUrl(elementHref, TEL) ||\r\n      validateUrl(elementHref, CALLTO)\r\n    ) {\r\n      // a tel: or callto:\r\n      return {\r\n        type: MAILGO_TEL,\r\n        installation: CLASSIC,\r\n      };\r\n    } else if (validateUrl(elementHref, SMS)) {\r\n      // a sms:\r\n      return {\r\n        type: MAILGO_SMS,\r\n        installation: CLASSIC,\r\n      };\r\n    }\r\n  }\r\n\r\n  if (elementHref === \"#mailgo\" || element.classList?.contains(\"mailgo\")) {\r\n    // less-spam installation of mailgo, check to the attributes\r\n    if (\r\n      element.hasAttribute(\"data-address\") &&\r\n      element.hasAttribute(\"data-domain\")\r\n    ) {\r\n      // less-spam mailto with data-address and data-domain\r\n      return {\r\n        type: MAILGO_MAIL,\r\n        installation: LESS_SPAM,\r\n      };\r\n    } else if (element.hasAttribute(\"data-tel\")) {\r\n      // less-spam tel with data-tel\r\n      return {\r\n        type: MAILGO_TEL,\r\n        installation: LESS_SPAM,\r\n      };\r\n    } else if (element.hasAttribute(\"data-msg\")) {\r\n      // less-spam sms with data-msd\r\n      return {\r\n        type: MAILGO_SMS,\r\n        installation: LESS_SPAM,\r\n      };\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * mailgoKeydown\r\n * function to manage the keydown event when the modal is showing, return a boolean that represents if a useful key has been pressed\r\n */\r\nconst mailgoKeydown = (keyboardEvent: KeyboardEvent): boolean => {\r\n  // if mailgo is showing\r\n  if (mailgoIsShowing()) {\r\n    let type: MailgoModalType = activeMailgoType?.type;\r\n\r\n    if (type === MAILGO_MAIL) {\r\n      switch (keyboardEvent.keyCode) {\r\n        case 27:\r\n          // Escape\r\n          hideMailgo();\r\n          return true;\r\n        case 71:\r\n          // g -> open GMail\r\n          openGmail();\r\n          return true;\r\n        case 79:\r\n          // o -> open Outlook\r\n          openOutlook();\r\n          return true;\r\n        case 89:\r\n          // y -> open Yahoo Mail\r\n          openYahooMail();\r\n          return true;\r\n        case 32:\r\n        case 13:\r\n          // spacebar or enter -> open default\r\n          openDefault();\r\n          return true;\r\n        case 67:\r\n          // c -> copy\r\n          copy();\r\n          return true;\r\n        default:\r\n          return false;\r\n      }\r\n    } else if (type === MAILGO_TEL) {\r\n      switch (keyboardEvent.keyCode) {\r\n        case 27:\r\n          // Escape\r\n          hideMailgo();\r\n          return true;\r\n        case 84:\r\n          // t -> open Telegram\r\n          openTelegram();\r\n          return true;\r\n        case 87:\r\n          // w -> open WhatsApp\r\n          openWhatsApp();\r\n          return true;\r\n        case 83:\r\n          // s -> open Skype\r\n          openSkype();\r\n          return true;\r\n        case 32:\r\n        case 13:\r\n          // spacebar or enter -> open default\r\n          openDefault();\r\n          return true;\r\n        case 67:\r\n          // c -> copy\r\n          copy();\r\n          return true;\r\n        default:\r\n          return false;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\n// show the modal\r\nconst showMailgo = (type: MailgoModalType): void => {\r\n  // show the correct modal\r\n  setModalDisplay(type, \"flex\");\r\n};\r\n\r\n// hide the modal\r\nconst hideMailgo = (): void => {\r\n  // hide all the modals\r\n  setModalDisplay(MAILGO_MAIL, \"none\");\r\n  setModalDisplay(MAILGO_TEL, \"none\");\r\n\r\n  // remove listener keyDown\r\n  document.removeEventListener(\"keydown\", mailgoKeydown);\r\n};\r\n\r\n// is the mailgo modal hidden?\r\nconst mailgoIsShowing = (): boolean => {\r\n  return (\r\n    (mailtoEnabled && getModalDisplay(MAILGO_MAIL) === \"flex\") ||\r\n    ((telEnabled || smsEnabled) && getModalDisplay(MAILGO_TEL) === \"flex\")\r\n  );\r\n};\r\n\r\nconst byElement = (): HTMLLinkElement => {\r\n  // by element in the footer\r\n  let by: HTMLLinkElement = createElement(aHTMLTag) as HTMLLinkElement;\r\n  by.href = \"https://mailgo.dev?ref=mailgo-modal\";\r\n  by.className = \"m-by\";\r\n  by.target = \"_blank\";\r\n  by.rel = \"noopener noreferrer\";\r\n  by.appendChild(createTextNode(\"mailgo.dev\"));\r\n\r\n  return by;\r\n};\r\n\r\n// create element\r\nconst createElement = (element: string = \"div\"): HTMLElement =>\r\n  document.createElement(element);\r\n\r\n// create text node\r\nconst createTextNode = (element: string): Text =>\r\n  document.createTextNode(element);\r\n\r\n// get the correct HTMLElement from a type\r\nconst getModalHTMLElement = (type: MailgoModalType = MAILGO_MAIL) => {\r\n  if (type === MAILGO_TEL) {\r\n    return modalTel;\r\n  } else {\r\n    return modalMailto;\r\n  }\r\n};\r\n\r\n// get display value\r\nconst getModalDisplay = (ref: MailgoModalType = MAILGO_MAIL): string =>\r\n  getModalHTMLElement(ref).style.display;\r\n\r\n// set display value\r\nconst setModalDisplay = (\r\n  ref: MailgoModalType = MAILGO_MAIL,\r\n  value: string\r\n): void => {\r\n  let modal = getModalHTMLElement(ref);\r\n\r\n  if (modal) {\r\n    modal.style.display = value;\r\n\r\n    if (value === \"flex\") {\r\n      // \"save\" the activated link.\r\n      activatedLink = document.activeElement as HTMLElement;\r\n      modal.setAttribute(\"aria-hidden\", \"false\");\r\n\r\n      // Focus on the modal container.\r\n      modal.setAttribute(\"tabindex\", \"0\");\r\n      modal.focus();\r\n      setFocusLoop(modal);\r\n    } else {\r\n      modal.setAttribute(\"aria-hidden\", \"true\");\r\n\r\n      // focus back the activated link for getting back to the context.\r\n      modal.setAttribute(\"tabindex\", \"-1\");\r\n      activatedLink.focus();\r\n    }\r\n  }\r\n};\r\n\r\n// enable dark mode\r\nconst enableDarkMode = () => {\r\n  // get the type from current mailgo type\r\n  let type: MailgoModalType = activeMailgoType?.type;\r\n  if (type) {\r\n    getModalHTMLElement(type).classList.add(\"m-dark\");\r\n  }\r\n};\r\n\r\n// disable dark mode\r\nconst disableDarkMode = () => {\r\n  // get the type from current mailgo type\r\n  let type: MailgoModalType = activeMailgoType?.type;\r\n  if (type) {\r\n    getModalHTMLElement(type).classList.remove(\"m-dark\");\r\n  }\r\n};\r\n\r\n// custom composedPath if path or event.composedPath() are not defined\r\nconst composedPath = (\r\n  el: HTMLElement\r\n): (HTMLElement | Document | (Window & typeof globalThis))[] => {\r\n  let path = [];\r\n\r\n  while (el) {\r\n    path.push(el);\r\n\r\n    if (el.tagName === \"HTML\") {\r\n      path.push(document);\r\n      path.push(window);\r\n      return path;\r\n    }\r\n\r\n    el = el.parentElement;\r\n  }\r\n};\r\n\r\n// function to recreate a mailto: or tel: href from less-spam\r\nconst buildLessSpamHref = (type: string, parameters: string[]): string => {\r\n  lessSpamHref = type;\r\n  if (parameters && parameters.length > 0) {\r\n    let joinedParams = parameters.join(\"&\");\r\n    lessSpamHref = lessSpamHref.concat(\"?\" + joinedParams);\r\n  }\r\n  return lessSpamHref;\r\n};\r\n\r\n// function to check an attribute is enabled or not, by default considering it enabled\r\nconst mailgoConfigAttributeEnabled = (\r\n  type: \"action\" | \"detail\",\r\n  attribute: MailgoAction | MailgoDetail\r\n): boolean => {\r\n  // by default all the actions and attribute are enabled\r\n  if (!config) {\r\n    return true;\r\n  }\r\n\r\n  // if the attribute type is action consider the actions config attribute\r\n  if (type === \"action\") {\r\n    if (config && !config?.actions) {\r\n      return true;\r\n    }\r\n\r\n    if (\r\n      config &&\r\n      config.actions &&\r\n      config?.actions[attribute as MailgoAction] === false\r\n    ) {\r\n      return false;\r\n    }\r\n  } else if (type === \"detail\") {\r\n    // else consider the details attribute\r\n\r\n    if (config && !config?.details) {\r\n      return true;\r\n    }\r\n\r\n    if (\r\n      config &&\r\n      config.details &&\r\n      config?.details[attribute as MailgoDetail] === false\r\n    ) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n// manage the language of mailgo\r\nconst mailgoSetLanguage = (): string => {\r\n  let languageType = \"default lang\";\r\n\r\n  // if a language is defined in configuration use it\r\n  if (\r\n    config?.lang &&\r\n    (languages as MailgoLanguages).indexOf(config.lang) !== -1\r\n  ) {\r\n    lang = config.lang;\r\n    languageType = \"config lang\";\r\n  } else {\r\n    // else if is defined <html lang=\"\"> use it!\r\n    // keep the lang from html\r\n    let htmlLang: string = document.documentElement.lang;\r\n\r\n    // find the correct language using the lang attribute, not just a === because there a are cases like fr-FR or fr_FR in html lang attribute\r\n    (languages as MailgoLanguages).forEach((language: any) => {\r\n      if (new RegExp(\"^\" + language, \"gi\").test(htmlLang)) {\r\n        lang = language;\r\n        languageType = \"html lang\";\r\n      }\r\n    });\r\n  }\r\n\r\n  // strings\r\n  strings = (translations as MailgoTranslations)[lang];\r\n\r\n  return languageType;\r\n};\r\n\r\nconst mailgoStyle = (): void => {\r\n  if (!document.getElementById(\"mailgo-style\")) {\r\n    // mailgo style\r\n    let mailgoCSSElement: HTMLStyleElement = createElement(\r\n      \"style\"\r\n    ) as HTMLStyleElement;\r\n    mailgoCSSElement.id = \"mailgo-style\";\r\n    mailgoCSSElement.type = \"text/css\";\r\n    mailgoCSSElement.appendChild(createTextNode(mailgoCSS));\r\n    document.head.appendChild(mailgoCSSElement);\r\n  }\r\n};\r\n\r\n// mailgo\r\nfunction mailgo(mailgoConfig?: MailgoConfig): boolean {\r\n  try {\r\n    // polyfill mailgo\r\n    // mailgoPolyfill();\r\n\r\n    // set the global config merging window mailgConfig and mailgoConfig passed as a parameter\r\n    config = { ...mailgoConfig, ...((window as any)?.mailgoConfig || null) };\r\n\r\n    // if the window is defined...\r\n    if (typeof window !== \"undefined\") {\r\n      // if is set in config use it (load the mailgo CSS)\r\n      if (typeof config?.loadCSS !== \"undefined\") {\r\n        loadCSSConfig = config.loadCSS;\r\n      }\r\n\r\n      // if is set in config use it (enable mailto)\r\n      if (typeof config?.mailto !== \"undefined\") {\r\n        mailtoEnabled = config.mailto;\r\n      }\r\n\r\n      // if is set in config use it (enable tel)\r\n      if (typeof config?.tel !== \"undefined\") {\r\n        telEnabled = config.tel;\r\n      }\r\n\r\n      // if is set in config use it (enable sms)\r\n      if (typeof config?.sms !== \"undefined\") {\r\n        smsEnabled = config.sms;\r\n      }\r\n\r\n      // if load css enabled load it!\r\n      if (loadCSSConfig) {\r\n        // add the style for mailgo\r\n        mailgoStyle();\r\n      }\r\n\r\n      // if is set an initEvent add the listener\r\n      if (config?.initEvent) {\r\n        if (config?.listenerOptions) {\r\n          // listener options specified\r\n          document.addEventListener(\r\n            config.initEvent,\r\n            mailgoInit,\r\n            config.listenerOptions\r\n          );\r\n        } else {\r\n          // no listener options\r\n          document.addEventListener(config.initEvent, mailgoInit);\r\n        }\r\n      } else {\r\n        mailgoInit();\r\n      }\r\n\r\n      return true;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  return false;\r\n}\r\n\r\n// define the methods also for window element\r\nif (typeof window !== \"undefined\") {\r\n  (window as any).getMailgoTypeByElement = getMailgoTypeByElement;\r\n  (window as any).mailgoClickListener = mailgoClickListener;\r\n  (window as any).mailgoCheckRender = mailgoClickListener; // for compatibility with old version of mailgo\r\n  (window as any).mailgoPreRender = mailgoPreRender;\r\n  (window as any).mailgoDirectRender = mailgoDirectRender;\r\n  (window as any).mailgoRender = mailgoRender;\r\n  (window as any).mailgo = mailgo;\r\n}\r\n\r\nexport {\r\n  getMailgoTypeByElement,\r\n  mailgoClickListener,\r\n  mailgoPreRender,\r\n  mailgoDirectRender,\r\n  mailgoRender,\r\n  validateEmail as mailgoValidateEmail,\r\n};\r\n\r\nexport default mailgo;\r\n","export const userAgent = () => {\r\n  if (\r\n    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n      navigator.userAgent\r\n    )\r\n  ) {\r\n    return \"mobile\";\r\n  }\r\n  return \"desktop\";\r\n};\r\n","// webpack > dist/mailgo.min.js\r\n\r\nimport mailgo from \"../src/mailgo\";\r\n\r\n// call init mailgo attached to the event DOMContentLoaded\r\nconst mailgoConfig = {\r\n  initEvent: \"DOMContentLoaded\",\r\n};\r\n\r\nmailgo(mailgoConfig);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(474);\n"],"sourceRoot":""}