{"version":3,"sources":["webpack://mailgo/../src/constants.ts","webpack://mailgo/../src/mobile-detect.ts","webpack://mailgo/../src/utils.ts","webpack://mailgo/../src/mailgo.scss","webpack://mailgo/../node_modules/css-loader/dist/runtime/api.js","webpack://mailgo/../src/mailgo.scss?81f2","webpack://mailgo/../src/mailgo.ts","webpack://mailgo/./mailgo.chrome.ts","webpack://mailgo/webpack/bootstrap","webpack://mailgo/webpack/startup","webpack://mailgo/webpack/runtime/define property getters","webpack://mailgo/webpack/runtime/hasOwnProperty shorthand","webpack://mailgo/webpack/runtime/make namespace object"],"names":["MAILTO","MAILGO","TEL","CALLTO","SMS","outlookDeepLink","NO_MAILGO","DESKTOP","MOBILE","MAILGO_MAIL","MAILGO_TEL","MAILGO_SMS","CLASSIC","LESS_SPAM","spanHTMLTag","aHTMLTag","pHTMLTag","defaultLang","userAgent","test","navigator","validateEmail","email","validateEmails","arr","every","validateTel","tel","copyToClipboard","str","el","document","createElement","value","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","setFocusLoop","ref","modal","querySelector","addEventListener","leaveLastLink","leaveFirstLink","e","code","shiftKey","preventDefault","target","closest","focus","___CSS_LOADER_EXPORT___","___CSS_LOADER_API_IMPORT___","i","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","concat","join","modules","mediaQuery","dedupe","alreadyImportedModules","length","_i","result","strings","config","activeMailgoType","modalMailto","modalTel","url","href","lessSpamHref","mail","cc","bcc","subject","bodyMail","msg","telegramUsername","skypeUsername","title","titleTel","detailCc","detailBcc","detailSubject","detailBody","detailMsg","ccValue","bccValue","subjectValue","bodyValue","msgValue","activatedLink","gmail","outlook","yahoo","open","telegram","wa","skype","call","copyMail","copyTel","require","languages","translations","mailgoCSS","lang","defaultStrings","isMobile","mailtoEnabled","telEnabled","smsEnabled","desktopEnabled","mobileEnabled","validateEmailConfig","validateTelConfig","showFooterConfig","loadCSSConfig","mailgoInit","mailgoExists","getElementById","desktop","mobile","display","classList","add","mailgoSetLanguage","dark","enableDarkMode","disableDarkMode","modalBackground","className","modalContent","details","ccSpan","createTextNode","cc_","bccSpan","bcc_","subjectSpan","subject_","bodySpan","body_","open_in_","gmailSpan","mailgoActionEnabled","outlookSpan","yahooSpan","openSpan","_default","copy","showFooter","byElement","hideMailgo","detailsTel","msgSpan","telegramSpan","waSpan","whatsapp","skypeSpan","callSpan","_as_default","mailgoCheckRender","event","contains","mailgoIsShowing","path","composedPath","forEach","element","HTMLDocument","Window","localMailgoType","getMailgoTypeByElement","activeMailgoModalType","type","mailgoPreRender","mailgoElementOrUrl","mailgoElement","installation","validateUrl","decodeURIComponent","split","trim","urlParams","URL","searchParams","get","error","getAttribute","encodeURIComponent","parameters","buildLessSpamHref","console","log","hasAttribute","mailgoRender","innerHTML","textContent","openGmail","openOutlook","openYahooMail","openDefault","openWhatsApp","openTelegram","openSkype","showMailgo","mailgoKeydown","urlString","gmailUrl","window","outlookUrl","yahooUrl","tgUrl","skypeUrl","waUrl","location","activeCopy","copied","setTimeout","regexValidate","RegExp","elementHref","keyboardEvent","keyCode","setModalDisplay","removeEventListener","getModalDisplay","by","rel","getModalHTMLElement","activeElement","remove","tagName","parentElement","joinedParams","action","actions","languageType","indexOf","htmlLang","documentElement","language","mailgo","mailgoConfig","loadCSS","mailto","sms","mailgoCSSElement","head","mailgoStyle","initEvent","listenerOptions","mailgoDirectRender","directUrl","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","r","Symbol","toStringTag"],"mappings":"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","file":"mailgo.chrome.min.js","sourcesContent":["import { MailgoModalType, MailgoInstallationType } from \"mailgo\";\n\n// links\nexport const MAILTO: string = \"mailto:\";\nexport const MAILGO: string = \"mailgo:\";\nexport const TEL: string = \"tel:\";\nexport const CALLTO: string = \"callto:\";\nexport const SMS: string = \"sms:\";\n\n// deep linking\nexport const outlookDeepLink: string = \"ms-outlook://\";\n\n// no mailgo class\nexport const NO_MAILGO: string = \"no-mailgo\";\n\n// responsive settings\nexport const DESKTOP: string = \"desktop\";\nexport const MOBILE: string = \"mobile\";\n\n// mailgo modal types\nexport const MAILGO_MAIL: MailgoModalType = \"mailgo\";\nexport const MAILGO_TEL: MailgoModalType = \"mailgo-tel\";\nexport const MAILGO_SMS: MailgoModalType = \"mailgo-sms\";\n\n// mailgo installation types\nexport const CLASSIC: MailgoInstallationType = \"classic\";\nexport const LESS_SPAM: MailgoInstallationType = \"less-spam\";\n\n// useful html tags\nexport const spanHTMLTag: string = \"span\";\nexport const aHTMLTag: string = \"a\";\nexport const pHTMLTag: string = \"p\";\n\n// default lang\nexport const defaultLang: string = \"en\";\n","export const userAgent = () => {\n  if (\n    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n      navigator.userAgent\n    )\n  ) {\n    return \"mobile\";\n  }\n  return \"desktop\";\n};\n","// validate a single email with regex\nexport const validateEmail = (email: string): boolean =>\n  /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n    email\n  );\n\n// validate an array of emails\nexport const validateEmails = (arr: string[]): boolean =>\n  arr.every(validateEmail);\n\n// validate a single tel with regex\nexport const validateTel = (tel: string): boolean =>\n  /^[+]{0,1}[\\s0-9]{0,}[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/.test(tel);\n\n// copy of a string\nexport const copyToClipboard = (str: string): boolean => {\n  let el: HTMLTextAreaElement = document.createElement(\n    \"textarea\"\n  ) as HTMLTextAreaElement;\n  el.value = str;\n  el.setAttribute(\"readonly\", \"\");\n  el.style.position = \"absolute\";\n  el.style.left = \"-9999px\";\n  document.body.appendChild(el);\n  let selected: Range | boolean =\n    document.getSelection().rangeCount > 0\n      ? document.getSelection().getRangeAt(0)\n      : false;\n  el.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(el);\n  if (selected) {\n    document.getSelection().removeAllRanges();\n    document.getSelection().addRange(selected);\n    return true;\n  }\n  return false;\n};\n\n// set focus loop within modal\nexport const setFocusLoop = (ref: HTMLElement): void => {\n  let modal = ref;\n  modal\n    .querySelector(\".m-modal-content a:last-of-type\")\n    .addEventListener(\"keydown\", leaveLastLink);\n  modal\n    .querySelector(\".m-modal-content a:first-of-type\")\n    .addEventListener(\"keydown\", leaveFirstLink);\n};\n\nexport const leaveLastLink = (e: KeyboardEvent): void => {\n  // going back to the first link to force looping\n  if (e.code === \"Tab\" && e.shiftKey === false) {\n    e.preventDefault();\n\n    ((e.target as HTMLElement)\n      .closest(\"div\")\n      .querySelector(\"a:first-of-type\") as HTMLElement).focus();\n  }\n};\n\nexport const leaveFirstLink = (e: KeyboardEvent): void => {\n  // going back to the first link to force looping\n  if (e.code === \"Tab\" && e.shiftKey === true) {\n    e.preventDefault();\n    ((e.target as HTMLElement)\n      .closest(\"div\")\n      .querySelector(\"a:last-of-type\") as HTMLElement).focus();\n  }\n};\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".m-modal{position:fixed;top:0;right:0;bottom:0;left:0;justify-content:center;align-items:center;flex-direction:column;overflow:hidden;font-size:16.5px;z-index:10000}.m-modal p,.m-modal span,.m-modal strong,.m-modal a{margin:0;padding:0;font-size:100%;line-height:1;font-family:-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,Helvetica,Arial,sans-serif,\\\"Apple Color Emoji\\\",\\\"Segoe UI Emoji\\\",\\\"Segoe UI Symbol\\\";text-rendering:optimizeLegibility}.m-modal strong{font-weight:700}.m-modal .m-modal-back{position:absolute;z-index:10001;top:0;right:0;bottom:0;left:0;background-color:#20232a;opacity:0.8}.m-modal .m-modal-content{position:relative;z-index:10002;box-sizing:content-box;text-align:center;min-width:200px;max-width:240px;background-color:#fff;opacity:0.95;border-radius:20px;box-shadow:0 3px 20px rgba(32,35,42,0.5);color:#4a4a4a;display:flex;flex-direction:column;overflow:auto;padding:24px;transition:0.5s box-shadow}.m-modal .m-modal-content:hover,.m-modal .m-modal-content:focus,.m-modal .m-modal-content:active{opacity:1}.m-modal .m-modal-content .m-title{margin-bottom:8px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;line-height:1.2em}.m-modal .m-modal-content .m-details{margin-bottom:10px}.m-modal .m-modal-content .m-details p{font-size:12px;margin-top:3px;margin-bottom:3px}.m-modal .m-modal-content a{cursor:pointer;padding:10px;color:#4a4a4a;border-radius:20px;text-decoration:none}.m-modal .m-modal-content a.m-gmail{color:#c0372a}.m-modal .m-modal-content a.m-gmail:hover,.m-modal .m-modal-content a.m-gmail:focus,.m-modal .m-modal-content a.m-gmail:active{background-color:rgba(192,55,42,0.08);color:#c0372a}.m-modal .m-modal-content a.m-outlook{color:#0967aa}.m-modal .m-modal-content a.m-outlook:hover,.m-modal .m-modal-content a.m-outlook:focus,.m-modal .m-modal-content a.m-outlook:active{background-color:rgba(9,103,170,0.08);color:#0967aa}.m-modal .m-modal-content a.m-yahoo{color:#4a00a0}.m-modal .m-modal-content a.m-yahoo:hover,.m-modal .m-modal-content a.m-yahoo:focus,.m-modal .m-modal-content a.m-yahoo:active{background-color:rgba(74,0,160,0.08);color:#4a00a0}.m-modal .m-modal-content a.m-tg{color:#086da0}.m-modal .m-modal-content a.m-tg:hover,.m-modal .m-modal-content a.m-tg:focus,.m-modal .m-modal-content a.m-tg:active{background-color:rgba(8,109,160,0.08);color:#086da0}.m-modal .m-modal-content a.m-wa{color:#067466}.m-modal .m-modal-content a.m-wa:hover,.m-modal .m-modal-content a.m-wa:focus,.m-modal .m-modal-content a.m-wa:active{background-color:rgba(6,116,102,0.08);color:#067466}.m-modal .m-modal-content a.m-skype{color:#076d92}.m-modal .m-modal-content a.m-skype:hover,.m-modal .m-modal-content a.m-skype:focus,.m-modal .m-modal-content a.m-skype:active{background-color:rgba(7,109,146,0.08);color:#076d92}.m-modal .m-modal-content a.m-copy{padding:16px 10px;font-size:16px}.m-modal .m-modal-content a.m-default:hover,.m-modal .m-modal-content a.m-default:focus,.m-modal .m-modal-content a.m-default:active,.m-modal .m-modal-content a.m-copy:hover,.m-modal .m-modal-content a.m-copy:focus,.m-modal .m-modal-content a.m-copy:active{background-color:rgba(0,0,0,0.08);color:#4a4a4a}.m-modal .m-modal-content a.m-by{font-size:12px;margin-top:0.8rem;padding:5px;color:#4a4a4a}.m-modal .m-modal-content a.m-by:hover,.m-modal .m-modal-content a.m-by:focus,.m-modal .m-modal-content a.m-by:active{color:#3d3d3d}.m-modal .m-modal-content .w-500{font-weight:500}.m-modal.m-dark .m-modal-content{background-color:#20232a}.m-modal.m-dark .m-modal-content,.m-modal.m-dark .m-modal-content p,.m-modal.m-dark .m-modal-content p span,.m-modal.m-dark .m-modal-content strong{color:#fff}.m-modal.m-dark .m-modal-content a{color:#eaeaea}.m-modal.m-dark .m-modal-content a:not(.m-by):hover,.m-modal.m-dark .m-modal-content a:not(.m-by):focus,.m-modal.m-dark .m-modal-content a:not(.m-by):active{background-color:rgba(134,134,134,0.08);color:#eaeaea}.m-modal.m-dark .m-modal-content a.m-gmail{color:#e07d73}.m-modal.m-dark .m-modal-content a.m-gmail:hover,.m-modal.m-dark .m-modal-content a.m-gmail:focus,.m-modal.m-dark .m-modal-content a.m-gmail:active{background-color:rgba(224,125,115,0.08);color:#e07d73}.m-modal.m-dark .m-modal-content a.m-outlook{color:#4c9cd7}.m-modal.m-dark .m-modal-content a.m-outlook:hover,.m-modal.m-dark .m-modal-content a.m-outlook:focus,.m-modal.m-dark .m-modal-content a.m-outlook:active{background-color:rgba(76,156,215,0.08);color:#4c9cd7}.m-modal.m-dark .m-modal-content a.m-yahoo{color:#ac88d3}.m-modal.m-dark .m-modal-content a.m-yahoo:hover,.m-modal.m-dark .m-modal-content a.m-yahoo:focus,.m-modal.m-dark .m-modal-content a.m-yahoo:active{background-color:rgba(172,136,211,0.08);color:#ac88d3}.m-modal.m-dark .m-modal-content a.m-tg{color:#4cabdb}.m-modal.m-dark .m-modal-content a.m-tg:hover,.m-modal.m-dark .m-modal-content a.m-tg:focus,.m-modal.m-dark .m-modal-content a.m-tg:active{background-color:rgba(76,171,219,0.08);color:#4cabdb}.m-modal.m-dark .m-modal-content a.m-wa{color:#4cd2c0}.m-modal.m-dark .m-modal-content a.m-wa:hover,.m-modal.m-dark .m-modal-content a.m-wa:focus,.m-modal.m-dark .m-modal-content a.m-wa:active{background-color:rgba(76,210,192,0.08);color:#4cd2c0}.m-modal.m-dark .m-modal-content a.m-skype{color:#4cc7f4}.m-modal.m-dark .m-modal-content a.m-skype:hover,.m-modal.m-dark .m-modal-content a.m-skype:focus,.m-modal.m-dark .m-modal-content a.m-skype:active{background-color:rgba(76,199,244,0.08);color:#4cc7f4}.m-modal.m-dark .m-modal-content a.m-by:hover,.m-modal.m-dark .m-modal-content a.m-by:focus,.m-modal.m-dark .m-modal-content a.m-by:active{color:#fff}\\n\", \"\"]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\n        var result = require(\"!!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../node_modules/sass-loader/dist/cjs.js!./mailgo.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","import {\n  MailgoConfig,\n  MailgoTranslations,\n  MailgoTranslation,\n  MailgoAction,\n  MailgoModalType,\n  MailgoLanguages,\n  MailgoType,\n} from \"mailgo\";\nimport { CLASSIC, LESS_SPAM } from \"./constants\";\n\n// polyfill\n// const { mailgoPolyfill } = require(\"./polyfill\");\n\n// constants\nconst {\n  MAILTO,\n  MAILGO,\n  TEL,\n  CALLTO,\n  SMS,\n  MAILGO_MAIL,\n  MAILGO_TEL,\n  MAILGO_SMS,\n  NO_MAILGO,\n  MOBILE,\n  spanHTMLTag,\n  aHTMLTag,\n  pHTMLTag,\n  defaultLang,\n} = require(\"./constants\");\n\n// utils\nconst {\n  validateEmails,\n  validateTel,\n  copyToClipboard,\n  setFocusLoop,\n} = require(\"./utils\");\n\n// i18n for mailgo\nconst languages: MailgoLanguages = require(\"../i18n/languages.json\");\nconst translations: MailgoTranslations = require(\"../i18n/translations.json\");\n\n// mobile detect\nconst { userAgent } = require(\"./mobile-detect\");\n\n// mailgo scss\nconst mailgoCSS: string = require(\"./mailgo.scss\").toString();\n\n// default language\nlet lang: string = defaultLang;\n\n// default strings\nconst defaultStrings: MailgoTranslation = translations[defaultLang];\n\n// translation strings\nlet strings: MailgoTranslation;\n\n// global mailgo config object\nlet config: MailgoConfig;\n\n// config to check if the client is mobile or desktop\nlet isMobile: boolean = false;\n\n// default config attributes\nlet mailtoEnabled: boolean = true;\nlet telEnabled: boolean = true;\nlet smsEnabled: boolean = false;\nlet desktopEnabled: boolean = true;\nlet mobileEnabled: boolean = true;\nlet validateEmailConfig: boolean = true;\nlet validateTelConfig: boolean = true;\nlet showFooterConfig: boolean = true;\nlet loadCSSConfig: boolean = true;\n\n// activeMailgoType\nlet activeMailgoType: MailgoType;\n\n// modals global object\nlet modalMailto: HTMLElement, modalTel: HTMLElement;\n\n// mailgo general variables\nlet url: URL, href: string, lessSpamHref: string;\n\n// mailgo mail variables\nlet mail: string, cc: string, bcc: string, subject: string, bodyMail: string;\n\n// mailgo tel variables\nlet tel: string, msg: string, telegramUsername: string, skypeUsername: string;\n\n// the DOM elements\nlet title: HTMLElement,\n  titleTel: HTMLElement,\n  detailCc: HTMLElement,\n  detailBcc: HTMLElement,\n  detailSubject: HTMLElement,\n  detailBody: HTMLElement,\n  detailMsg: HTMLElement,\n  ccValue: HTMLElement,\n  bccValue: HTMLElement,\n  subjectValue: HTMLElement,\n  bodyValue: HTMLElement,\n  msgValue: HTMLElement,\n  activatedLink: HTMLElement;\n\n// mailgo buttons (actions)\nlet gmail: HTMLLinkElement,\n  outlook: HTMLLinkElement,\n  yahoo: HTMLLinkElement,\n  open: HTMLLinkElement,\n  telegram: HTMLLinkElement,\n  wa: HTMLLinkElement,\n  skype: HTMLLinkElement,\n  call: HTMLLinkElement,\n  copyMail: HTMLLinkElement,\n  copyTel: HTMLLinkElement;\n\n/**\n * mailgoInit\n * the function that creates the mailgo elements in DOM\n */\nconst mailgoInit = (): void => {\n  // mailgo, if mailgo not already exists\n  let mailgoExists = !!document.getElementById(MAILGO_MAIL);\n\n  // set the boolean for mobile/desktop\n  isMobile = userAgent() === MOBILE;\n\n  // responsive settings\n  {\n    if (typeof config?.desktop !== \"undefined\") {\n      desktopEnabled = config.desktop;\n      // if it is a desktop and desktop is not enabled no init mailgo\n      if (!isMobile && !desktopEnabled) {\n        return;\n      }\n    }\n    if (typeof config?.mobile !== \"undefined\") {\n      mobileEnabled = config.mobile;\n      // if it is a desktop and desktop is not enabled no init mailgo\n      if (isMobile && !mobileEnabled) {\n        return;\n      }\n    }\n  }\n\n  if (!mailgoExists) {\n    // modal\n    modalMailto = createElement() as HTMLElement;\n    modalMailto.style.display = \"none\";\n    modalMailto.id = MAILGO_MAIL;\n    modalMailto.classList.add(\"m-modal\");\n    modalMailto.setAttribute(\"role\", \"dialog\");\n    modalMailto.setAttribute(\"tabindex\", \"-1\");\n    modalMailto.setAttribute(\"aria-labelledby\", \"m-title\");\n\n    // set the mailgo language\n    mailgoSetLanguage();\n\n    // if dark is in config\n    if (config?.dark) {\n      enableDarkMode();\n    } else {\n      disableDarkMode();\n    }\n\n    // background\n    let modalBackground: HTMLElement = createElement();\n    modalBackground.className = \"m-modal-back\";\n    modalMailto.appendChild(modalBackground);\n\n    // modal content\n    let modalContent: HTMLElement = createElement();\n    modalContent.className = \"m-modal-content\";\n    modalMailto.appendChild(modalContent);\n\n    // title (email address)\n    title = createElement(\"strong\");\n    title.id = \"m-title\";\n    title.className = \"m-title\";\n    modalContent.appendChild(title);\n\n    // details\n    let details: HTMLElement = createElement();\n    details.id = \"m-details\";\n    details.className = \"m-details\";\n\n    detailCc = createElement(pHTMLTag);\n    detailCc.id = \"m-cc\";\n    let ccSpan: HTMLElement = createElement(spanHTMLTag);\n    ccSpan.className = \"w-500\";\n    ccSpan.appendChild(createTextNode(strings.cc_ || defaultStrings.cc_));\n    ccValue = createElement(spanHTMLTag);\n    ccValue.id = \"m-cc-value\";\n    detailCc.appendChild(ccSpan);\n    detailCc.appendChild(ccValue);\n    details.appendChild(detailCc);\n\n    detailBcc = createElement(pHTMLTag);\n    detailBcc.id = \"m-bcc\";\n    let bccSpan: HTMLElement = createElement(spanHTMLTag);\n    bccSpan.className = \"w-500\";\n    bccSpan.appendChild(createTextNode(strings.bcc_ || defaultStrings.bcc_));\n    bccValue = createElement(spanHTMLTag);\n    bccValue.id = \"m-bcc-value\";\n    detailBcc.appendChild(bccSpan);\n    detailBcc.appendChild(bccValue);\n    details.appendChild(detailBcc);\n\n    detailSubject = createElement(pHTMLTag);\n    detailSubject.id = \"m-subject\";\n    let subjectSpan: HTMLElement = createElement(spanHTMLTag);\n    subjectSpan.className = \"w-500\";\n    subjectSpan.appendChild(\n      createTextNode(strings.subject_ || defaultStrings.subject_)\n    );\n    subjectValue = createElement(spanHTMLTag);\n    subjectValue.id = \"m-subject-value\";\n    detailSubject.appendChild(subjectSpan);\n    detailSubject.appendChild(subjectValue);\n    details.appendChild(detailSubject);\n\n    detailBody = createElement(pHTMLTag);\n    detailBody.id = \"m-body\";\n    let bodySpan: HTMLElement = createElement(spanHTMLTag);\n    bodySpan.className = \"w-500\";\n    bodySpan.appendChild(createTextNode(strings.body_ || defaultStrings.body_));\n    bodyValue = createElement(spanHTMLTag);\n    bodyValue.id = \"m-body-value\";\n    detailBody.appendChild(bodySpan);\n    detailBody.appendChild(bodyValue);\n    details.appendChild(detailBody);\n\n    modalContent.appendChild(details);\n\n    // Gmail\n    gmail = createElement(aHTMLTag) as HTMLLinkElement;\n    gmail.id = \"m-gmail\";\n    gmail.href = \"#mailgo-gmail\";\n    gmail.classList.add(\"m-open\");\n    gmail.classList.add(\"m-gmail\");\n    gmail.appendChild(\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\n    );\n    let gmailSpan: HTMLElement = createElement(spanHTMLTag);\n    gmailSpan.className = \"w-500\";\n    gmailSpan.appendChild(\n      createTextNode(strings.gmail || defaultStrings.gmail)\n    );\n    gmail.appendChild(gmailSpan);\n\n    if (mailgoActionEnabled(\"gmail\")) modalContent.appendChild(gmail);\n\n    // Outlook\n    outlook = createElement(aHTMLTag) as HTMLLinkElement;\n    outlook.id = \"m-outlook\";\n    outlook.href = \"#mailgo-outlook\";\n    outlook.classList.add(\"m-open\");\n    outlook.classList.add(\"m-outlook\");\n    outlook.appendChild(\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\n    );\n    let outlookSpan: HTMLElement = createElement(spanHTMLTag);\n    outlookSpan.className = \"w-500\";\n    outlookSpan.appendChild(\n      createTextNode(strings.outlook || defaultStrings.outlook)\n    );\n    outlook.appendChild(outlookSpan);\n\n    if (mailgoActionEnabled(\"outlook\")) {\n      modalContent.appendChild(outlook);\n    }\n\n    // Outlook\n    yahoo = createElement(aHTMLTag) as HTMLLinkElement;\n    yahoo.id = \"m-yahoo\";\n    yahoo.href = \"#mailgo-yahoo\";\n    yahoo.classList.add(\"m-open\");\n    yahoo.classList.add(\"m-yahoo\");\n    yahoo.appendChild(\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\n    );\n    let yahooSpan: HTMLElement = createElement(spanHTMLTag);\n    yahooSpan.className = \"w-500\";\n    yahooSpan.appendChild(\n      createTextNode(strings.yahoo || defaultStrings.yahoo)\n    );\n    yahoo.appendChild(yahooSpan);\n\n    if (mailgoActionEnabled(\"yahoo\")) {\n      modalContent.appendChild(yahoo);\n    }\n\n    // open default\n    open = createElement(aHTMLTag) as HTMLLinkElement;\n    open.id = \"m-open\";\n    open.href = \"#mailgo-open\";\n    open.classList.add(\"m-open\");\n    open.classList.add(\"m-default\");\n    let openSpan: HTMLElement = createElement(spanHTMLTag);\n    openSpan.className = \"w-500\";\n    openSpan.appendChild(createTextNode(strings.open || defaultStrings.open));\n    open.appendChild(openSpan);\n    open.appendChild(\n      createTextNode(strings._default || defaultStrings._default)\n    );\n\n    modalContent.appendChild(open);\n\n    // copy\n    copyMail = createElement(aHTMLTag) as HTMLLinkElement;\n    copyMail.id = \"m-copy\";\n    copyMail.href = \"#mailgo-copy\";\n    copyMail.classList.add(\"m-copy\");\n    copyMail.classList.add(\"w-500\");\n    copyMail.appendChild(createTextNode(strings.copy || defaultStrings.copy));\n\n    modalContent.appendChild(copyMail);\n\n    // hide mailgo.dev in footer only if showFooter is defined and equal to false\n    if (typeof config?.showFooter !== \"undefined\") {\n      showFooterConfig = config.showFooter;\n    }\n\n    if (showFooterConfig) {\n      modalContent.appendChild(byElement());\n    }\n\n    // add the modal at the end of the body\n    document.body.appendChild(modalMailto);\n\n    // every click outside the modal will hide the modal\n    modalBackground.addEventListener(\"click\", hideMailgo);\n  }\n\n  // mailgo tel, if mailgo-tel not already exists\n  let mailgoTelExists = !!document.getElementById(MAILGO_TEL);\n\n  if (!mailgoTelExists) {\n    // modal\n    modalTel = createElement() as HTMLElement;\n    modalTel.style.display = \"none\";\n    modalTel.id = MAILGO_TEL;\n    modalTel.classList.add(\"m-modal\");\n    modalTel.setAttribute(\"role\", \"dialog\");\n    modalTel.setAttribute(\"tabindex\", \"-1\");\n    modalTel.setAttribute(\"aria-labelledby\", \"m-tel-title\");\n\n    // if dark is in config\n    if (config?.dark) {\n      enableDarkMode();\n    } else {\n      disableDarkMode();\n    }\n\n    // background\n    let modalBackground: HTMLElement = createElement();\n    modalBackground.className = \"m-modal-back\";\n    modalTel.appendChild(modalBackground);\n\n    // modal content\n    let modalContent: HTMLElement = createElement();\n    modalContent.className = \"m-modal-content\";\n    modalTel.appendChild(modalContent);\n\n    // title (telephone number)\n    titleTel = createElement(\"strong\");\n    titleTel.id = \"m-tel-title\";\n    titleTel.className = \"m-title\";\n    modalContent.appendChild(titleTel);\n\n    // details\n    let detailsTel: HTMLElement = createElement();\n    detailsTel.id = \"m-tel-details\";\n    detailsTel.className = \"m-details\";\n\n    detailMsg = createElement(pHTMLTag);\n    detailMsg.id = \"m-msg\";\n    let msgSpan: HTMLElement = createElement(spanHTMLTag);\n    msgSpan.className = \"w-500\";\n    msgSpan.appendChild(createTextNode(strings.body_ || defaultStrings.body_));\n    msgValue = createElement(spanHTMLTag);\n    msgValue.id = \"m-msg-value\";\n    detailMsg.appendChild(msgSpan);\n    detailMsg.appendChild(msgValue);\n    detailsTel.appendChild(detailMsg);\n\n    modalContent.appendChild(detailsTel);\n\n    // Telegram\n    telegram = createElement(aHTMLTag) as HTMLLinkElement;\n    telegram.id = \"m-tg\";\n    telegram.href = \"#mailgo-telegram\";\n    telegram.classList.add(\"m-open\");\n    telegram.classList.add(\"m-tg\");\n\n    // by default not display\n    telegram.style.display = \"none\";\n\n    telegram.appendChild(\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\n    );\n    let telegramSpan: HTMLElement = createElement(spanHTMLTag);\n    telegramSpan.className = \"w-500\";\n    telegramSpan.appendChild(\n      createTextNode(strings.telegram || defaultStrings.telegram)\n    );\n    telegram.appendChild(telegramSpan);\n\n    if (mailgoActionEnabled(\"telegram\")) {\n      modalContent.appendChild(telegram);\n    }\n\n    // WhatsApp\n    wa = createElement(aHTMLTag) as HTMLLinkElement;\n    wa.id = \"m-wa\";\n    wa.href = \"#mailgo-whatsapp\";\n    wa.classList.add(\"m-open\");\n    wa.classList.add(\"m-wa\");\n    wa.appendChild(createTextNode(strings.open_in_ || defaultStrings.open_in_));\n    let waSpan: HTMLElement = createElement(spanHTMLTag);\n    waSpan.className = \"w-500\";\n    waSpan.appendChild(\n      createTextNode(strings.whatsapp || defaultStrings.whatsapp)\n    );\n    wa.appendChild(waSpan);\n\n    if (mailgoActionEnabled(\"whatsapp\")) {\n      modalContent.appendChild(wa);\n    }\n\n    // Skype\n    skype = createElement(aHTMLTag) as HTMLLinkElement;\n    skype.id = \"m-skype\";\n    skype.href = \"#mailgo-skype\";\n    skype.classList.add(\"m-open\");\n    skype.classList.add(\"m-skype\");\n    skype.appendChild(\n      createTextNode(strings.open_in_ || defaultStrings.open_in_)\n    );\n    let skypeSpan: HTMLElement = createElement(spanHTMLTag);\n    skypeSpan.className = \"w-500\";\n    skypeSpan.appendChild(\n      createTextNode(strings.skype || defaultStrings.skype)\n    );\n    skype.appendChild(skypeSpan);\n\n    if (mailgoActionEnabled(\"skype\")) {\n      modalContent.appendChild(skype);\n    }\n\n    // call default\n    call = createElement(aHTMLTag) as HTMLLinkElement;\n    call.id = \"m-call\";\n    call.href = \"#mailgo-open\";\n    call.classList.add(\"m-open\");\n    call.classList.add(\"m-default\");\n    let callSpan: HTMLElement = createElement(spanHTMLTag);\n    callSpan.className = \"w-500\";\n    callSpan.appendChild(createTextNode(strings.call || defaultStrings.call));\n    call.appendChild(callSpan);\n    call.appendChild(\n      createTextNode(strings._as_default || defaultStrings._as_default)\n    );\n\n    modalContent.appendChild(call);\n\n    // copy\n    copyTel = createElement(aHTMLTag) as HTMLLinkElement;\n    copyTel.id = \"m-tel-copy\";\n    copyTel.href = \"#mailgo-copy\";\n    copyTel.classList.add(\"m-copy\");\n    copyTel.classList.add(\"w-500\");\n    copyTel.appendChild(createTextNode(strings.copy || defaultStrings.copy));\n\n    modalContent.appendChild(copyTel);\n\n    // hide mailgo.dev in footer only if showFooter is defined and equal to false\n    if (typeof config?.showFooter !== \"undefined\") {\n      showFooterConfig = config.showFooter;\n    }\n\n    if (showFooterConfig) {\n      modalContent.appendChild(byElement());\n    }\n\n    // add the modal at the end of the body\n    document.body.appendChild(modalTel);\n\n    // every click outside the modal will hide the modal\n    modalBackground.addEventListener(\"click\", hideMailgo);\n  }\n\n  // event listener on body, if the element is mailgo-compatible the mailgo modal will be rendered\n  document.addEventListener(\"click\", mailgoCheckRender);\n};\n\n/**\n * mailgoCheckRender\n * function to check if an element is mailgo-enabled or not referencing to\n * mail:\n * document.querySelectorAll(\n *   'a[href^=\"mailto:\" i]:not(.no-mailgo), a[href=\"#mailgo\"], a.mailgo'\n * );\n * tel:\n * document.querySelectorAll(\n *   'a[href^=\"tel:\" i]:not(.no-mailgo), a[href=\"#mailgo\"], a.mailgo'\n * );\n * or\n * document.querySelectorAll(\n *   'a[href^=\"callto:\" i]:not(.no-mailgo), a[href=\"#mailgo\"], a.mailgo'\n * );\n * or\n * document.querySelectorAll(\n *   'a[href^=\"sms:\" i]:not(.no-mailgo), a[href=\"#mailgo\"], a.mailgo'\n * );\n */\nfunction mailgoCheckRender(event: Event): boolean {\n  // check if the mailgo HTML exists in the body\n  if (\n    !document.body.contains(modalMailto) ||\n    !document.body.contains(modalTel)\n  ) {\n    return false;\n  }\n\n  // if a mailgo is already showing do nothing\n  if (mailgoIsShowing()) {\n    return false;\n  }\n\n  // the path of the event\n  let path =\n    (event.composedPath && event.composedPath()) ||\n    composedPath(event.target as HTMLElement);\n\n  if (path) {\n    path.forEach((element: HTMLElement) => {\n      if (element instanceof HTMLDocument || element instanceof Window) {\n        return false;\n      }\n\n      // go here only if one of the mailgo modals are enabled\n      if (mailtoEnabled || telEnabled || smsEnabled) {\n        let localMailgoType = getMailgoTypeByElement(element);\n\n        // go on if the localMailgoType is not null\n        if (localMailgoType) {\n          // set the active mailgo type\n          activeMailgoType = localMailgoType;\n\n          let activeMailgoModalType = activeMailgoType?.type;\n\n          if (activeMailgoModalType) {\n            // check if the setting is enabled and if so go with pre-render\n            if (\n              (mailtoEnabled && activeMailgoModalType === MAILGO_MAIL) ||\n              (telEnabled && activeMailgoModalType === MAILGO_TEL) ||\n              (smsEnabled && activeMailgoModalType === MAILGO_SMS)\n            ) {\n              // stop the normal execution of the element click\n              event.preventDefault();\n\n              // render mailgo\n              mailgoPreRender(element as HTMLLinkElement);\n\n              return true;\n            }\n          }\n        }\n      }\n    });\n  }\n\n  return false;\n}\n\n/**\n * mailgoPreRender\n * function to pre-render a mailgo, it helps populating elements needed by modal\n */\nfunction mailgoPreRender(\n  mailgoElementOrUrl: HTMLLinkElement | string\n): boolean {\n  let mailgoElement: HTMLLinkElement;\n\n  // get the type and installation from current mailgo type\n  let type = activeMailgoType?.type;\n  let installation = activeMailgoType?.installation;\n\n  // if type is not defined return\n  if (!type) return false;\n\n  if (typeof mailgoElementOrUrl === \"string\") {\n    // if the parameter is a string it is the url\n    href = mailgoElementOrUrl as string;\n  } else {\n    // if the paramenter is an HTMLLinkElement get the href attribute and the element\n    href = mailgoElementOrUrl.href as string;\n    mailgoElement = mailgoElementOrUrl as HTMLLinkElement;\n  }\n\n  // if href is undefined or null return false\n  if (!href) {\n    return false;\n  }\n\n  // mailgo mail\n  if (type === MAILGO_MAIL) {\n    // if the installation is classic\n    if (installation === CLASSIC) {\n      if (validateUrl(href, MAILTO)) {\n        mail = decodeURIComponent(href.split(\"?\")[0].split(MAILTO)[1].trim());\n      } else if (validateUrl(href, MAILGO)) {\n        mail = decodeURIComponent(href.split(\"?\")[0].split(MAILGO)[1].trim());\n      }\n\n      try {\n        url = new URL(href);\n\n        let urlParams: URLSearchParams = url.searchParams;\n        // optional parameters for the email\n        cc = urlParams.get(\"cc\");\n        bcc = urlParams.get(\"bcc\");\n        subject = urlParams.get(\"subject\");\n        bodyMail = urlParams.get(\"body\");\n      } catch (error) {\n        // console.error(error);\n      }\n    } else if (installation === LESS_SPAM) {\n      // if the installation is less-spam\n      // mail = data-address + @ + data-domain\n      mail = mailgoElement.getAttribute(\"data-address\")\n        ? mailgoElement.getAttribute(\"data-address\") +\n          \"@\" +\n          mailgoElement.getAttribute(\"data-domain\")\n        : null;\n\n      try {\n        url = new URL(MAILTO + encodeURIComponent(mail));\n      } catch (error) {\n        // console.error(error);\n      }\n\n      let parameters: string[] = [];\n\n      // cc = data-cc-address + @ + data-cc-domain\n      cc = mailgoElement.getAttribute(\"data-cc-address\")\n        ? mailgoElement.getAttribute(\"data-cc-address\") +\n          \"@\" +\n          mailgoElement.getAttribute(\"data-cc-domain\")\n        : null;\n\n      // if cc is defined add it to parameters\n      if (cc) parameters.push(\"cc=\" + cc);\n\n      // bcc = data-bcc-address + @ + data-bcc-domain\n      bcc = mailgoElement.getAttribute(\"data-bcc-address\")\n        ? mailgoElement.getAttribute(\"data-bcc-address\") +\n          \"@\" +\n          mailgoElement.getAttribute(\"data-bcc-domain\")\n        : null;\n\n      // if bcc is defined add it to parameters\n      if (bcc) parameters.push(\"bcc=\" + bcc);\n\n      // subject = data-subject\n      subject = mailgoElement.getAttribute(\"data-subject\");\n\n      // if subject is defined add it to parameters\n      if (subject) parameters.push(\"subject=\" + subject);\n\n      // body = data-body\n      bodyMail = mailgoElement.getAttribute(\"data-body\");\n\n      // if body is defined add it to parameters\n      if (bodyMail) parameters.push(\"body=\" + bodyMail);\n\n      // set the lessSpamHref\n      lessSpamHref = buildLessSpamHref(\n        MAILTO + encodeURIComponent(mail),\n        parameters\n      );\n\n      console.log(lessSpamHref);\n    }\n\n    // if is in config use it\n    if (typeof config?.validateEmail !== \"undefined\") {\n      validateEmailConfig = config.validateEmail;\n    }\n\n    if (validateEmailConfig) {\n      // validate the email address\n      if (!validateEmails(mail.split(\",\"))) {\n        return false;\n      }\n\n      // if cc, bcc are not valid cc, bcc = \"\"\n      if (cc && !validateEmails(cc.split(\",\"))) cc = \"\";\n      if (bcc && !validateEmails(bcc.split(\",\"))) bcc = \"\";\n    }\n  }\n  // mailgo tel\n  else if (type === MAILGO_TEL) {\n    if (installation === CLASSIC) {\n      if (validateUrl(href, TEL)) {\n        tel = decodeURIComponent(href.split(\"?\")[0].split(TEL)[1].trim());\n      } else if (validateUrl(href, CALLTO)) {\n        tel = decodeURIComponent(href.split(\"?\")[0].split(CALLTO)[1].trim());\n      } else if (validateUrl(href, SMS)) {\n        tel = decodeURIComponent(href.split(\"?\")[0].split(SMS)[1].trim());\n      }\n\n      try {\n        url = new URL(href);\n        let urlParams: URLSearchParams = url.searchParams;\n\n        // optional parameters for the phone number\n        msg = urlParams.get(\"body\");\n      } catch (error) {\n        // console.error(error);\n      }\n    } else if (installation == LESS_SPAM) {\n      tel = mailgoElement.getAttribute(\"data-tel\");\n      msg = mailgoElement.getAttribute(\"data-msg\");\n\n      try {\n        url = new URL(TEL + encodeURIComponent(tel));\n      } catch (error) {\n        // console.error(error);\n      }\n\n      let parameters: string[] = [];\n\n      // if msg is defined add it to parameters\n      if (msg) parameters.push(\"body=\" + msg);\n\n      // set the lessSpamHref\n      lessSpamHref = buildLessSpamHref(\n        TEL + encodeURIComponent(tel),\n        parameters\n      );\n\n      console.log(lessSpamHref);\n    }\n\n    // if is in config use it\n    if (typeof config?.validateTel !== \"undefined\") {\n      validateTelConfig = config.validateTel;\n    }\n\n    // validate the phone number\n    if (validateTelConfig) {\n      if (!validateTel(tel)) return;\n    }\n\n    // Telegram username\n    if (mailgoElement && mailgoElement.hasAttribute(\"data-telegram\")) {\n      telegramUsername = mailgoElement.getAttribute(\"data-telegram\");\n    } else {\n      telegramUsername = null;\n    }\n\n    // Telegram username\n    if (mailgoElement && mailgoElement.hasAttribute(\"data-skype\")) {\n      skypeUsername = mailgoElement.getAttribute(\"data-skype\");\n    } else {\n      skypeUsername = null;\n    }\n  }\n\n  // if config.dark is set to true then all the modals will be in dark mode\n  if (mailgoElement && !config?.dark) {\n    // if the element contains dark as class enable dark mode\n    if (mailgoElement.classList.contains(\"dark\")) {\n      enableDarkMode();\n    } else {\n      disableDarkMode();\n    }\n  }\n\n  // render mailgo\n  mailgoRender();\n\n  return true;\n}\n\n/**\n * mailgoDirectRender\n * function to render a mailgo directly from a URL\n */\nfunction mailgoDirectRender(directUrl: string): boolean {\n  // start mailgo\n  mailgo();\n\n  if (validateUrl(directUrl, MAILTO) || validateUrl(directUrl, MAILGO)) {\n    activeMailgoType = {\n      type: MAILGO_MAIL,\n      installation: CLASSIC,\n    };\n    mailgoPreRender(directUrl);\n    return true;\n  } else if (\n    validateUrl(directUrl, TEL) ||\n    validateUrl(directUrl, CALLTO) ||\n    validateUrl(directUrl, SMS)\n  ) {\n    activeMailgoType = {\n      type: MAILGO_TEL,\n      installation: CLASSIC,\n    };\n    mailgoPreRender(directUrl);\n    return true;\n  }\n  return false;\n}\n\n/**\n * mailgoRender\n * function to render a mailgo (mail or tel)\n */\nfunction mailgoRender(): boolean {\n  // get the type from current mailgo type\n  let type = activeMailgoType?.type;\n\n  // if type is not defined return\n  if (!type) return false;\n\n  // mailgo mail\n  if (type === MAILGO_MAIL) {\n    // the title of the modal (email address)\n    title.innerHTML = mail.split(\",\").join(\"<br/>\");\n\n    // add the details if provided\n    if (cc) {\n      detailCc.style.display = \"block\";\n      ccValue.innerHTML = cc.split(\",\").join(\"<br/>\");\n    } else {\n      detailCc.style.display = \"none\";\n    }\n\n    if (bcc) {\n      detailBcc.style.display = \"block\";\n      bccValue.innerHTML = bcc.split(\",\").join(\"<br/>\");\n    } else {\n      detailBcc.style.display = \"none\";\n    }\n\n    if (subject) {\n      detailSubject.style.display = \"block\";\n      subjectValue.textContent = subject;\n    } else {\n      detailSubject.style.display = \"none\";\n    }\n\n    if (bodyMail) {\n      detailBody.style.display = \"block\";\n      bodyValue.textContent = bodyMail;\n    } else {\n      detailBody.style.display = \"none\";\n    }\n\n    // add the actions\n    gmail.addEventListener(\"click\", openGmail);\n\n    outlook.addEventListener(\"click\", openOutlook);\n\n    yahoo.addEventListener(\"click\", openYahooMail);\n\n    open.addEventListener(\"click\", openDefault);\n\n    copyMail.addEventListener(\"click\", copy);\n  }\n  // mailgo tel\n  else if (type === MAILGO_TEL) {\n    // the title of the modal (tel)\n    titleTel.innerHTML = tel;\n\n    if (msg) {\n      detailMsg.style.display = \"block\";\n      msgValue.textContent = msg;\n    } else {\n      detailMsg.style.display = \"none\";\n    }\n\n    // add the actions to buttons\n    wa.addEventListener(\"click\", openWhatsApp);\n\n    // telegram must be shown only if data-telegram is provided\n    if (telegramUsername) {\n      document.getElementById(\"m-tg\").style.display = \"block\";\n      telegram.addEventListener(\"click\", openTelegram);\n    } else {\n      document.getElementById(\"m-tg\").style.display = \"none\";\n    }\n\n    skype.addEventListener(\"click\", openSkype);\n\n    call.addEventListener(\"click\", openDefault);\n\n    copyTel.addEventListener(\"click\", copy);\n  }\n\n  // show the mailgo\n  showMailgo(type);\n\n  // add listener keyDown\n  document.addEventListener(\"keydown\", mailgoKeydown);\n\n  return true;\n}\n\n// actions\nconst openGmail = (event?: Event): void => {\n  event.preventDefault();\n\n  let urlString: string;\n\n  try {\n    urlString = url.toString();\n  } catch (e) {\n    urlString = href;\n  }\n\n  // Gmail url\n  let gmailUrl: string =\n    \"https://mail.google.com/mail/?extsrc=mailto&url=\" +\n    encodeURIComponent(urlString);\n\n  // open the link\n  window.open(gmailUrl, \"_blank\", \"noopener, noreferrer\");\n\n  // hide the modal\n  hideMailgo();\n};\n\nconst openOutlook = (event?: Event): void => {\n  event.preventDefault();\n\n  // Outlook url\n  let outlookUrl: string =\n    \"https://outlook.live.com/owa/?path=/mail/action/compose&to=\" +\n    encodeURIComponent(mail);\n\n  // the details if provided\n  if (subject) {\n    outlookUrl = outlookUrl.concat(\"&subject=\" + encodeURIComponent(subject));\n  }\n\n  if (bodyMail) {\n    outlookUrl = outlookUrl.concat(\"&body=\" + encodeURIComponent(bodyMail));\n  }\n\n  // open the link\n  window.open(outlookUrl, \"_blank\", \"noopener, noreferrer\");\n\n  // hide the modal\n  hideMailgo();\n};\n\nconst openYahooMail = (event?: Event): void => {\n  event.preventDefault();\n\n  // Yahoo url\n  let yahooUrl: string = \"https://compose.mail.yahoo.com/?to=\" + mail;\n\n  // the details if provided\n  if (subject) {\n    yahooUrl = yahooUrl.concat(\"&subject=\" + encodeURIComponent(subject));\n  }\n  if (bodyMail) {\n    yahooUrl = yahooUrl.concat(\"&body=\" + encodeURIComponent(bodyMail));\n  }\n\n  // open the link\n  window.open(yahooUrl, \"_blank\", \"noopener, noreferrer\");\n\n  // hide the modal\n  hideMailgo();\n};\n\nconst openTelegram = (event?: Event): void => {\n  event.preventDefault();\n\n  // check if telegramUsername exists\n  if (telegramUsername) {\n    // Telegram url\n    let tgUrl: string = \"https://t.me/\" + encodeURIComponent(telegramUsername);\n\n    // open the url\n    window.open(tgUrl, \"_blank\", \"noopener, noreferrer\");\n\n    // hide the modal\n    hideMailgo();\n  }\n};\n\nconst openSkype = (event?: Event): void => {\n  event.preventDefault();\n\n  let skype: string = skypeUsername || tel;\n\n  // Telegram url\n  let skypeUrl: string = \"skype:\" + encodeURIComponent(skype);\n\n  // open the url\n  window.open(skypeUrl, \"_blank\", \"noopener, noreferrer\");\n\n  // hide the modal\n  hideMailgo();\n};\n\nconst openWhatsApp = (event?: Event): void => {\n  event.preventDefault();\n\n  // WhatsApp url\n  let waUrl: string = \"https://wa.me/\" + encodeURIComponent(tel);\n\n  // the details if provided\n  if (msg) {\n    waUrl = waUrl.concat(\"?text=\" + msg);\n  }\n\n  // open the url\n  window.open(waUrl, \"_blank\", \"noopener, noreferrer\");\n\n  // hide the modal\n  hideMailgo();\n};\n\nconst openDefault = (event?: Event): void => {\n  event.preventDefault();\n\n  console.log(activeMailgoType);\n\n  let type = activeMailgoType?.type;\n  let installation = activeMailgoType?.installation;\n\n  // if the installation is classic the browser can follow the default behaviour\n  if (installation === CLASSIC) {\n    window.location.href = href;\n  } else if (installation === LESS_SPAM) {\n    // the case of less-spam installation, href is not present or not useful\n    let url: string;\n    let parameters: string[] = [];\n\n    if (type === MAILGO_MAIL) {\n      // main url\n      url = MAILTO + mail;\n    } else if (type === MAILGO_TEL) {\n      // main url\n      url = TEL + tel;\n    }\n\n    if (url) {\n      window.location.href = url;\n    }\n  }\n\n  hideMailgo();\n};\n\nconst copy = (event?: Event): void => {\n  event.preventDefault();\n\n  // the correct copyButton (mail or tel)\n  if (mailgoIsShowing()) {\n    let activeCopy: HTMLElement;\n\n    let type = activeMailgoType?.type;\n    if (type === MAILGO_MAIL) {\n      // in case it is showing mail modal copy email address\n      copyToClipboard(mail);\n      activeCopy = copyMail;\n    } else {\n      // in case it is showing tel modal copy phone number\n      copyToClipboard(tel);\n      activeCopy = copyTel;\n    }\n\n    activeCopy.textContent = strings.copied || defaultStrings.copied;\n    setTimeout(() => {\n      activeCopy.textContent = strings.copy || defaultStrings.copy;\n      // hide after the timeout\n      hideMailgo();\n    }, 999);\n  }\n};\n\n// function to find if a link is a mailto, tel, callto or sms\nconst validateUrl = (url: string, type: string = MAILTO) => {\n  let regexValidate = new RegExp(\"^\" + type, \"gi\");\n  return regexValidate.test(url);\n};\n\n// function that returns if an element is a mailgo\nfunction getMailgoTypeByElement(element: HTMLElement): MailgoType | null {\n  let elementHref: string = (element as HTMLLinkElement).getAttribute(\"href\");\n\n  // return null if there is no-mailgo in class\n  if (element.classList?.contains(NO_MAILGO)) {\n    return null;\n  }\n\n  if (elementHref || element.classList?.contains(\"mailgo\")) {\n    //\n    if (validateUrl(elementHref, MAILTO) || validateUrl(elementHref, MAILGO)) {\n      return {\n        type: MAILGO_MAIL,\n        installation: CLASSIC,\n      };\n    } else if (\n      validateUrl(elementHref, TEL) ||\n      validateUrl(elementHref, CALLTO)\n    ) {\n      return {\n        type: MAILGO_TEL,\n        installation: CLASSIC,\n      };\n    } else if (validateUrl(elementHref, SMS)) {\n      return {\n        type: MAILGO_SMS,\n        installation: CLASSIC,\n      };\n    }\n  }\n\n  if (elementHref === \"#mailgo\" || element.classList?.contains(\"mailgo\")) {\n    // GO ON\n    if (element.hasAttribute(\"data-address\")) {\n      return {\n        type: MAILGO_MAIL,\n        installation: LESS_SPAM,\n      };\n    } else if (element.hasAttribute(\"data-tel\")) {\n      return {\n        type: MAILGO_TEL,\n        installation: LESS_SPAM,\n      };\n    } else if (element.hasAttribute(\"data-msg\")) {\n      return {\n        type: MAILGO_SMS,\n        installation: LESS_SPAM,\n      };\n    }\n  }\n\n  return null;\n}\n\n/**\n * mailgoKeydown\n * function to manage the keydown event when the modal is showing, return a boolean that represents if a useful key has been pressed\n */\nconst mailgoKeydown = (keyboardEvent: KeyboardEvent): boolean => {\n  // if mailgo is showing\n  if (mailgoIsShowing()) {\n    let type = activeMailgoType?.type;\n\n    if (type === MAILGO_MAIL) {\n      switch (keyboardEvent.keyCode) {\n        case 27:\n          // Escape\n          hideMailgo();\n          return true;\n        case 71:\n          // g -> open GMail\n          openGmail();\n          return true;\n        case 79:\n          // o -> open Outlook\n          openOutlook();\n          return true;\n        case 89:\n          // y -> open Yahoo Mail\n          openYahooMail();\n          return true;\n        case 32:\n        case 13:\n          // spacebar or enter -> open default\n          openDefault();\n          return true;\n        case 67:\n          // c -> copy\n          copy();\n          return true;\n        default:\n          return false;\n      }\n    } else if (type === MAILGO_TEL) {\n      switch (keyboardEvent.keyCode) {\n        case 27:\n          // Escape\n          hideMailgo();\n          return true;\n        case 84:\n          // t -> open Telegram\n          openTelegram();\n          return true;\n        case 87:\n          // w -> open WhatsApp\n          openWhatsApp();\n          return true;\n        case 83:\n          // s -> open Skype\n          openSkype();\n          return true;\n        case 32:\n        case 13:\n          // spacebar or enter -> open default\n          openDefault();\n          return true;\n        case 67:\n          // c -> copy\n          copy();\n          return true;\n        default:\n          return false;\n      }\n    }\n  }\n  return false;\n};\n\n// show the modal\nconst showMailgo = (type: string): void => {\n  // show the correct modal\n  setModalDisplay(type, \"flex\");\n};\n\n// hide the modal\nconst hideMailgo = (): void => {\n  // hide all the modals\n  setModalDisplay(MAILGO_MAIL, \"none\");\n  setModalDisplay(MAILGO_TEL, \"none\");\n\n  // remove listener keyDown\n  document.removeEventListener(\"keydown\", mailgoKeydown);\n};\n\n// is the mailgo modal hidden?\nconst mailgoIsShowing = (): boolean => {\n  return (\n    getModalDisplay(MAILGO_MAIL) === \"flex\" ||\n    getModalDisplay(MAILGO_TEL) === \"flex\"\n  );\n};\n\nconst byElement = (): HTMLLinkElement => {\n  // by\n  let by: HTMLLinkElement = createElement(aHTMLTag) as HTMLLinkElement;\n  by.href = \"https://mailgo.dev?ref=mailgo-modal\";\n  by.className = \"m-by\";\n  by.target = \"_blank\";\n  by.rel = \"noopener noreferrer\";\n  by.appendChild(createTextNode(\"mailgo.dev\"));\n\n  return by;\n};\n\n// create element\nconst createElement = (element: string = \"div\"): HTMLElement =>\n  document.createElement(element);\n\n// create text node\nconst createTextNode = (element: string): Text =>\n  document.createTextNode(element);\n\n// get the correct HTMLElement from a type\nconst getModalHTMLElement = (type: string = MAILGO_MAIL) => {\n  if (type === MAILGO_TEL) {\n    return modalTel;\n  } else {\n    return modalMailto;\n  }\n};\n\n// get display value\nconst getModalDisplay = (ref: string = MAILGO_MAIL): string =>\n  getModalHTMLElement(ref).style.display;\n\n// set display value\nconst setModalDisplay = (ref: string = MAILGO_MAIL, value: string): void => {\n  let modal = getModalHTMLElement(ref);\n  modal.style.display = value;\n\n  if (value === \"flex\") {\n    // \"save\" the activated link.\n    activatedLink = document.activeElement as HTMLElement;\n    modal.setAttribute(\"aria-hidden\", \"false\");\n\n    // Focus on the modal container.\n    modal.setAttribute(\"tabindex\", \"0\");\n    modal.focus();\n    setFocusLoop(modal);\n  } else {\n    modal.setAttribute(\"aria-hidden\", \"true\");\n\n    // focus back the activated link for getting back to the context.\n    modal.setAttribute(\"tabindex\", \"-1\");\n    activatedLink.focus();\n  }\n};\n\n// enable dark mode\nconst enableDarkMode = () => {\n  // get the type from current mailgo type\n  let type = activeMailgoType?.type;\n  if (type) {\n    getModalHTMLElement(type).classList.add(\"m-dark\");\n  }\n};\n\n// disable dark mode\nconst disableDarkMode = () => {\n  // get the type from current mailgo type\n  let type = activeMailgoType?.type;\n  if (type) {\n    getModalHTMLElement(type).classList.remove(\"m-dark\");\n  }\n};\n\n// custom composedPath if path or event.composedPath() are not defined\nconst composedPath = (\n  el: HTMLElement\n): (HTMLElement | Document | (Window & typeof globalThis))[] => {\n  let path = [];\n\n  while (el) {\n    path.push(el);\n\n    if (el.tagName === \"HTML\") {\n      path.push(document);\n      path.push(window);\n      return path;\n    }\n\n    el = el.parentElement;\n  }\n};\n\n// function to recreate a mailto: or tel: href from less-spam\nconst buildLessSpamHref = (type: string, parameters: string[]): string => {\n  lessSpamHref = type;\n  if (parameters && parameters.length > 0) {\n    let joinedParams = parameters.join(\"&\");\n    lessSpamHref = lessSpamHref.concat(\"?\" + joinedParams);\n  }\n  return lessSpamHref;\n};\n\n// function to check an action is enabled or not\nconst mailgoActionEnabled = (action: MailgoAction): boolean => {\n  // by default all the actions are enabled\n  if (!config) {\n    return true;\n  }\n  if (config && !config?.actions) {\n    return true;\n  }\n\n  if (config && config.actions && config?.actions[action] === false) {\n    return false;\n  }\n\n  return true;\n};\n\n// manage the language of mailgo\nconst mailgoSetLanguage = (): string => {\n  let languageType = \"default lang\";\n\n  // if a language is defined in configuration use it\n  if (config?.lang && languages.indexOf(config.lang) !== -1) {\n    lang = config.lang;\n    languageType = \"config lang\";\n  } else {\n    // else if is defined <html lang=\"\"> use it!\n    // keep the lang from html\n    let htmlLang: string = document.documentElement.lang;\n\n    // find the correct language using the lang attribute, not just a === because there a are cases like fr-FR or fr_FR in html lang attribute\n    languages.forEach((language: any) => {\n      if (new RegExp(\"^\" + language, \"gi\").test(htmlLang)) {\n        lang = language;\n        languageType = \"html lang\";\n      }\n    });\n  }\n\n  // strings\n  strings = translations[lang];\n\n  return languageType;\n};\n\nconst mailgoStyle = (): void => {\n  if (!document.getElementById(\"mailgo-style\")) {\n    // mailgo style\n    let mailgoCSSElement: HTMLStyleElement = createElement(\n      \"style\"\n    ) as HTMLStyleElement;\n    mailgoCSSElement.id = \"mailgo-style\";\n    mailgoCSSElement.type = \"text/css\";\n    mailgoCSSElement.appendChild(createTextNode(mailgoCSS));\n    document.head.appendChild(mailgoCSSElement);\n  }\n};\n\n// mailgo\nfunction mailgo(mailgoConfig?: MailgoConfig): boolean {\n  try {\n    // polyfill mailgo\n    // mailgoPolyfill();\n\n    // set the global config merging window mailgConfig and mailgoConfig passed as a parameter\n    config = { ...mailgoConfig, ...((window as any)?.mailgoConfig || null) };\n\n    // if the window is defined...\n    if (typeof window !== \"undefined\") {\n      // if is set in config use it (load the mailgo CSS)\n      if (typeof config?.loadCSS !== \"undefined\") {\n        loadCSSConfig = config.loadCSS;\n      }\n\n      // if is set in config use it (enable mailto)\n      if (typeof config?.mailto !== \"undefined\") {\n        mailtoEnabled = config.mailto;\n      }\n\n      // if is set in config use it (enable tel)\n      if (typeof config?.tel !== \"undefined\") {\n        telEnabled = config.tel;\n      }\n\n      // if is set in config use it (enable sms)\n      if (typeof config?.sms !== \"undefined\") {\n        smsEnabled = config.sms;\n      }\n\n      // if load css enabled load it!\n      if (loadCSSConfig) {\n        // add the style for mailgo\n        mailgoStyle();\n      }\n\n      // if is set an initEvent add the listener\n      if (config?.initEvent) {\n        if (config?.listenerOptions) {\n          // listener options specified\n          document.addEventListener(\n            config.initEvent,\n            mailgoInit,\n            config.listenerOptions\n          );\n        } else {\n          // no listener options\n          document.addEventListener(config.initEvent, mailgoInit);\n        }\n      } else {\n        mailgoInit();\n      }\n\n      return true;\n    }\n  } catch (error) {\n    // console.error(error);\n  }\n  return false;\n}\n\n// define the methods also for window element\nif (typeof window !== \"undefined\") {\n  (window as any).getMailgoTypeByElement = getMailgoTypeByElement;\n  (window as any).mailgoCheckRender = mailgoCheckRender;\n  (window as any).mailgoPreRender = mailgoPreRender;\n  (window as any).mailgoDirectRender = mailgoDirectRender;\n  (window as any).mailgoRender = mailgoRender;\n  (window as any).mailgo = mailgo;\n}\n\nexport {\n  getMailgoTypeByElement,\n  mailgoCheckRender,\n  mailgoPreRender,\n  mailgoDirectRender,\n  mailgoRender,\n};\n\nexport default mailgo;\n","// webpack > extensions/mailgo.chrome.js\n// script to add in Chrome extension\n// https://github.com/manzinello/mailgo-chrome-extension\n\nimport mailgo from \"../src/mailgo\";\n\n// check if mailgo HTML is already present in the page\nlet mailgoExists = !!document.getElementById(\"mailgo\");\n\nif (!mailgoExists) mailgo();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(530);\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}